# coding: utf-8

"""
    AccuCampus OpenAPI 3 Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.default_api import DefaultApi  # noqa: E501
from openapi_client.rest import ApiException


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.default_api.DefaultApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_actionassignmentdelete(self):
        """Test case for actionassignmentdelete

        Remove an action item from an action plan  # noqa: E501
        """
        pass

    def test_actionassignmentget(self):
        """Test case for actionassignmentget

        Search and view details of an action item assigned to a user  # noqa: E501
        """
        pass

    def test_actionassignmentlist(self):
        """Test case for actionassignmentlist

        View a list of action items in a user's plan  # noqa: E501
        """
        pass

    def test_actionassignmentlisthistory(self):
        """Test case for actionassignmentlisthistory

        View the history of an action item assigned to a user  # noqa: E501
        """
        pass

    def test_actionassignmentlistmine(self):
        """Test case for actionassignmentlistmine

        List public action assignments assigned to the logged user  # noqa: E501
        """
        pass

    def test_actionassignmentlistpublichistory(self):
        """Test case for actionassignmentlistpublichistory

        List public action assignment history  # noqa: E501
        """
        pass

    def test_actionassignmentmarkcomplete(self):
        """Test case for actionassignmentmarkcomplete

        Bulk complete action items  # noqa: E501
        """
        pass

    def test_actionassignmentsave(self):
        """Test case for actionassignmentsave

        Add an action item to a user's action plan  # noqa: E501
        """
        pass

    def test_actionassignmentsavehistory(self):
        """Test case for actionassignmentsavehistory

        Update an action item assigned to a user  # noqa: E501
        """
        pass

    def test_actionitemdelete(self):
        """Test case for actionitemdelete

        Delete an action item  # noqa: E501
        """
        pass

    def test_actionitemget(self):
        """Test case for actionitemget

        Search and view details of an action item  # noqa: E501
        """
        pass

    def test_actionitemlist(self):
        """Test case for actionitemlist

        View a list of action items  # noqa: E501
        """
        pass

    def test_actionitemsave(self):
        """Test case for actionitemsave

        Create or edit an action item  # noqa: E501
        """
        pass

    def test_actionloglist(self):
        """Test case for actionloglist

        View a list of users action logs  # noqa: E501
        """
        pass

    def test_actionpackassign(self):
        """Test case for actionpackassign

        Assign an action item pack to a user  # noqa: E501
        """
        pass

    def test_actionpackdelete(self):
        """Test case for actionpackdelete

        Delete an action item pack  # noqa: E501
        """
        pass

    def test_actionpackget(self):
        """Test case for actionpackget

        View details of an action item pack  # noqa: E501
        """
        pass

    def test_actionpacklist(self):
        """Test case for actionpacklist

        View a list of action item packs  # noqa: E501
        """
        pass

    def test_actionpacksave(self):
        """Test case for actionpacksave

        Create or edit an action item pack  # noqa: E501
        """
        pass

    def test_actiontypedelete(self):
        """Test case for actiontypedelete

        Delete an action item type  # noqa: E501
        """
        pass

    def test_actiontypeget(self):
        """Test case for actiontypeget

        View details of an action item type  # noqa: E501
        """
        pass

    def test_actiontypelist(self):
        """Test case for actiontypelist

        View a list of action item types  # noqa: E501
        """
        pass

    def test_actiontypesave(self):
        """Test case for actiontypesave

        Create or edit an action item type  # noqa: E501
        """
        pass

    def test_adhocquerycheckexecution(self):
        """Test case for adhocquerycheckexecution

        Check the status of an ad hoc query execution  # noqa: E501
        """
        pass

    def test_adhocquerydelete(self):
        """Test case for adhocquerydelete

        Delete an ad hoc query  # noqa: E501
        """
        pass

    def test_adhocqueryexecute(self):
        """Test case for adhocqueryexecute

        Execute an ad hoc query  # noqa: E501
        """
        pass

    def test_adhocqueryget(self):
        """Test case for adhocqueryget

        View details of an ad hoc query  # noqa: E501
        """
        pass

    def test_adhocquerygetschema(self):
        """Test case for adhocquerygetschema

        View the database schema for making ad hoc queries  # noqa: E501
        """
        pass

    def test_adhocquerylist(self):
        """Test case for adhocquerylist

        View a list of saved ad hoc queries  # noqa: E501
        """
        pass

    def test_adhocquerylistexecutions(self):
        """Test case for adhocquerylistexecutions

        View a list of ad hoc queries executions  # noqa: E501
        """
        pass

    def test_adhocquerysave(self):
        """Test case for adhocquerysave

        Create or edit an ad hoc query  # noqa: E501
        """
        pass

    def test_adhocquerystopexecution(self):
        """Test case for adhocquerystopexecution

        Stops the execution of an ad hoc query  # noqa: E501
        """
        pass

    def test_adhocreportsreqaccess(self):
        """Test case for adhocreportsreqaccess

        Request access to the ad-hoc reports  # noqa: E501
        """
        pass

    def test_advancedstationcheckunknownuser(self):
        """Test case for advancedstationcheckunknownuser

        Check whether the user is known by the system.  # noqa: E501
        """
        pass

    def test_advancedstationcheckuserrole(self):
        """Test case for advancedstationcheckuserrole

        Check whether the user is a staff member, an attendee or both.  # noqa: E501
        """
        pass

    def test_advancedstationcreateuser(self):
        """Test case for advancedstationcreateuser

        Creates a user via a sign-in station.  # noqa: E501
        """
        pass

    def test_advancedstationgetevents(self):
        """Test case for advancedstationgetevents

        Gets the courses available for a specific location and a specific student.  # noqa: E501
        """
        pass

    def test_advancedstationgetinfo(self):
        """Test case for advancedstationgetinfo

        Gets the info to display in the sign-in station by it's ID.  # noqa: E501
        """
        pass

    def test_advancedstationgetlocations(self):
        """Test case for advancedstationgetlocations

        Gets the locations available in a sign-in station.  # noqa: E501
        """
        pass

    def test_advancedstationgetlogstaff(self):
        """Test case for advancedstationgetlogstaff

        Gets the staff/tutors available filtered by the location, course and services of the given attendance log.  # noqa: E501
        """
        pass

    def test_advancedstationgetroles(self):
        """Test case for advancedstationgetroles

        Gets the user roles of the user trying to sign-in.  # noqa: E501
        """
        pass

    def test_advancedstationgetservices(self):
        """Test case for advancedstationgetservices

        Gets the services available for a specific location.  # noqa: E501
        """
        pass

    def test_advancedstationgetstaff(self):
        """Test case for advancedstationgetstaff

        Gets the staff/tutors available for a specific location, course and service.  # noqa: E501
        """
        pass

    def test_advancedstationissignedin(self):
        """Test case for advancedstationissignedin

        Gets whether a user is signed-in or not.  # noqa: E501
        """
        pass

    def test_advroleaddmissing(self):
        """Test case for advroleaddmissing

        Adds the missing permissions to a role. Requires access to advrole.save  # noqa: E501
        """
        pass

    def test_advrolecheckperm(self):
        """Test case for advrolecheckperm

        Checks the permissions are assigned for the given roles  # noqa: E501
        """
        pass

    def test_advroledelete(self):
        """Test case for advroledelete

        Delete a role  # noqa: E501
        """
        pass

    def test_advroledeletemapping(self):
        """Test case for advroledeletemapping

        Delete a role mapping  # noqa: E501
        """
        pass

    def test_advroleget(self):
        """Test case for advroleget

        View details of a role  # noqa: E501
        """
        pass

    def test_advrolelist(self):
        """Test case for advrolelist

        Lists the roles for the current account  # noqa: E501
        """
        pass

    def test_advrolelistmaps(self):
        """Test case for advrolelistmaps

        Lists the maps a roles is mapped to  # noqa: E501
        """
        pass

    def test_advrolelistrolesmapped(self):
        """Test case for advrolelistrolesmapped

        Lists the roles mappings  # noqa: E501
        """
        pass

    def test_advrolelisttemplates(self):
        """Test case for advrolelisttemplates

        View a list of role templates  # noqa: E501
        """
        pass

    def test_advrolesave(self):
        """Test case for advrolesave

        Create or edit a role  # noqa: E501
        """
        pass

    def test_advrolesavemapping(self):
        """Test case for advrolesavemapping

        Saves a role mapping  # noqa: E501
        """
        pass

    def test_advrolesuserlist(self):
        """Test case for advrolesuserlist

        List users. Alias to user.list, use that one instead.  # noqa: E501
        """
        pass

    def test_advroleuserupgrade(self):
        """Test case for advroleuserupgrade

        Upgrade a user to another role (requires permission to edit those roles)  # noqa: E501
        """
        pass

    def test_appointmentcancel(self):
        """Test case for appointmentcancel

        Cancel an appointment  # noqa: E501
        """
        pass

    def test_appointmentcheckisvalid(self):
        """Test case for appointmentcheckisvalid

        Check if an appointment is valid or not  # noqa: E501
        """
        pass

    def test_appointmenteditanyway(self):
        """Test case for appointmenteditanyway

        Edit an appointment even if it breaks activated rules  # noqa: E501
        """
        pass

    def test_appointmenteditpresence(self):
        """Test case for appointmenteditpresence

        Edit the no-show status of an appointment  # noqa: E501
        """
        pass

    def test_appointmentfindallstaffslots(self):
        """Test case for appointmentfindallstaffslots

        Finds all staff available slots filtered by service, date, etc  # noqa: E501
        """
        pass

    def test_appointmentfindslots(self):
        """Test case for appointmentfindslots

        Finds available slots filtered by service, date, staff, etc  # noqa: E501
        """
        pass

    def test_appointmentfindstaff(self):
        """Test case for appointmentfindstaff

        Finds staff available by service, date, event, etc  # noqa: E501
        """
        pass

    def test_appointmentget(self):
        """Test case for appointmentget

        Search and view details of an appointment  # noqa: E501
        """
        pass

    def test_appointmentgetcurrent(self):
        """Test case for appointmentgetcurrent

        Get the current appointments for the user that is about to sign-in via the specified sign-in station.  # noqa: E501
        """
        pass

    def test_appointmentgetlocations(self):
        """Test case for appointmentgetlocations

        Find locations where a service is available  # noqa: E501
        """
        pass

    def test_appointmentlist(self):
        """Test case for appointmentlist

        View a list of appointments  # noqa: E501
        """
        pass

    def test_appointmentlistmine(self):
        """Test case for appointmentlistmine

        View all my upcoming appointments  # noqa: E501
        """
        pass

    def test_appointmentlistupcoming(self):
        """Test case for appointmentlistupcoming

        Search and view details of all my upcoming appointments  # noqa: E501
        """
        pass

    def test_appointmentrescheduleoutlook(self):
        """Test case for appointmentrescheduleoutlook

        Reschedule an appointment from MS Outlook.  # noqa: E501
        """
        pass

    def test_appointmentrestore(self):
        """Test case for appointmentrestore

        Restore an appointment  # noqa: E501
        """
        pass

    def test_appointmentrestoreanyway(self):
        """Test case for appointmentrestoreanyway

        Restore an appointment even if it breaks activated rules  # noqa: E501
        """
        pass

    def test_appointmentsave(self):
        """Test case for appointmentsave

        Schedule an appointment  # noqa: E501
        """
        pass

    def test_appointmentsetasvalid(self):
        """Test case for appointmentsetasvalid

        Schedule an appointment even if it breaks activated rules  # noqa: E501
        """
        pass

    def test_appointmentsuggestlocations(self):
        """Test case for appointmentsuggestlocations

        View the locations with most appointments  # noqa: E501
        """
        pass

    def test_appointmentsuggestservices(self):
        """Test case for appointmentsuggestservices

        View the services with most appointments  # noqa: E501
        """
        pass

    def test_appointmentvoid(self):
        """Test case for appointmentvoid

        Void an appointment  # noqa: E501
        """
        pass

    def test_appsharegetphone(self):
        """Test case for appsharegetphone

        Gets the phone number of the current user  # noqa: E501
        """
        pass

    def test_appsharesendtext(self):
        """Test case for appsharesendtext

        Sends an SMS with the link to the app  # noqa: E501
        """
        pass

    def test_attendancelogcommentdelete(self):
        """Test case for attendancelogcommentdelete

        Delete a comment on an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogcommentget(self):
        """Test case for attendancelogcommentget

        View a comment on an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogcommentlist(self):
        """Test case for attendancelogcommentlist

        View all the comments on a specific attendance log  # noqa: E501
        """
        pass

    def test_attendancelogcommentsave(self):
        """Test case for attendancelogcommentsave

        Save a comment on an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogdelete(self):
        """Test case for attendancelogdelete

        Delete an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogget(self):
        """Test case for attendancelogget

        Search and view details of an attendance log  # noqa: E501
        """
        pass

    def test_attendanceloggetchangehistory(self):
        """Test case for attendanceloggetchangehistory

        Search and view details of an attendance log's swipe history  # noqa: E501
        """
        pass

    def test_attendanceloglist(self):
        """Test case for attendanceloglist

        View a list of attendance logs  # noqa: E501
        """
        pass

    def test_attendanceloglistmine(self):
        """Test case for attendanceloglistmine

        Gets the attendance logs of the current user  # noqa: E501
        """
        pass

    def test_attendancelogliststaff(self):
        """Test case for attendancelogliststaff

        Gets the attendance logs that the current user is involved in as staff  # noqa: E501
        """
        pass

    def test_attendancelogsave(self):
        """Test case for attendancelogsave

        Create or edit an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogsignout(self):
        """Test case for attendancelogsignout

        Sign out an attendance log  # noqa: E501
        """
        pass

    def test_attendancelogwhosin(self):
        """Test case for attendancelogwhosin

        View who's in a location  # noqa: E501
        """
        pass

    def test_attendancerestrictiondelete(self):
        """Test case for attendancerestrictiondelete

        Delete an attendance restriction  # noqa: E501
        """
        pass

    def test_attendancerestrictionget(self):
        """Test case for attendancerestrictionget

        View details of an attendance restriction  # noqa: E501
        """
        pass

    def test_attendancerestrictionlist(self):
        """Test case for attendancerestrictionlist

        View a list of attendance restrictions  # noqa: E501
        """
        pass

    def test_attendancerestrictionsave(self):
        """Test case for attendancerestrictionsave

        Create or edit an attendance restriction  # noqa: E501
        """
        pass

    def test_beacondelete(self):
        """Test case for beacondelete

        Delete a beacon profile  # noqa: E501
        """
        pass

    def test_beacondisable(self):
        """Test case for beacondisable

        Disable beacon support account wide  # noqa: E501
        """
        pass

    def test_beaconget(self):
        """Test case for beaconget

        View details of a beacon profile  # noqa: E501
        """
        pass

    def test_beacongetlocations(self):
        """Test case for beacongetlocations

        Get the sign-in stations assigned to specific beacons.  # noqa: E501
        """
        pass

    def test_beacongetstationlocation(self):
        """Test case for beacongetstationlocation

        Get the location settings in the specified sign-in station.  # noqa: E501
        """
        pass

    def test_beacongetuuid(self):
        """Test case for beacongetuuid

        View the identifier for the account's beacon region (for sign-in stations).  # noqa: E501
        """
        pass

    def test_beaconlist(self):
        """Test case for beaconlist

        View a list of beacon profiles  # noqa: E501
        """
        pass

    def test_beaconlistprofiles(self):
        """Test case for beaconlistprofiles

        View a list of beacon profiles with their characteristics  # noqa: E501
        """
        pass

    def test_beaconresetuuid(self):
        """Test case for beaconresetuuid

        Generate or reset the identifier for the account's beacon region.  # noqa: E501
        """
        pass

    def test_beaconsave(self):
        """Test case for beaconsave

        Create or edit a beacon profile  # noqa: E501
        """
        pass

    def test_beaconscanlocations(self):
        """Test case for beaconscanlocations

        Check if there's location available to sign-in / out.  # noqa: E501
        """
        pass

    def test_beaconsetuuid(self):
        """Test case for beaconsetuuid

        Set the identifier for the account's beacon region (for sign-in stations).  # noqa: E501
        """
        pass

    def test_beaconsilentregions(self):
        """Test case for beaconsilentregions

        View all the beacon regions defined for silent tracking  # noqa: E501
        """
        pass

    def test_beaconsilentsignin(self):
        """Test case for beaconsilentsignin

        Sign-in silently from the location specified by a beacon  # noqa: E501
        """
        pass

    def test_beaconsilentsignout(self):
        """Test case for beaconsilentsignout

        Sign-out silently from the location specified by a beacon  # noqa: E501
        """
        pass

    def test_bgjobgetstatus(self):
        """Test case for bgjobgetstatus

        Get background job status  # noqa: E501
        """
        pass

    def test_call_import(self):
        """Test case for call_import

        Import data into AccuCampus  # noqa: E501
        """
        pass

    def test_captchagetchallenge(self):
        """Test case for captchagetchallenge

        Gets a captcha challenge that the user must complete to do certain requests.  # noqa: E501
        """
        pass

    def test_captchagetimage(self):
        """Test case for captchagetimage

        Gets a captcha image that the user must complete to do certain requests.  # noqa: E501
        """
        pass

    def test_changelog(self):
        """Test case for changelog

        Get the application change log  # noqa: E501
        """
        pass

    def test_clientget(self):
        """Test case for clientget

        Get client  # noqa: E501
        """
        pass

    def test_clientlist(self):
        """Test case for clientlist

        Gets the clients of the specified conference  # noqa: E501
        """
        pass

    def test_clientsave(self):
        """Test case for clientsave

        Saves a client  # noqa: E501
        """
        pass

    def test_clientsendmessage(self):
        """Test case for clientsendmessage

        Send a message to a client  # noqa: E501
        """
        pass

    def test_communityinvite(self):
        """Test case for communityinvite

        Sends an invitation to everyone to AccuCampus Communities  # noqa: E501
        """
        pass

    def test_communityjoin(self):
        """Test case for communityjoin

        Sends an invitation for myself to AccuCampus Communities  # noqa: E501
        """
        pass

    def test_compasscategorydelete(self):
        """Test case for compasscategorydelete

        Delete a compass category  # noqa: E501
        """
        pass

    def test_compasscategoryget(self):
        """Test case for compasscategoryget

        View details of a compass category  # noqa: E501
        """
        pass

    def test_compasscategorylist(self):
        """Test case for compasscategorylist

        View a list of compass categories  # noqa: E501
        """
        pass

    def test_compasscategorysave(self):
        """Test case for compasscategorysave

        Create or edit a compass category  # noqa: E501
        """
        pass

    def test_compassservicelist(self):
        """Test case for compassservicelist

        View all the services added to the compass  # noqa: E501
        """
        pass

    def test_compassservicelistlocations(self):
        """Test case for compassservicelistlocations

        View all the locations where a service added to the compass is available  # noqa: E501
        """
        pass

    def test_computerlabdeletecomputer(self):
        """Test case for computerlabdeletecomputer

        Delete a computer  # noqa: E501
        """
        pass

    def test_computerlabgetcomputer(self):
        """Test case for computerlabgetcomputer

        Search and view details of a computer  # noqa: E501
        """
        pass

    def test_computerlabgetsettings(self):
        """Test case for computerlabgetsettings

        Loads the settings for a computer lab  # noqa: E501
        """
        pass

    def test_computerlabissignedin(self):
        """Test case for computerlabissignedin

        Gets whether a user is signed-in or not.  # noqa: E501
        """
        pass

    def test_computerlablistcomputers(self):
        """Test case for computerlablistcomputers

        View a list of computers  # noqa: E501
        """
        pass

    def test_computerlablistlabs(self):
        """Test case for computerlablistlabs

        View a list of the locations that use the Computer Lab add-on  # noqa: E501
        """
        pass

    def test_computerlabliststations(self):
        """Test case for computerlabliststations

        View a list of sign-in stations available for computer labs.  # noqa: E501
        """
        pass

    def test_computerlabsavecomputer(self):
        """Test case for computerlabsavecomputer

        Create or edit a computer  # noqa: E501
        """
        pass

    def test_computerlabsavesettings(self):
        """Test case for computerlabsavesettings

        Saves the settings for a computer lab  # noqa: E501
        """
        pass

    def test_computerlabsaveswipe(self):
        """Test case for computerlabsaveswipe

        Save a new swipe from a computer in a computer lab.  # noqa: E501
        """
        pass

    def test_deadendrecordingdelete(self):
        """Test case for deadendrecordingdelete

        Deletes a dead-end record group  # noqa: E501
        """
        pass

    def test_deadendrecordinglist(self):
        """Test case for deadendrecordinglist

        Lists the recorded dead ends, if enabled  # noqa: E501
        """
        pass

    def test_deadendrecordinglistcomments(self):
        """Test case for deadendrecordinglistcomments

        Lists the comments for a specific dead end  # noqa: E501
        """
        pass

    def test_deadendrecordingsave(self):
        """Test case for deadendrecordingsave

        Saves a dead-end record  # noqa: E501
        """
        pass

    def test_departmentdelete(self):
        """Test case for departmentdelete

        Delete a college department  # noqa: E501
        """
        pass

    def test_departmentget(self):
        """Test case for departmentget

        Search and view details of a college department  # noqa: E501
        """
        pass

    def test_departmentlist(self):
        """Test case for departmentlist

        View a list of college departments  # noqa: E501
        """
        pass

    def test_departmentsave(self):
        """Test case for departmentsave

        Create or edit a college department  # noqa: E501
        """
        pass

    def test_doc(self):
        """Test case for doc

        Get the documentation  # noqa: E501
        """
        pass

    def test_easyloginaddbgimage(self):
        """Test case for easyloginaddbgimage

        Adds background image for the login  # noqa: E501
        """
        pass

    def test_eventchecksessions(self):
        """Test case for eventchecksessions

        Edit an event's sessions according to their schedule  # noqa: E501
        """
        pass

    def test_eventdelete(self):
        """Test case for eventdelete

        Delete a course  # noqa: E501
        """
        pass

    def test_eventget(self):
        """Test case for eventget

        Search and view details of a course  # noqa: E501
        """
        pass

    def test_eventgetsessionsbydate(self):
        """Test case for eventgetsessionsbydate

        View a list of courses by date  # noqa: E501
        """
        pass

    def test_eventlist(self):
        """Test case for eventlist

        View a list of courses  # noqa: E501
        """
        pass

    def test_eventlistregistered(self):
        """Test case for eventlistregistered

        View a list of courses I am registered to  # noqa: E501
        """
        pass

    def test_eventregaddme(self):
        """Test case for eventregaddme

        Register current user to a course  # noqa: E501
        """
        pass

    def test_eventregaddmetoall(self):
        """Test case for eventregaddmetoall

        Register current user to all courses  # noqa: E501
        """
        pass

    def test_eventregaddmetogroup(self):
        """Test case for eventregaddmetogroup

        Register current user to a course group  # noqa: E501
        """
        pass

    def test_eventregadduser(self):
        """Test case for eventregadduser

        Register a user to a course for attendance  # noqa: E501
        """
        pass

    def test_eventregaddusertoall(self):
        """Test case for eventregaddusertoall

        Register a user to assist with all courses  # noqa: E501
        """
        pass

    def test_eventregaddusertogroup(self):
        """Test case for eventregaddusertogroup

        Register a user to an course group  # noqa: E501
        """
        pass

    def test_eventreggetevents(self):
        """Test case for eventreggetevents

        View course registration by user  # noqa: E501
        """
        pass

    def test_eventreggetgroups(self):
        """Test case for eventreggetgroups

        Lists the course group registrations of a user  # noqa: E501
        """
        pass

    def test_eventreggetmyevents(self):
        """Test case for eventreggetmyevents

        View the event registrations of the current user  # noqa: E501
        """
        pass

    def test_eventreggetmygroups(self):
        """Test case for eventreggetmygroups

        View all current user registrations to course groups  # noqa: E501
        """
        pass

    def test_eventreggetusers(self):
        """Test case for eventreggetusers

        View course registration  # noqa: E501
        """
        pass

    def test_eventreggetusersfromgroup(self):
        """Test case for eventreggetusersfromgroup

        Lists the registrations for a course group  # noqa: E501
        """
        pass

    def test_eventreggetuserstoall(self):
        """Test case for eventreggetuserstoall

        View the users that are registered to all courses  # noqa: E501
        """
        pass

    def test_eventregremoveme(self):
        """Test case for eventregremoveme

        Unregister current user from a course  # noqa: E501
        """
        pass

    def test_eventregremovemefromall(self):
        """Test case for eventregremovemefromall

        Remove current user from the registration to all courses  # noqa: E501
        """
        pass

    def test_eventregremovemefromgroup(self):
        """Test case for eventregremovemefromgroup

        Remove current user from a course group  # noqa: E501
        """
        pass

    def test_eventregremoveuser(self):
        """Test case for eventregremoveuser

        Remove a user from a course  # noqa: E501
        """
        pass

    def test_eventregremoveuserfromall(self):
        """Test case for eventregremoveuserfromall

        Remove a user from the registration to all courses  # noqa: E501
        """
        pass

    def test_eventregremoveuserfromgroup(self):
        """Test case for eventregremoveuserfromgroup

        Remove a user from a course group  # noqa: E501
        """
        pass

    def test_eventsave(self):
        """Test case for eventsave

        Create or edit a course  # noqa: E501
        """
        pass

    def test_eventsearchgroup(self):
        """Test case for eventsearchgroup

        Searches for the available event groups  # noqa: E501
        """
        pass

    def test_export(self):
        """Test case for export

        Export AccuCampus data  # noqa: E501
        """
        pass

    def test_exportlisttypes(self):
        """Test case for exportlisttypes

        Lists available export types  # noqa: E501
        """
        pass

    def test_featurelist(self):
        """Test case for featurelist

        Lists the available features.  # noqa: E501
        """
        pass

    def test_holidaylist(self):
        """Test case for holidaylist

        View a list of entered holidays  # noqa: E501
        """
        pass

    def test_holidaysave(self):
        """Test case for holidaysave

        Create or edit a list of holidays  # noqa: E501
        """
        pass

    def test_holidaysuggest(self):
        """Test case for holidaysuggest

        View the holiday suggestions in the given term  # noqa: E501
        """
        pass

    def test_importlisttypes(self):
        """Test case for importlisttypes

        Lists available import types  # noqa: E501
        """
        pass

    def test_interactiondelete(self):
        """Test case for interactiondelete

        Delete an interaction  # noqa: E501
        """
        pass

    def test_interactionfeed(self):
        """Test case for interactionfeed

        Get the interactions feed  # noqa: E501
        """
        pass

    def test_interactionget(self):
        """Test case for interactionget

        View an interaction  # noqa: E501
        """
        pass

    def test_interactionlistprivatesummary(self):
        """Test case for interactionlistprivatesummary

        Get current user's latest private interactions  # noqa: E501
        """
        pass

    def test_interactionsave(self):
        """Test case for interactionsave

        Save an interaction  # noqa: E501
        """
        pass

    def test_licenseacceptagreement(self):
        """Test case for licenseacceptagreement

        Accept the license agreement  # noqa: E501
        """
        pass

    def test_licensegetagreementstatus(self):
        """Test case for licensegetagreementstatus

        Check if license agreement has been accepted  # noqa: E501
        """
        pass

    def test_licensegetcurrent(self):
        """Test case for licensegetcurrent

        Gets the current license information  # noqa: E501
        """
        pass

    def test_licenserenew(self):
        """Test case for licenserenew

        Contact Engineerica in order to renew the AccuCampus subscription  # noqa: E501
        """
        pass

    def test_likedelete(self):
        """Test case for likedelete

        Delete a like  # noqa: E501
        """
        pass

    def test_likelist(self):
        """Test case for likelist

        View all the likes associated to a target  # noqa: E501
        """
        pass

    def test_likesave(self):
        """Test case for likesave

        Save a like  # noqa: E501
        """
        pass

    def test_listtimezones(self):
        """Test case for listtimezones

        Lists the available timezones  # noqa: E501
        """
        pass

    def test_locationdelete(self):
        """Test case for locationdelete

        Delete a location  # noqa: E501
        """
        pass

    def test_locationget(self):
        """Test case for locationget

        Search and view details of a location  # noqa: E501
        """
        pass

    def test_locationlist(self):
        """Test case for locationlist

        View a list of locations  # noqa: E501
        """
        pass

    def test_locationsave(self):
        """Test case for locationsave

        Create or edit a location  # noqa: E501
        """
        pass

    def test_login(self):
        """Test case for login

        Login  # noqa: E501
        """
        pass

    def test_logout(self):
        """Test case for logout

        Logout  # noqa: E501
        """
        pass

    def test_mediacheckin(self):
        """Test case for mediacheckin

        Check in media item  # noqa: E501
        """
        pass

    def test_mediacheckout(self):
        """Test case for mediacheckout

        Check out media item  # noqa: E501
        """
        pass

    def test_mediacheckoutlist(self):
        """Test case for mediacheckoutlist

        View a list of past media checkouts  # noqa: E501
        """
        pass

    def test_mediadelete(self):
        """Test case for mediadelete

        Delete a media item  # noqa: E501
        """
        pass

    def test_mediadeletecheckoutlog(self):
        """Test case for mediadeletecheckoutlog

        Delete a media checkout log  # noqa: E501
        """
        pass

    def test_mediaget(self):
        """Test case for mediaget

        Search and view details of a media item  # noqa: E501
        """
        pass

    def test_mediagetbycode(self):
        """Test case for mediagetbycode

        Search media item by unique code  # noqa: E501
        """
        pass

    def test_mediagetcheckout(self):
        """Test case for mediagetcheckout

        View details of a media item checkout information  # noqa: E501
        """
        pass

    def test_mediagetcheckoutlog(self):
        """Test case for mediagetcheckoutlog

        View details of a media checkout log  # noqa: E501
        """
        pass

    def test_medialist(self):
        """Test case for medialist

        View a list of media items  # noqa: E501
        """
        pass

    def test_mediasave(self):
        """Test case for mediasave

        Create or edit a media item  # noqa: E501
        """
        pass

    def test_mediatypedelete(self):
        """Test case for mediatypedelete

        Delete a media type  # noqa: E501
        """
        pass

    def test_mediatypeget(self):
        """Test case for mediatypeget

        Search and view details of a media type  # noqa: E501
        """
        pass

    def test_mediatypelist(self):
        """Test case for mediatypelist

        View a list of media types  # noqa: E501
        """
        pass

    def test_mediatypesave(self):
        """Test case for mediatypesave

        Create or edit a media type  # noqa: E501
        """
        pass

    def test_memorizedreportdelete(self):
        """Test case for memorizedreportdelete

        Delete memorized report  # noqa: E501
        """
        pass

    def test_memorizedreportget(self):
        """Test case for memorizedreportget

        View details of a memorized report  # noqa: E501
        """
        pass

    def test_memorizedreportlist(self):
        """Test case for memorizedreportlist

        View a list of all his memorized reports  # noqa: E501
        """
        pass

    def test_memorizedreportsave(self):
        """Test case for memorizedreportsave

        Create or edit a memorized report  # noqa: E501
        """
        pass

    def test_menugetitems(self):
        """Test case for menugetitems

        Gets the items on the menu  # noqa: E501
        """
        pass

    def test_myaccount(self):
        """Test case for myaccount

        Gets the logged in user account.  # noqa: E501
        """
        pass

    def test_myianatimezone(self):
        """Test case for myianatimezone

        Gets the current time zone's iana name  # noqa: E501
        """
        pass

    def test_myprofile(self):
        """Test case for myprofile

        Gets the logged in user information.  # noqa: E501
        """
        pass

    def test_myrights(self):
        """Test case for myrights

        Gets the list of actions the user can execute.  # noqa: E501
        """
        pass

    def test_mysaveprofile(self):
        """Test case for mysaveprofile

        Updates logged user's profile information  # noqa: E501
        """
        pass

    def test_notificationdelete(self):
        """Test case for notificationdelete

        Delete a notification  # noqa: E501
        """
        pass

    def test_notificationget(self):
        """Test case for notificationget

        View a notification  # noqa: E501
        """
        pass

    def test_notificationgetforstation(self):
        """Test case for notificationgetforstation

        Gets all public (in station) notifications for the specific user  # noqa: E501
        """
        pass

    def test_notificationgetunreadcount(self):
        """Test case for notificationgetunreadcount

        Get the number of unread notifications  # noqa: E501
        """
        pass

    def test_notificationlist(self):
        """Test case for notificationlist

        View a list of all sent notifications  # noqa: E501
        """
        pass

    def test_notificationlistmine(self):
        """Test case for notificationlistmine

        View all the notifications sent to the current user  # noqa: E501
        """
        pass

    def test_notificationmarkasread(self):
        """Test case for notificationmarkasread

        Mark a notification as read  # noqa: E501
        """
        pass

    def test_notificationmarkasunread(self):
        """Test case for notificationmarkasunread

        Mark a notification as unread  # noqa: E501
        """
        pass

    def test_notificationsend(self):
        """Test case for notificationsend

        Send notifications on screen, via email or text to users  # noqa: E501
        """
        pass

    def test_notificationsendonscreen(self):
        """Test case for notificationsendonscreen

        Send on-screen notifications  # noqa: E501
        """
        pass

    def test_notificationtopicdelete(self):
        """Test case for notificationtopicdelete

        Delete a notification topic  # noqa: E501
        """
        pass

    def test_notificationtopicget(self):
        """Test case for notificationtopicget

        Search and view details of a notification topic  # noqa: E501
        """
        pass

    def test_notificationtopiclist(self):
        """Test case for notificationtopiclist

        List all the notification topics  # noqa: E501
        """
        pass

    def test_notificationtopiclistsubscribe(self):
        """Test case for notificationtopiclistsubscribe

        List all the notification topics available to subscribe  # noqa: E501
        """
        pass

    def test_notificationtopicsave(self):
        """Test case for notificationtopicsave

        Create or edit a notification topic  # noqa: E501
        """
        pass

    def test_pushderegister(self):
        """Test case for pushderegister

        Deregisters the current device to receive push notifications  # noqa: E501
        """
        pass

    def test_pushregister(self):
        """Test case for pushregister

        Registers the current device to receive push notifications  # noqa: E501
        """
        pass

    def test_qrlabelsprint(self):
        """Test case for qrlabelsprint

        Print and email QR labels  # noqa: E501
        """
        pass

    def test_qrloginget(self):
        """Test case for qrloginget

        Gets an image of a QR token  # noqa: E501
        """
        pass

    def test_qrloginlogin(self):
        """Test case for qrloginlogin

        Login  # noqa: E501
        """
        pass

    def test_quickpaneldeletewidget(self):
        """Test case for quickpaneldeletewidget

        Deletes a widget from the Quick Panel  # noqa: E501
        """
        pass

    def test_quickpanelfetchwidget(self):
        """Test case for quickpanelfetchwidget

        Fetches the information for a specific widget.  # noqa: E501
        """
        pass

    def test_quickpanelgetwidget(self):
        """Test case for quickpanelgetwidget

        View details of a widget included in the Quick Panel  # noqa: E501
        """
        pass

    def test_quickpanelinit(self):
        """Test case for quickpanelinit

        Returns the initial information required to show the quick panels  # noqa: E501
        """
        pass

    def test_quickpanellistwidgets(self):
        """Test case for quickpanellistwidgets

        Lists all the widgets that are added in the Quick Panel  # noqa: E501
        """
        pass

    def test_quickpanellistwidgettypes(self):
        """Test case for quickpanellistwidgettypes

        Lists all the widget types available in the system  # noqa: E501
        """
        pass

    def test_quickpanelreorderwidgets(self):
        """Test case for quickpanelreorderwidgets

        Reorders the widgets and moves them to a specific column  # noqa: E501
        """
        pass

    def test_quickpanelsavewidget(self):
        """Test case for quickpanelsavewidget

        Saves a widget for the Quick Panel  # noqa: E501
        """
        pass

    def test_ratingflag(self):
        """Test case for ratingflag

        Flags one rating for moderation  # noqa: E501
        """
        pass

    def test_ratingflagcomment(self):
        """Test case for ratingflagcomment

        Flags one comment for moderation  # noqa: E501
        """
        pass

    def test_ratingget(self):
        """Test case for ratingget

        Get rating for one or more entities  # noqa: E501
        """
        pass

    def test_ratinggetall(self):
        """Test case for ratinggetall

        Gets the full ratings and comments for a specific entity  # noqa: E501
        """
        pass

    def test_ratinggetcomments(self):
        """Test case for ratinggetcomments

        Gets all the comments for a rating  # noqa: E501
        """
        pass

    def test_ratinggetpending(self):
        """Test case for ratinggetpending

        Gets info of pre-saved and pre-approved ratings  # noqa: E501
        """
        pass

    def test_ratinggetpendingmoderation(self):
        """Test case for ratinggetpendingmoderation

        Shows a list of the ratings and comments that are pending for moderation  # noqa: E501
        """
        pass

    def test_ratingmoderate(self):
        """Test case for ratingmoderate

        Allows the user to accept or reject a comment  # noqa: E501
        """
        pass

    def test_ratingpostcomment(self):
        """Test case for ratingpostcomment

        Posts a comments for in a rating  # noqa: E501
        """
        pass

    def test_ratingrate(self):
        """Test case for ratingrate

        Rates one entity  # noqa: E501
        """
        pass

    def test_ratingratepending(self):
        """Test case for ratingratepending

        Rates a pre-saved and pre-approved entity  # noqa: E501
        """
        pass

    def test_ratingvote(self):
        """Test case for ratingvote

        Votes up or down a rating  # noqa: E501
        """
        pass

    def test_reportattanalyticsprepare(self):
        """Test case for reportattanalyticsprepare

        Query and load an attendance analytics report  # noqa: E501
        """
        pass

    def test_reportlist(self):
        """Test case for reportlist

        View a list of available reports  # noqa: E501
        """
        pass

    def test_reportpermissionsbyuser(self):
        """Test case for reportpermissionsbyuser

        Permissions by user report  # noqa: E501
        """
        pass

    def test_reportprepare(self):
        """Test case for reportprepare

        Queries and loads the specified report, in background.  # noqa: E501
        """
        pass

    def test_reportquery(self):
        """Test case for reportquery

        Query and load a specified report  # noqa: E501
        """
        pass

    def test_reportscheduledelete(self):
        """Test case for reportscheduledelete

        Delete a report schedule  # noqa: E501
        """
        pass

    def test_reportscheduleget(self):
        """Test case for reportscheduleget

        Get a report schedule  # noqa: E501
        """
        pass

    def test_reportschedulelist(self):
        """Test case for reportschedulelist

        View a list of the scheduled reports  # noqa: E501
        """
        pass

    def test_reportschedulesave(self):
        """Test case for reportschedulesave

        Create or edit a report schedule  # noqa: E501
        """
        pass

    def test_reporttagresults(self):
        """Test case for reporttagresults

        Queries and loads a report in background and assigns (or unassigns) the specified tags to (from) the resulting users.  # noqa: E501
        """
        pass

    def test_riskmodelcheckanalysis(self):
        """Test case for riskmodelcheckanalysis

        Check the status of the analysis of a specified risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodeldelete(self):
        """Test case for riskmodeldelete

        Delete a risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodelget(self):
        """Test case for riskmodelget

        View details of a risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodelgetscore(self):
        """Test case for riskmodelgetscore

        View the risk score for a specific user  # noqa: E501
        """
        pass

    def test_riskmodellist(self):
        """Test case for riskmodellist

        View a list of risk assessment models  # noqa: E501
        """
        pass

    def test_riskmodelpredict(self):
        """Test case for riskmodelpredict

        Predict risk based on an assessment model  # noqa: E501
        """
        pass

    def test_riskmodelprocess(self):
        """Test case for riskmodelprocess

        Process a risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodelrefresh(self):
        """Test case for riskmodelrefresh

        Refresh the information used in a risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodelsave(self):
        """Test case for riskmodelsave

        Create or edit a risk assessment model  # noqa: E501
        """
        pass

    def test_riskmodeltermprecedences(self):
        """Test case for riskmodeltermprecedences

        View all default term precedences  # noqa: E501
        """
        pass

    def test_rolelist(self):
        """Test case for rolelist

        Show a list of roles  # noqa: E501
        """
        pass

    def test_ruledelete(self):
        """Test case for ruledelete

        Delete a rule  # noqa: E501
        """
        pass

    def test_ruleget(self):
        """Test case for ruleget

        View details of a rule  # noqa: E501
        """
        pass

    def test_rulegeteventtype(self):
        """Test case for rulegeteventtype

        View details of a rule event type  # noqa: E501
        """
        pass

    def test_rulelist(self):
        """Test case for rulelist

        View a list of user rules  # noqa: E501
        """
        pass

    def test_rulelistactions(self):
        """Test case for rulelistactions

        View a list of rule actions available  # noqa: E501
        """
        pass

    def test_rulelisteventtypes(self):
        """Test case for rulelisteventtypes

        View a list of rule event types  # noqa: E501
        """
        pass

    def test_rulelisthttprequests(self):
        """Test case for rulelisthttprequests

        View all the http requests sent as a result of a rule  # noqa: E501
        """
        pass

    def test_rulesave(self):
        """Test case for rulesave

        Create or edit a rule  # noqa: E501
        """
        pass

    def test_scheduledelete(self):
        """Test case for scheduledelete

        Delete a schedule slot  # noqa: E501
        """
        pass

    def test_scheduledeletemine(self):
        """Test case for scheduledeletemine

        Delete a specific block from a user's own schedule  # noqa: E501
        """
        pass

    def test_scheduleenable(self):
        """Test case for scheduleenable

        Enable or disable the schedule for a specific person  # noqa: E501
        """
        pass

    def test_scheduleenablemine(self):
        """Test case for scheduleenablemine

        Enable or disable current user's schedule  # noqa: E501
        """
        pass

    def test_schedulefindallstaffslots(self):
        """Test case for schedulefindallstaffslots

        Search available schedule slots by service, event, date  # noqa: E501
        """
        pass

    def test_schedulefindslots(self):
        """Test case for schedulefindslots

        Search available schedule slots by service, event, date and/or staff  # noqa: E501
        """
        pass

    def test_schedulefindstaffavail(self):
        """Test case for schedulefindstaffavail

        Search available staff members slots by service, event, and/or date  # noqa: E501
        """
        pass

    def test_scheduleget(self):
        """Test case for scheduleget

        Search and view details of a specific schedule slot  # noqa: E501
        """
        pass

    def test_schedulegetmine(self):
        """Test case for schedulegetmine

        View details of a specific schedule block, for current user  # noqa: E501
        """
        pass

    def test_schedulegetstaff(self):
        """Test case for schedulegetstaff

        View a list of schedule information of a specified person  # noqa: E501
        """
        pass

    def test_schedulegetstaffmine(self):
        """Test case for schedulegetstaffmine

        View current user's schedule information  # noqa: E501
        """
        pass

    def test_scheduleintegrationdeleteitem(self):
        """Test case for scheduleintegrationdeleteitem

        Delete a schedule item looking up by a third party ID  # noqa: E501
        """
        pass

    def test_scheduleintegrationdeleteitemsbymasterid(self):
        """Test case for scheduleintegrationdeleteitemsbymasterid

        Delete multiple schedule items looking up by a third party master ID  # noqa: E501
        """
        pass

    def test_scheduleintegrationgetitem(self):
        """Test case for scheduleintegrationgetitem

        Get a schedule item looking up by a third party ID  # noqa: E501
        """
        pass

    def test_scheduleintegrationsaveitem(self):
        """Test case for scheduleintegrationsaveitem

        Save a schedule item looking up by a third party ID  # noqa: E501
        """
        pass

    def test_scheduleintegrationsetid(self):
        """Test case for scheduleintegrationsetid

        Set a 3rd party ID on a specific schedule item  # noqa: E501
        """
        pass

    def test_schedulemyofftimes(self):
        """Test case for schedulemyofftimes

        View current user's schedule exceptions  # noqa: E501
        """
        pass

    def test_schedulesave(self):
        """Test case for schedulesave

        Create or edit a schedule slot  # noqa: E501
        """
        pass

    def test_schedulesavemine(self):
        """Test case for schedulesavemine

        Create or edit a block in current user's schedule  # noqa: E501
        """
        pass

    def test_search(self):
        """Test case for search

        Search  # noqa: E501
        """
        pass

    def test_searchgetentities(self):
        """Test case for searchgetentities

        Get the information of the entities that can be searched  # noqa: E501
        """
        pass

    def test_securityassesspermission(self):
        """Test case for securityassesspermission

        Returns the list of users for a specific permission  # noqa: E501
        """
        pass

    def test_securityassessrole(self):
        """Test case for securityassessrole

        Returns the list of permissions for a specific role  # noqa: E501
        """
        pass

    def test_securityassessscope(self):
        """Test case for securityassessscope

        Returns the list of users for a specific user  # noqa: E501
        """
        pass

    def test_securityassessuser(self):
        """Test case for securityassessuser

        Returns the list of permissions for a specific user  # noqa: E501
        """
        pass

    def test_seminardelete(self):
        """Test case for seminardelete

        Delete an event  # noqa: E501
        """
        pass

    def test_seminarget(self):
        """Test case for seminarget

        Search and view details of a event  # noqa: E501
        """
        pass

    def test_seminarlist(self):
        """Test case for seminarlist

        View a list of events  # noqa: E501
        """
        pass

    def test_seminarsave(self):
        """Test case for seminarsave

        Create or edit a event  # noqa: E501
        """
        pass

    def test_serviceassignmentaddservice(self):
        """Test case for serviceassignmentaddservice

        Enable a service in a specific location  # noqa: E501
        """
        pass

    def test_serviceassignmentgetlocation(self):
        """Test case for serviceassignmentgetlocation

        View a list of services enabled for a specific location  # noqa: E501
        """
        pass

    def test_serviceassignmentgetservice(self):
        """Test case for serviceassignmentgetservice

        View a list of locations where a service is available  # noqa: E501
        """
        pass

    def test_serviceassignmentremoveservice(self):
        """Test case for serviceassignmentremoveservice

        Remove a service from a location  # noqa: E501
        """
        pass

    def test_servicedelete(self):
        """Test case for servicedelete

        Delete a service  # noqa: E501
        """
        pass

    def test_serviceget(self):
        """Test case for serviceget

        Search and view details of a service  # noqa: E501
        """
        pass

    def test_servicelist(self):
        """Test case for servicelist

        View a list of services  # noqa: E501
        """
        pass

    def test_servicesave(self):
        """Test case for servicesave

        Create or edit a service  # noqa: E501
        """
        pass

    def test_sessionattendancelogaddnote(self):
        """Test case for sessionattendancelogaddnote

        Add a note to a class attendance log  # noqa: E501
        """
        pass

    def test_sessionattendancelogget(self):
        """Test case for sessionattendancelogget

        View details of a class attendance log  # noqa: E501
        """
        pass

    def test_sessionattendanceloggetuser(self):
        """Test case for sessionattendanceloggetuser

        View the class session attendance information for a specific user  # noqa: E501
        """
        pass

    def test_sessionattendanceloglist(self):
        """Test case for sessionattendanceloglist

        View attendance logs of the specified session  # noqa: E501
        """
        pass

    def test_sessionattendanceloglistevent(self):
        """Test case for sessionattendanceloglistevent

        View the attendance information of an entire class  # noqa: E501
        """
        pass

    def test_sessionattendanceloglistsummary(self):
        """Test case for sessionattendanceloglistsummary

        View the attendance summary for a class and/or a attendee  # noqa: E501
        """
        pass

    def test_sessionattendancelogmylistsummary(self):
        """Test case for sessionattendancelogmylistsummary

        View my attendance summary  # noqa: E501
        """
        pass

    def test_sessionattendancelogsave(self):
        """Test case for sessionattendancelogsave

        Create or edit a class attendance log  # noqa: E501
        """
        pass

    def test_sessionattendancelogsaveswipe(self):
        """Test case for sessionattendancelogsaveswipe

        Create or edit a class attendance log swipe  # noqa: E501
        """
        pass

    def test_sessionbulkupdate(self):
        """Test case for sessionbulkupdate

        Bulk update event sessions  # noqa: E501
        """
        pass

    def test_sessionget(self):
        """Test case for sessionget

        View details of a session  # noqa: E501
        """
        pass

    def test_sessiongetschedule(self):
        """Test case for sessiongetschedule

        Gets the schedule for a location, instructor or attendees  # noqa: E501
        """
        pass

    def test_sessionlist(self):
        """Test case for sessionlist

        Gets all future sessions of the current semester  # noqa: E501
        """
        pass

    def test_sessionregaddcurrentuser(self):
        """Test case for sessionregaddcurrentuser

        Register current user to an event session  # noqa: E501
        """
        pass

    def test_sessionregadduser(self):
        """Test case for sessionregadduser

        Register users for events  # noqa: E501
        """
        pass

    def test_sessionreggetmysessions(self):
        """Test case for sessionreggetmysessions

        View all the sessions the logged user is registered to  # noqa: E501
        """
        pass

    def test_sessionreggetsessions(self):
        """Test case for sessionreggetsessions

        Lists the registrations for a specific user  # noqa: E501
        """
        pass

    def test_sessionreggetsettings(self):
        """Test case for sessionreggetsettings

        Get the settings for session registration  # noqa: E501
        """
        pass

    def test_sessionreggetusers(self):
        """Test case for sessionreggetusers

        Lists the registrations for a specific session  # noqa: E501
        """
        pass

    def test_sessionreglistsessions(self):
        """Test case for sessionreglistsessions

        List the sessions available for a specific event  # noqa: E501
        """
        pass

    def test_sessionreglistupcoming(self):
        """Test case for sessionreglistupcoming

        View a list of upcoming event sessions  # noqa: E501
        """
        pass

    def test_sessionreglistupcomingevent(self):
        """Test case for sessionreglistupcomingevent

        View a list of upcoming sessions of a particular event  # noqa: E501
        """
        pass

    def test_sessionregremovecurrentuser(self):
        """Test case for sessionregremovecurrentuser

        Unregister current user from an event session  # noqa: E501
        """
        pass

    def test_sessionregremoveuser(self):
        """Test case for sessionregremoveuser

        Removes a user from an event session  # noqa: E501
        """
        pass

    def test_sessionregsavesettings(self):
        """Test case for sessionregsavesettings

        Save the settings for an event's session registration  # noqa: E501
        """
        pass

    def test_sessionswipedelete(self):
        """Test case for sessionswipedelete

        Delete a session swipe  # noqa: E501
        """
        pass

    def test_sessionswipeget(self):
        """Test case for sessionswipeget

        View details of a class attendance swipe  # noqa: E501
        """
        pass

    def test_sessionswipelistunresolved(self):
        """Test case for sessionswipelistunresolved

        View a list of unresolved swipes  # noqa: E501
        """
        pass

    def test_sessionswiperesolve(self):
        """Test case for sessionswiperesolve

        Resolve a swipe and create the corresponding attendance log  # noqa: E501
        """
        pass

    def test_sessionswipesave(self):
        """Test case for sessionswipesave

        Creates a new swipe, and if possible, creates the attendance log  # noqa: E501
        """
        pass

    def test_sessionswipesaveanonym(self):
        """Test case for sessionswipesaveanonym

        Creates a new swipe from a sign-in station, and if possible, creates the attendance log  # noqa: E501
        """
        pass

    def test_settingaddlogo(self):
        """Test case for settingaddlogo

        Add a logo to the account  # noqa: E501
        """
        pass

    def test_settingget(self):
        """Test case for settingget

        Get settings for the account or the specified scope  # noqa: E501
        """
        pass

    def test_settingsave(self):
        """Test case for settingsave

        Save settings for the account or the specified scope  # noqa: E501
        """
        pass

    def test_settingviewgeneral(self):
        """Test case for settingviewgeneral

        View general settings for the account  # noqa: E501
        """
        pass

    def test_socialcontacts(self):
        """Test case for socialcontacts

        Gets the list of contacts in the network  # noqa: E501
        """
        pass

    def test_socialgroupaddmembers(self):
        """Test case for socialgroupaddmembers

        Adds new members to a group (which the user must own already)  # noqa: E501
        """
        pass

    def test_socialgroupdelete(self):
        """Test case for socialgroupdelete

        Deletes a group  # noqa: E501
        """
        pass

    def test_socialgrouplist(self):
        """Test case for socialgrouplist

        View all the groups the current user is in  # noqa: E501
        """
        pass

    def test_socialgrouplistmembers(self):
        """Test case for socialgrouplistmembers

        Lists the members of a group  # noqa: E501
        """
        pass

    def test_socialgroupremovemembers(self):
        """Test case for socialgroupremovemembers

        Removes members from a group (which the user must own already)  # noqa: E501
        """
        pass

    def test_socialgroupremovemyself(self):
        """Test case for socialgroupremovemyself

        Removes myself from an existent group  # noqa: E501
        """
        pass

    def test_socialgroupsave(self):
        """Test case for socialgroupsave

        Saves a new group  # noqa: E501
        """
        pass

    def test_ssogeneratekey(self):
        """Test case for ssogeneratekey

        Generate/reset single sign on access key.  # noqa: E501
        """
        pass

    def test_ssogetsettings(self):
        """Test case for ssogetsettings

        View single sign on settings.  # noqa: E501
        """
        pass

    def test_ssoissuetoken(self):
        """Test case for ssoissuetoken

        Issue single sign-on token  # noqa: E501
        """
        pass

    def test_ssosavesettings(self):
        """Test case for ssosavesettings

        Edit single sign-on settings.  # noqa: E501
        """
        pass

    def test_staffavailaddmetoallservices(self):
        """Test case for staffavailaddmetoallservices

        Associate current user to all services  # noqa: E501
        """
        pass

    def test_staffavailaddmetoservice(self):
        """Test case for staffavailaddmetoservice

        Associate current user to a service  # noqa: E501
        """
        pass

    def test_staffavailaddusertoallservices(self):
        """Test case for staffavailaddusertoallservices

        Associate a staff member to all services  # noqa: E501
        """
        pass

    def test_staffavailaddusertoservice(self):
        """Test case for staffavailaddusertoservice

        Associate a staff member to a service  # noqa: E501
        """
        pass

    def test_staffavailgetmyservices(self):
        """Test case for staffavailgetmyservices

        View the services the current user is available for  # noqa: E501
        """
        pass

    def test_staffavailgetservices(self):
        """Test case for staffavailgetservices

        View a list of services that a staff member is available for  # noqa: E501
        """
        pass

    def test_staffavailgetusersforservice(self):
        """Test case for staffavailgetusersforservice

        View a list of staff members that are available for a specific service  # noqa: E501
        """
        pass

    def test_staffavaillisttypes(self):
        """Test case for staffavaillisttypes

        View all the availability types  # noqa: E501
        """
        pass

    def test_staffavailremovemefromallservices(self):
        """Test case for staffavailremovemefromallservices

        Remove current user from all services  # noqa: E501
        """
        pass

    def test_staffavailremovemefromservice(self):
        """Test case for staffavailremovemefromservice

        Remove current user from a service  # noqa: E501
        """
        pass

    def test_staffavailremoveuserfromallservices(self):
        """Test case for staffavailremoveuserfromallservices

        Removes a staff member from the registration to all services  # noqa: E501
        """
        pass

    def test_staffavailremoveuserfromservice(self):
        """Test case for staffavailremoveuserfromservice

        Remove a staff member from a service  # noqa: E501
        """
        pass

    def test_staffavailsetavailability(self):
        """Test case for staffavailsetavailability

        Make a staff member available for a specific availability type  # noqa: E501
        """
        pass

    def test_staffavailsetmyavailability(self):
        """Test case for staffavailsetmyavailability

        Change current user's availability type  # noqa: E501
        """
        pass

    def test_stationdelete(self):
        """Test case for stationdelete

        Delete a sign-in station  # noqa: E501
        """
        pass

    def test_stationget(self):
        """Test case for stationget

        View details of a sign-in station  # noqa: E501
        """
        pass

    def test_stationgetcurrentterms(self):
        """Test case for stationgetcurrentterms

        Get all the current terms  # noqa: E501
        """
        pass

    def test_stationgetinfo(self):
        """Test case for stationgetinfo

        Gets a the info to display in the sign-in station by it's ID.  # noqa: E501
        """
        pass

    def test_stationgetlicense(self):
        """Test case for stationgetlicense

        Gets the current license information  # noqa: E501
        """
        pass

    def test_stationgetlocationsettings(self):
        """Test case for stationgetlocationsettings

        View the sign-in station settings of a specified location  # noqa: E501
        """
        pass

    def test_stationlist(self):
        """Test case for stationlist

        View a list of sign-in stations  # noqa: E501
        """
        pass

    def test_stationsave(self):
        """Test case for stationsave

        Create or edit a sign-in station  # noqa: E501
        """
        pass

    def test_stationsavemine(self):
        """Test case for stationsavemine

        Create or edit a class attendance sign-in station for myself  # noqa: E501
        """
        pass

    def test_stationunlock(self):
        """Test case for stationunlock

        Unlocks the sign-in station.  # noqa: E501
        """
        pass

    def test_swipedelete(self):
        """Test case for swipedelete

        Delete a swipe  # noqa: E501
        """
        pass

    def test_swipeget(self):
        """Test case for swipeget

        Search and view details of a swipe  # noqa: E501
        """
        pass

    def test_swipelist(self):
        """Test case for swipelist

        View a list of swipes  # noqa: E501
        """
        pass

    def test_swipesave(self):
        """Test case for swipesave

        Create or edit a swipe, and if possible, save the related attendance log  # noqa: E501
        """
        pass

    def test_swipesaveanonym(self):
        """Test case for swipesaveanonym

        Creates a new swipe from a sign-in station, and if possible, creates the attendance log  # noqa: E501
        """
        pass

    def test_tagdelete(self):
        """Test case for tagdelete

        Delete a tag  # noqa: E501
        """
        pass

    def test_tagget(self):
        """Test case for tagget

        View details of a specified tag  # noqa: E501
        """
        pass

    def test_taglist(self):
        """Test case for taglist

        View a list of tags  # noqa: E501
        """
        pass

    def test_taglistgroups(self):
        """Test case for taglistgroups

        View a list of entities that can be tagged  # noqa: E501
        """
        pass

    def test_tagsave(self):
        """Test case for tagsave

        Create or edit a tag  # noqa: E501
        """
        pass

    def test_tagsearch(self):
        """Test case for tagsearch

        Search for tags in the account  # noqa: E501
        """
        pass

    def test_templateaddimage(self):
        """Test case for templateaddimage

        Add an image to a template  # noqa: E501
        """
        pass

    def test_templatedelete(self):
        """Test case for templatedelete

        Delete a template  # noqa: E501
        """
        pass

    def test_templateemail(self):
        """Test case for templateemail

        Send generated templates by email  # noqa: E501
        """
        pass

    def test_templategenerate(self):
        """Test case for templategenerate

        Generate specified templates  # noqa: E501
        """
        pass

    def test_templateget(self):
        """Test case for templateget

        View details of a template  # noqa: E501
        """
        pass

    def test_templategetgenerated(self):
        """Test case for templategetgenerated

        View generated templates  # noqa: E501
        """
        pass

    def test_templatelist(self):
        """Test case for templatelist

        View a list of defined templates  # noqa: E501
        """
        pass

    def test_templatelistsources(self):
        """Test case for templatelistsources

        View a list of templates' data sources  # noqa: E501
        """
        pass

    def test_templatesave(self):
        """Test case for templatesave

        Create or edit a template  # noqa: E501
        """
        pass

    def test_templatesavelayout(self):
        """Test case for templatesavelayout

        Save the layout of a template  # noqa: E501
        """
        pass

    def test_termdelete(self):
        """Test case for termdelete

        Delete a term  # noqa: E501
        """
        pass

    def test_termget(self):
        """Test case for termget

        Search and view details of a term  # noqa: E501
        """
        pass

    def test_termlist(self):
        """Test case for termlist

        Search and view details of all terms  # noqa: E501
        """
        pass

    def test_termsave(self):
        """Test case for termsave

        Create and edit terms  # noqa: E501
        """
        pass

    def test_textcreditremaining(self):
        """Test case for textcreditremaining

        Gets the remaining text credits for the account  # noqa: E501
        """
        pass

    def test_texttoimage(self):
        """Test case for texttoimage

        Generates a dynamic image from text  # noqa: E501
        """
        pass

    def test_translationget(self):
        """Test case for translationget

        Gets the translations of the specified values  # noqa: E501
        """
        pass

    def test_translationgetcachefile(self):
        """Test case for translationgetcachefile

        Get the file containing the translations  # noqa: E501
        """
        pass

    def test_translationlist(self):
        """Test case for translationlist

        Lists all the available translations in the system  # noqa: E501
        """
        pass

    def test_translationsave(self):
        """Test case for translationsave

        Edit a translation  # noqa: E501
        """
        pass

    def test_userchangepwd(self):
        """Test case for userchangepwd

        Change user's own password  # noqa: E501
        """
        pass

    def test_userchangepwdbyreq(self):
        """Test case for userchangepwdbyreq

        Changes the user password using a change password request id  # noqa: E501
        """
        pass

    def test_userdelete(self):
        """Test case for userdelete

        Delete a user  # noqa: E501
        """
        pass

    def test_userfindsimilar(self):
        """Test case for userfindsimilar

        Finds similar users to prevent duplicates  # noqa: E501
        """
        pass

    def test_userget(self):
        """Test case for userget

        Search and view details of a user  # noqa: E501
        """
        pass

    def test_usergetbycard(self):
        """Test case for usergetbycard

        Search user by card number  # noqa: E501
        """
        pass

    def test_usergroupaddmember(self):
        """Test case for usergroupaddmember

        Add a user to a group  # noqa: E501
        """
        pass

    def test_usergroupdelete(self):
        """Test case for usergroupdelete

        Delete a group  # noqa: E501
        """
        pass

    def test_usergroupget(self):
        """Test case for usergroupget

        Search and view details of a user group  # noqa: E501
        """
        pass

    def test_usergroupgetmembers(self):
        """Test case for usergroupgetmembers

        View the members of a user group  # noqa: E501
        """
        pass

    def test_usergroupgetuser(self):
        """Test case for usergroupgetuser

        View the groups which a user is registered to  # noqa: E501
        """
        pass

    def test_usergrouplist(self):
        """Test case for usergrouplist

        View a list of user groups  # noqa: E501
        """
        pass

    def test_usergrouprefresh(self):
        """Test case for usergrouprefresh

        Refresh the dynamic group  # noqa: E501
        """
        pass

    def test_usergroupremovemember(self):
        """Test case for usergroupremovemember

        Remove a user from a group  # noqa: E501
        """
        pass

    def test_usergroupsave(self):
        """Test case for usergroupsave

        Create or edit a group  # noqa: E501
        """
        pass

    def test_usergrouptagmembers(self):
        """Test case for usergrouptagmembers

        Assign tags to the members of a specified group  # noqa: E501
        """
        pass

    def test_usergroupuntagmembers(self):
        """Test case for usergroupuntagmembers

        Unassign tags from the members of a specified group  # noqa: E501
        """
        pass

    def test_userlist(self):
        """Test case for userlist

        View a list of users  # noqa: E501
        """
        pass

    def test_userloadphoto(self):
        """Test case for userloadphoto

        Upload a photo for a specific user  # noqa: E501
        """
        pass

    def test_usermovedata(self):
        """Test case for usermovedata

        Move data between users  # noqa: E501
        """
        pass

    def test_userprofiledelete(self):
        """Test case for userprofiledelete

        Delete a user profile  # noqa: E501
        """
        pass

    def test_userprofileget(self):
        """Test case for userprofileget

        View a specific user profile  # noqa: E501
        """
        pass

    def test_userprofilegetallview(self):
        """Test case for userprofilegetallview

        Shows the profile for a specific (or current) user, based on each profile questionnaire questions.  # noqa: E501
        """
        pass

    def test_userprofilelist(self):
        """Test case for userprofilelist

        View the list of user profiles  # noqa: E501
        """
        pass

    def test_userprofilelistquestions(self):
        """Test case for userprofilelistquestions

        Gets the list of all the available user questions  # noqa: E501
        """
        pass

    def test_userprofilepreparestats(self):
        """Test case for userprofilepreparestats

        Gets the statistics of a user group  # noqa: E501
        """
        pass

    def test_userprofilesave(self):
        """Test case for userprofilesave

        Create or edit user profile questions  # noqa: E501
        """
        pass

    def test_userprofilesaveanswers(self):
        """Test case for userprofilesaveanswers

        Saves the profile for a specific (or current) user. Additional security applies on a per profile basis.  # noqa: E501
        """
        pass

    def test_userrequestpwdchange(self):
        """Test case for userrequestpwdchange

        Requests a password change  # noqa: E501
        """
        pass

    def test_usersave(self):
        """Test case for usersave

        Create or edit a user  # noqa: E501
        """
        pass

    def test_usersavepwdchange(self):
        """Test case for usersavepwdchange

        Send email to the specified user(s) to set/change their passwords  # noqa: E501
        """
        pass

    def test_usersettingsget(self):
        """Test case for usersettingsget

        Lists available user settings  # noqa: E501
        """
        pass

    def test_usersettingsgetmultiple(self):
        """Test case for usersettingsgetmultiple

        Get multiple user settings  # noqa: E501
        """
        pass

    def test_usersettingssave(self):
        """Test case for usersettingssave

        Saves a user setting  # noqa: E501
        """
        pass

    def test_usersettingssavemultiple(self):
        """Test case for usersettingssavemultiple

        Save multiple user settings at once  # noqa: E501
        """
        pass

    def test_version(self):
        """Test case for version

        Get current version information  # noqa: E501
        """
        pass

    def test_virtuallineaddmyself(self):
        """Test case for virtuallineaddmyself

        Add myself to a waiting line  # noqa: E501
        """
        pass

    def test_virtuallinelist(self):
        """Test case for virtuallinelist

        Lists waiting lines that have remote access enabled  # noqa: E501
        """
        pass

    def test_virtuallineremovemyself(self):
        """Test case for virtuallineremovemyself

        Remove myself from a waiting line  # noqa: E501
        """
        pass

    def test_waitinglineadduser(self):
        """Test case for waitinglineadduser

        Put user in a waiting line  # noqa: E501
        """
        pass

    def test_waitinglinedelete(self):
        """Test case for waitinglinedelete

        Delete a waiting line  # noqa: E501
        """
        pass

    def test_waitinglineget(self):
        """Test case for waitinglineget

        View details of a waiting line  # noqa: E501
        """
        pass

    def test_waitinglineisuserin(self):
        """Test case for waitinglineisuserin

        Check whether a user is in a waiting line, signed-in or is not in the area  # noqa: E501
        """
        pass

    def test_waitinglinelist(self):
        """Test case for waitinglinelist

        View a list of waiting lines  # noqa: E501
        """
        pass

    def test_waitinglineremoveuser(self):
        """Test case for waitinglineremoveuser

        Remove a user from a waiting line  # noqa: E501
        """
        pass

    def test_waitinglinesave(self):
        """Test case for waitinglinesave

        Create or edit a waiting line  # noqa: E501
        """
        pass

    def test_waitinglinesigninuser(self):
        """Test case for waitinglinesigninuser

        Sign a user in from a waiting line  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
