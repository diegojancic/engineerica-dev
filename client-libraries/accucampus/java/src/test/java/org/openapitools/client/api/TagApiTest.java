/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagApi
 */
@Ignore
public class TagApiTest {

    private final TagApi api = new TagApi();

    
    /**
     * Delete a tag
     *
     * Allows the user to delete an existing tag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.tagDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * View details of a specified tag
     *
     * Allows the user to click on and view the settings for a tag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagGetTest() throws ApiException {
        UUID id = null;
        api.tagGet(id);

        // TODO: test validations
    }
    
    /**
     * View a list of tags
     *
     * Allows the user to view the list of tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagListTest() throws ApiException {
        String group = null;
        Integer from = null;
        Integer count = null;
        api.tagList(group, from, count);

        // TODO: test validations
    }
    
    /**
     * View a list of entities that can be tagged
     *
     * Allows the user to view the list of user roles that can be tagged, according to that tag&#39;s settings.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagListgroupsTest() throws ApiException {
        api.tagListgroups();

        // TODO: test validations
    }
    
    /**
     * Create or edit a tag
     *
     * Allows the user to create or edit a tag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.tagSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Search for tags in the account
     *
     * Allows the user to search for tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tagSearchTest() throws ApiException {
        String query = null;
        Boolean allowcreatingnew = null;
        api.tagSearch(query, allowcreatingnew);

        // TODO: test validations
    }
    
}
