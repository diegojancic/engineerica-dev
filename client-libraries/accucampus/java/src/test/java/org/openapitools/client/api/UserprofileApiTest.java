/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserprofileApi
 */
@Ignore
public class UserprofileApiTest {

    private final UserprofileApi api = new UserprofileApi();

    
    /**
     * Delete a user profile
     *
     * Allows the user to delete a profile from the list of profiles that they have permission to edit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.userprofileDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * View a specific user profile
     *
     * Allows the user to view individual user profiles and their details, provided they have permission to view that profile.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileGetTest() throws ApiException {
        UUID id = null;
        api.userprofileGet(id);

        // TODO: test validations
    }
    
    /**
     * Shows the profile for a specific (or current) user, based on each profile questionnaire questions.
     *
     * Allows the user to view a profile for a user, provided they have permission to view that user and profile.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileGetallviewTest() throws ApiException {
        UUID id = null;
        api.userprofileGetallview(id);

        // TODO: test validations
    }
    
    /**
     * View the list of user profiles
     *
     * Allows the user to view the full list of profiles that they have permission to view.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        api.userprofileList(from, count);

        // TODO: test validations
    }
    
    /**
     * Gets the list of all the available user questions
     *
     * Allows the user to view the list of questions in a profile that they have permission to view.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileListquestionsTest() throws ApiException {
        api.userprofileListquestions();

        // TODO: test validations
    }
    
    /**
     * Gets the statistics of a user group
     *
     * Allows the user to view the demographic statistics of a user group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofilePreparestatsTest() throws ApiException {
        String params = null;
        api.userprofilePreparestats(params);

        // TODO: test validations
    }
    
    /**
     * Create or edit user profile questions
     *
     * Allows the user to create or edit a user profile.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.userprofileSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Saves the profile for a specific (or current) user. Additional security applies on a per profile basis.
     *
     * Allows the user to edit a profile for a user, provided they have permission to edit that user and profile.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userprofileSaveanswersTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.userprofileSaveanswers(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
}
