/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScheduleApi
 */
@Ignore
public class ScheduleApiTest {

    private final ScheduleApi api = new ScheduleApi();

    
    /**
     * Delete a schedule slot
     *
     * Allows the user to delete a schedule slot from another user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleDeleteTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.scheduleDelete(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Delete a specific block from a user&#39;s own schedule
     *
     * Allows the user to delete a schedule block from their own availability.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleDeletemineTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.scheduleDeletemine(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Enable or disable the schedule for a specific person
     *
     * Allows the user to enable or disable a schedule for another user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleEnableTest() throws ApiException {
        UUID userid = null;
        Boolean enable = null;
        api.scheduleEnable(userid, enable);

        // TODO: test validations
    }
    
    /**
     * Enable or disable current user&#39;s schedule
     *
     * Allows the user to enable or disable a schedule for himself.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleEnablemineTest() throws ApiException {
        Boolean enable = null;
        api.scheduleEnablemine(enable);

        // TODO: test validations
    }
    
    /**
     * Search available schedule slots by service, event, date
     *
     * Allows users to search available slots.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleFindallstaffslotsTest() throws ApiException {
        OffsetDateTime starttime = null;
        OffsetDateTime endtime = null;
        UUID staffid = null;
        String serviceids = null;
        UUID eventid = null;
        UUID locationid = null;
        String staffroleids = null;
        String availablefor = null;
        api.scheduleFindallstaffslots(starttime, endtime, staffid, serviceids, eventid, locationid, staffroleids, availablefor);

        // TODO: test validations
    }
    
    /**
     * Search available schedule slots by service, event, date and/or staff
     *
     * Allows users to search available slots when making appointments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleFindslotsTest() throws ApiException {
        UUID staffid = null;
        OffsetDateTime starttime = null;
        OffsetDateTime endtime = null;
        String serviceids = null;
        UUID eventid = null;
        UUID locationid = null;
        String availablefor = null;
        api.scheduleFindslots(staffid, starttime, endtime, serviceids, eventid, locationid, availablefor);

        // TODO: test validations
    }
    
    /**
     * Search available staff members slots by service, event, and/or date
     *
     * Allows users to search available staff.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleFindstaffavailTest() throws ApiException {
        OffsetDateTime starttime = null;
        OffsetDateTime endtime = null;
        String serviceids = null;
        UUID eventid = null;
        UUID locationid = null;
        String staffroleids = null;
        String availablefor = null;
        Integer photosize = null;
        api.scheduleFindstaffavail(starttime, endtime, serviceids, eventid, locationid, staffroleids, availablefor, photosize);

        // TODO: test validations
    }
    
    /**
     * Search and view details of a specific schedule slot
     *
     * Allows the user to view the details of schedule shifts for any user role that the user has permission to view.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleGetTest() throws ApiException {
        UUID scheduleid = null;
        api.scheduleGet(scheduleid);

        // TODO: test validations
    }
    
    /**
     * View details of a specific schedule block, for current user
     *
     * Allows the user to view the details of their own schedule shifts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleGetmineTest() throws ApiException {
        UUID scheduleid = null;
        api.scheduleGetmine(scheduleid);

        // TODO: test validations
    }
    
    /**
     * View a list of schedule information of a specified person
     *
     * Allows the user to view the schedule shifts for user roles that the user has permission to access.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleGetstaffTest() throws ApiException {
        UUID userid = null;
        api.scheduleGetstaff(userid);

        // TODO: test validations
    }
    
    /**
     * View current user&#39;s schedule information
     *
     * Allows the user to view their own schedule.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleGetstaffmineTest() throws ApiException {
        api.scheduleGetstaffmine();

        // TODO: test validations
    }
    
    /**
     * View current user&#39;s schedule exceptions
     *
     * Allows the user to view their own schedule exceptions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleMyofftimesTest() throws ApiException {
        Boolean includedeleted = null;
        Boolean onlyupcoming = null;
        OffsetDateTime modifiedafter = null;
        api.scheduleMyofftimes(includedeleted, onlyupcoming, modifiedafter);

        // TODO: test validations
    }
    
    /**
     * Create or edit a schedule slot
     *
     * Allows the user to create or edit a schedule slot of another user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleSaveTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.scheduleSave(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Create or edit a block in current user&#39;s schedule
     *
     * Allows the user to create or edit a schedule shift in their own availability.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleSavemineTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.scheduleSavemine(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
}
