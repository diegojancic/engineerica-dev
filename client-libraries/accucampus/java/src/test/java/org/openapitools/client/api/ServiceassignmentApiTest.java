/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceassignmentApi
 */
@Ignore
public class ServiceassignmentApiTest {

    private final ServiceassignmentApi api = new ServiceassignmentApi();

    
    /**
     * Enable a service in a specific location
     *
     * Allows the user to enable a service in a location to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void serviceassignmentAddserviceTest() throws ApiException {
        UUID serviceid = null;
        UUID locationid = null;
        api.serviceassignmentAddservice(serviceid, locationid);

        // TODO: test validations
    }
    
    /**
     * View a list of services enabled for a specific location
     *
     * Allows the user to view a list of services available in a location to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void serviceassignmentGetlocationTest() throws ApiException {
        UUID locationid = null;
        Boolean includegloballyavailable = null;
        Boolean namefilter = null;
        Integer count = null;
        api.serviceassignmentGetlocation(locationid, includegloballyavailable, namefilter, count);

        // TODO: test validations
    }
    
    /**
     * View a list of locations where a service is available
     *
     * Allows the user to view a list of locations in which a service is available.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void serviceassignmentGetserviceTest() throws ApiException {
        UUID serviceid = null;
        api.serviceassignmentGetservice(serviceid);

        // TODO: test validations
    }
    
    /**
     * Remove a service from a location
     *
     * Allows the user to disable a service from a location to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void serviceassignmentRemoveserviceTest() throws ApiException {
        UUID serviceid = null;
        UUID locationid = null;
        api.serviceassignmentRemoveservice(serviceid, locationid);

        // TODO: test validations
    }
    
}
