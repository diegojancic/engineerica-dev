/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SwipeApi
 */
@Ignore
public class SwipeApiTest {

    private final SwipeApi api = new SwipeApi();

    
    /**
     * Delete a swipe
     *
     * Allows the user to delete an existing attendance swipe.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void swipeDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.swipeDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * Search and view details of a swipe
     *
     * Allows the user to view an individual attendance swipe.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void swipeGetTest() throws ApiException {
        UUID id = null;
        api.swipeGet(id);

        // TODO: test validations
    }
    
    /**
     * View a list of swipes
     *
     * Allows the user to view a list of all swipes for the location or locations in which the user is scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void swipeListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        api.swipeList(from, count);

        // TODO: test validations
    }
    
    /**
     * Create or edit a swipe, and if possible, save the related attendance log
     *
     * Allows the user to save an attendance swipe, which will also save the attendance log if the information in the swipe is enough.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void swipeSaveTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.swipeSave(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Creates a new swipe from a sign-in station, and if possible, creates the attendance log
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void swipeSaveanonymTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.swipeSaveanonym(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
}
