/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeneralApi
 */
@Ignore
public class GeneralApiTest {

    private final GeneralApi api = new GeneralApi();

    
    /**
     * Import data into AccuCampus
     *
     * Allows the user to import data into AccuCampus via CSV or flat files either manually or automatically using the import utility.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void callImportTest() throws ApiException {
        String importtype = null;
        String upload = null;
        String filename = null;
        String parameters = null;
        api.callImport(importtype, upload, filename, parameters);

        // TODO: test validations
    }
    
    /**
     * Get the application change log
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changelogTest() throws ApiException {
        api.changelog();

        // TODO: test validations
    }
    
    /**
     * Get the documentation
     *
     * Retrieves the list of actions available in the system.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void docTest() throws ApiException {
        Boolean excludeanonymous = null;
        api.doc(excludeanonymous);

        // TODO: test validations
    }
    
    /**
     * Export AccuCampus data
     *
     * Allows the user to export data from AccuCampus into a CSV, HTML, or Excel format.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportTest() throws ApiException {
        String exporttype = null;
        String exportformat = null;
        String filters = null;
        api.export(exporttype, exportformat, filters);

        // TODO: test validations
    }
    
    /**
     * Lists the available timezones
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listtimezonesTest() throws ApiException {
        api.listtimezones();

        // TODO: test validations
    }
    
    /**
     * Login
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        String domain = null;
        String username = null;
        String password = null;
        String method = null;
        Boolean rememberme = null;
        api.login(domain, username, password, method, rememberme);

        // TODO: test validations
    }
    
    /**
     * Logout
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void logoutTest() throws ApiException {
        api.logout();

        // TODO: test validations
    }
    
    /**
     * Search
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String query = null;
        Integer page = null;
        api.search(query, page);

        // TODO: test validations
    }
    
    /**
     * Generates a dynamic image from text
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void texttoimageTest() throws ApiException {
        String text = null;
        String fontcolor = null;
        Integer fontsize = null;
        String direction = null;
        Integer width = null;
        api.texttoimage(text, fontcolor, fontsize, direction, width);

        // TODO: test validations
    }
    
    /**
     * Get current version information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void versionTest() throws ApiException {
        api.version();

        // TODO: test validations
    }
    
}
