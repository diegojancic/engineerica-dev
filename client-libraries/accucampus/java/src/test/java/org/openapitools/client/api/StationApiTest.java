/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StationApi
 */
@Ignore
public class StationApiTest {

    private final StationApi api = new StationApi();

    
    /**
     * Delete a sign-in station
     *
     * Allows the user to delete a sign-in station from the list of existing sign-in stations that they can view based on their scope.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.stationDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * View details of a sign-in station
     *
     * Allows the user to view an individual sign-in station and its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationGetTest() throws ApiException {
        UUID id = null;
        api.stationGet(id);

        // TODO: test validations
    }
    
    /**
     * Get all the current terms
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationGetcurrenttermsTest() throws ApiException {
        UUID station = null;
        api.stationGetcurrentterms(station);

        // TODO: test validations
    }
    
    /**
     * Gets a the info to display in the sign-in station by it&#39;s ID.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationGetinfoTest() throws ApiException {
        UUID id = null;
        UUID event = null;
        api.stationGetinfo(id, event);

        // TODO: test validations
    }
    
    /**
     * Gets the current license information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationGetlicenseTest() throws ApiException {
        String station = null;
        api.stationGetlicense(station);

        // TODO: test validations
    }
    
    /**
     * View the sign-in station settings of a specified location
     *
     * Allows the user to view the location settings of a sign-in station.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationGetlocationsettingsTest() throws ApiException {
        UUID location = null;
        api.stationGetlocationsettings(location);

        // TODO: test validations
    }
    
    /**
     * View a list of sign-in stations
     *
     * Allows the user to view the list of sign-in stations, limited to the stations in the locations to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        api.stationList(from, count);

        // TODO: test validations
    }
    
    /**
     * Create or edit a sign-in station
     *
     * Allows the user to create, edit, or install a sign-in station based in an area to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.stationSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Create or edit a class attendance sign-in station for myself
     *
     * Allows the user to create a class attendance sign-in station for a course for which they are available as staff.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationSavemineTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.stationSavemine(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Unlocks the sign-in station.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stationUnlockTest() throws ApiException {
        UUID id = null;
        String passcode = null;
        String method = null;
        api.stationUnlock(id, passcode, method);

        // TODO: test validations
    }
    
}
