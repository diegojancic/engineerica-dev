/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RiskmodelApi
 */
@Ignore
public class RiskmodelApiTest {

    private final RiskmodelApi api = new RiskmodelApi();

    
    /**
     * Check the status of the analysis of a specified risk assessment model
     *
     * Allows the user to check the status of a risk assessment model as it is being processed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelCheckanalysisTest() throws ApiException {
        UUID id = null;
        api.riskmodelCheckanalysis(id);

        // TODO: test validations
    }
    
    /**
     * Delete a risk assessment model
     *
     * Allows the user to delete a previously created risk assessment model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.riskmodelDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * View details of a risk assessment model
     *
     * Allows the user to view an individual risk assessment model and its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelGetTest() throws ApiException {
        UUID id = null;
        api.riskmodelGet(id);

        // TODO: test validations
    }
    
    /**
     * View the risk score for a specific user
     *
     * Allows the user to view the risk score of another user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelGetscoreTest() throws ApiException {
        UUID userid = null;
        api.riskmodelGetscore(userid);

        // TODO: test validations
    }
    
    /**
     * View a list of risk assessment models
     *
     * Allows the user to view the full list of risk assessment models.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        api.riskmodelList(from, count);

        // TODO: test validations
    }
    
    /**
     * Predict risk based on an assessment model
     *
     * Allows a user to process a risk prediction from a risk assessment model that has processed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelPredictTest() throws ApiException {
        UUID id = null;
        api.riskmodelPredict(id);

        // TODO: test validations
    }
    
    /**
     * Process a risk assessment model
     *
     * Allows the user to process a risk assessment model once it has been created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelProcessTest() throws ApiException {
        UUID id = null;
        api.riskmodelProcess(id);

        // TODO: test validations
    }
    
    /**
     * Refresh the information used in a risk assessment model
     *
     * Allows the user to refresh a risk assessment model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelRefreshTest() throws ApiException {
        UUID id = null;
        api.riskmodelRefresh(id);

        // TODO: test validations
    }
    
    /**
     * Create or edit a risk assessment model
     *
     * Allows the user to create or edit a risk assessment model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.riskmodelSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * View all default term precedences
     *
     * Allows the user to view the default term precedences used in a model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void riskmodelTermprecedencesTest() throws ApiException {
        api.riskmodelTermprecedences();

        // TODO: test validations
    }
    
}
