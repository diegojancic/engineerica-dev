/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventregApi
 */
@Ignore
public class EventregApiTest {

    private final EventregApi api = new EventregApi();

    
    /**
     * Register current user to a course
     *
     * Allows the user to make themselves available for individual courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAddmeTest() throws ApiException {
        UUID eventid = null;
        String listname = null;
        api.eventregAddme(eventid, listname);

        // TODO: test validations
    }
    
    /**
     * Register current user to all courses
     *
     * Allows the user to make themselves available for all courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAddmetoallTest() throws ApiException {
        String listname = null;
        api.eventregAddmetoall(listname);

        // TODO: test validations
    }
    
    /**
     * Register current user to a course group
     *
     * Allows the user to make themselves available for a course group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAddmetogroupTest() throws ApiException {
        String codegroup = null;
        String listname = null;
        api.eventregAddmetogroup(codegroup, listname);

        // TODO: test validations
    }
    
    /**
     * Register a user to a course for attendance
     *
     * Allows the user to register a user to a course.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAdduserTest() throws ApiException {
        UUID userid = null;
        UUID eventid = null;
        String listname = null;
        api.eventregAdduser(userid, eventid, listname);

        // TODO: test validations
    }
    
    /**
     * Register a user to assist with all courses
     *
     * Allows the user to make a staff member available to assist with all courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAddusertoallTest() throws ApiException {
        UUID userid = null;
        String listname = null;
        api.eventregAddusertoall(userid, listname);

        // TODO: test validations
    }
    
    /**
     * Register a user to an course group
     *
     * Allows the user to make a staff member available for a course group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregAddusertogroupTest() throws ApiException {
        UUID userid = null;
        String codegroup = null;
        String listname = null;
        api.eventregAddusertogroup(userid, codegroup, listname);

        // TODO: test validations
    }
    
    /**
     * View course registration by user
     *
     * Allows the user to view all courses a given user is registered to, provided they have permission to view that user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGeteventsTest() throws ApiException {
        UUID userid = null;
        String listname = null;
        UUID termid = null;
        String namefilter = null;
        api.eventregGetevents(userid, listname, termid, namefilter);

        // TODO: test validations
    }
    
    /**
     * Lists the course group registrations of a user
     *
     * Allows the user to view the course groups a staff member is available for.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetgroupsTest() throws ApiException {
        UUID userid = null;
        String listname = null;
        api.eventregGetgroups(userid, listname);

        // TODO: test validations
    }
    
    /**
     * View the event registrations of the current user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetmyeventsTest() throws ApiException {
        String listname = null;
        UUID termid = null;
        String namefilter = null;
        api.eventregGetmyevents(listname, termid, namefilter);

        // TODO: test validations
    }
    
    /**
     * View all current user registrations to course groups
     *
     * Allows the user to view all his registrations to course groups.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetmygroupsTest() throws ApiException {
        String listname = null;
        api.eventregGetmygroups(listname);

        // TODO: test validations
    }
    
    /**
     * View course registration
     *
     * Allows the user to view all users registered for an individual course.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetusersTest() throws ApiException {
        UUID eventid = null;
        String listname = null;
        Integer photosize = null;
        api.eventregGetusers(eventid, listname, photosize);

        // TODO: test validations
    }
    
    /**
     * Lists the registrations for a course group
     *
     * Allows the user the get the staff members registered to a specific course group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetusersfromgroupTest() throws ApiException {
        UUID codegroup = null;
        String listname = null;
        api.eventregGetusersfromgroup(codegroup, listname);

        // TODO: test validations
    }
    
    /**
     * View the users that are registered to all courses
     *
     * Allows the user to view all staff members available for all courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregGetuserstoallTest() throws ApiException {
        String listname = null;
        api.eventregGetuserstoall(listname);

        // TODO: test validations
    }
    
    /**
     * Unregister current user from a course
     *
     * Allows the user to remove themselves from registration to a course.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemovemeTest() throws ApiException {
        UUID eventid = null;
        String listname = null;
        api.eventregRemoveme(eventid, listname);

        // TODO: test validations
    }
    
    /**
     * Remove current user from the registration to all courses
     *
     * Allows the user to remove themselves from availability to all courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemovemefromallTest() throws ApiException {
        String listname = null;
        api.eventregRemovemefromall(listname);

        // TODO: test validations
    }
    
    /**
     * Remove current user from a course group
     *
     * Allows the user to remove themselves from availability to a course group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemovemefromgroupTest() throws ApiException {
        UUID codegroup = null;
        String listname = null;
        api.eventregRemovemefromgroup(codegroup, listname);

        // TODO: test validations
    }
    
    /**
     * Remove a user from a course
     *
     * Allows the user to remove a user from a course&#39;s registration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemoveuserTest() throws ApiException {
        UUID userid = null;
        UUID eventid = null;
        String listname = null;
        api.eventregRemoveuser(userid, eventid, listname);

        // TODO: test validations
    }
    
    /**
     * Remove a user from the registration to all courses
     *
     * Allows the user to remove a staff member from availability to all courses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemoveuserfromallTest() throws ApiException {
        UUID userid = null;
        String listname = null;
        api.eventregRemoveuserfromall(userid, listname);

        // TODO: test validations
    }
    
    /**
     * Remove a user from a course group
     *
     * Allows the user to remove a staff member from availability to a course group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventregRemoveuserfromgroupTest() throws ApiException {
        UUID userid = null;
        UUID codegroup = null;
        String listname = null;
        api.eventregRemoveuserfromgroup(userid, codegroup, listname);

        // TODO: test validations
    }
    
}
