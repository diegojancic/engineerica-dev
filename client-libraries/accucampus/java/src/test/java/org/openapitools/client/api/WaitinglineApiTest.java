/*
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WaitinglineApi
 */
@Ignore
public class WaitinglineApiTest {

    private final WaitinglineApi api = new WaitinglineApi();

    
    /**
     * Put user in a waiting line
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineAdduserTest() throws ApiException {
        UUID station = null;
        String user = null;
        UUID locationid = null;
        OffsetDateTime time = null;
        String signinrole = null;
        UUID roleid = null;
        String services = null;
        UUID eventid = null;
        UUID staff = null;
        Integer photosize = null;
        api.waitinglineAdduser(station, user, locationid, time, signinrole, roleid, services, eventid, staff, photosize);

        // TODO: test validations
    }
    
    /**
     * Delete a waiting line
     *
     * Allows the user to delete an existing waiting line, provided it is in a location that the user is scoped to.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.waitinglineDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * View details of a waiting line
     *
     * Allows the user to view the details of a waiting line in a location to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineGetTest() throws ApiException {
        UUID id = null;
        Integer photosize = null;
        api.waitinglineGet(id, photosize);

        // TODO: test validations
    }
    
    /**
     * Check whether a user is in a waiting line, signed-in or is not in the area
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineIsuserinTest() throws ApiException {
        UUID station = null;
        OffsetDateTime time = null;
        String user = null;
        UUID location = null;
        api.waitinglineIsuserin(station, time, user, location);

        // TODO: test validations
    }
    
    /**
     * View a list of waiting lines
     *
     * Allows the user to view the list of waiting lines in locations to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        api.waitinglineList(from, count);

        // TODO: test validations
    }
    
    /**
     * Remove a user from a waiting line
     *
     * Allows the user to remove a user from a waiting line, provided they have permission to access that waiting line.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineRemoveuserTest() throws ApiException {
        UUID waitingline = null;
        UUID itemid = null;
        api.waitinglineRemoveuser(waitingline, itemid);

        // TODO: test validations
    }
    
    /**
     * Create or edit a waiting line
     *
     * Allows the user to create or edit a waiting line in a location to which they are scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.waitinglineSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Sign a user in from a waiting line
     *
     * Allows the user to sign a user in from a waiting line, provided they have permission to access that waiting line.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void waitinglineSigninuserTest() throws ApiException {
        UUID waitingline = null;
        UUID itemid = null;
        UUID staff = null;
        Integer photosize = null;
        api.waitinglineSigninuser(waitingline, itemid, staff, photosize);

        // TODO: test validations
    }
    
}
