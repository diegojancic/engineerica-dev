# coding: utf-8

"""
    AccuCampus OpenAPI 3

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.eventreg_api import EventregApi  # noqa: E501
from openapi_client.rest import ApiException


class TestEventregApi(unittest.TestCase):
    """EventregApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.eventreg_api.EventregApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_eventreg_addme(self):
        """Test case for eventreg_addme

        Register current user to a course  # noqa: E501
        """
        pass

    def test_eventreg_addmetoall(self):
        """Test case for eventreg_addmetoall

        Register current user to all courses  # noqa: E501
        """
        pass

    def test_eventreg_addmetogroup(self):
        """Test case for eventreg_addmetogroup

        Register current user to a course group  # noqa: E501
        """
        pass

    def test_eventreg_adduser(self):
        """Test case for eventreg_adduser

        Register a user to a course for attendance  # noqa: E501
        """
        pass

    def test_eventreg_addusertoall(self):
        """Test case for eventreg_addusertoall

        Register a user to assist with all courses  # noqa: E501
        """
        pass

    def test_eventreg_addusertogroup(self):
        """Test case for eventreg_addusertogroup

        Register a user to an course group  # noqa: E501
        """
        pass

    def test_eventreg_getevents(self):
        """Test case for eventreg_getevents

        View course registration by user  # noqa: E501
        """
        pass

    def test_eventreg_getgroups(self):
        """Test case for eventreg_getgroups

        Lists the course group registrations of a user  # noqa: E501
        """
        pass

    def test_eventreg_getmyevents(self):
        """Test case for eventreg_getmyevents

        View the event registrations of the current user  # noqa: E501
        """
        pass

    def test_eventreg_getmygroups(self):
        """Test case for eventreg_getmygroups

        View all current user registrations to course groups  # noqa: E501
        """
        pass

    def test_eventreg_getusers(self):
        """Test case for eventreg_getusers

        View course registration  # noqa: E501
        """
        pass

    def test_eventreg_getusersfromgroup(self):
        """Test case for eventreg_getusersfromgroup

        Lists the registrations for a course group  # noqa: E501
        """
        pass

    def test_eventreg_getuserstoall(self):
        """Test case for eventreg_getuserstoall

        View the users that are registered to all courses  # noqa: E501
        """
        pass

    def test_eventreg_removeme(self):
        """Test case for eventreg_removeme

        Unregister current user from a course  # noqa: E501
        """
        pass

    def test_eventreg_removemefromall(self):
        """Test case for eventreg_removemefromall

        Remove current user from the registration to all courses  # noqa: E501
        """
        pass

    def test_eventreg_removemefromgroup(self):
        """Test case for eventreg_removemefromgroup

        Remove current user from a course group  # noqa: E501
        """
        pass

    def test_eventreg_removeuser(self):
        """Test case for eventreg_removeuser

        Remove a user from a course  # noqa: E501
        """
        pass

    def test_eventreg_removeuserfromall(self):
        """Test case for eventreg_removeuserfromall

        Remove a user from the registration to all courses  # noqa: E501
        """
        pass

    def test_eventreg_removeuserfromgroup(self):
        """Test case for eventreg_removeuserfromgroup

        Remove a user from a course group  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
