/**
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuCampusOpenApi3);
  }
}(this, function(expect, AccuCampusOpenApi3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuCampusOpenApi3.EventregApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventregApi', function() {
    describe('eventregAddme', function() {
      it('should call eventregAddme successfully', function(done) {
        //uncomment below and update the code to test eventregAddme
        //instance.eventregAddme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregAddmetoall', function() {
      it('should call eventregAddmetoall successfully', function(done) {
        //uncomment below and update the code to test eventregAddmetoall
        //instance.eventregAddmetoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregAddmetogroup', function() {
      it('should call eventregAddmetogroup successfully', function(done) {
        //uncomment below and update the code to test eventregAddmetogroup
        //instance.eventregAddmetogroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregAdduser', function() {
      it('should call eventregAdduser successfully', function(done) {
        //uncomment below and update the code to test eventregAdduser
        //instance.eventregAdduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregAddusertoall', function() {
      it('should call eventregAddusertoall successfully', function(done) {
        //uncomment below and update the code to test eventregAddusertoall
        //instance.eventregAddusertoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregAddusertogroup', function() {
      it('should call eventregAddusertogroup successfully', function(done) {
        //uncomment below and update the code to test eventregAddusertogroup
        //instance.eventregAddusertogroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetevents', function() {
      it('should call eventregGetevents successfully', function(done) {
        //uncomment below and update the code to test eventregGetevents
        //instance.eventregGetevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetgroups', function() {
      it('should call eventregGetgroups successfully', function(done) {
        //uncomment below and update the code to test eventregGetgroups
        //instance.eventregGetgroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetmyevents', function() {
      it('should call eventregGetmyevents successfully', function(done) {
        //uncomment below and update the code to test eventregGetmyevents
        //instance.eventregGetmyevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetmygroups', function() {
      it('should call eventregGetmygroups successfully', function(done) {
        //uncomment below and update the code to test eventregGetmygroups
        //instance.eventregGetmygroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetusers', function() {
      it('should call eventregGetusers successfully', function(done) {
        //uncomment below and update the code to test eventregGetusers
        //instance.eventregGetusers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetusersfromgroup', function() {
      it('should call eventregGetusersfromgroup successfully', function(done) {
        //uncomment below and update the code to test eventregGetusersfromgroup
        //instance.eventregGetusersfromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregGetuserstoall', function() {
      it('should call eventregGetuserstoall successfully', function(done) {
        //uncomment below and update the code to test eventregGetuserstoall
        //instance.eventregGetuserstoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemoveme', function() {
      it('should call eventregRemoveme successfully', function(done) {
        //uncomment below and update the code to test eventregRemoveme
        //instance.eventregRemoveme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemovemefromall', function() {
      it('should call eventregRemovemefromall successfully', function(done) {
        //uncomment below and update the code to test eventregRemovemefromall
        //instance.eventregRemovemefromall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemovemefromgroup', function() {
      it('should call eventregRemovemefromgroup successfully', function(done) {
        //uncomment below and update the code to test eventregRemovemefromgroup
        //instance.eventregRemovemefromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemoveuser', function() {
      it('should call eventregRemoveuser successfully', function(done) {
        //uncomment below and update the code to test eventregRemoveuser
        //instance.eventregRemoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemoveuserfromall', function() {
      it('should call eventregRemoveuserfromall successfully', function(done) {
        //uncomment below and update the code to test eventregRemoveuserfromall
        //instance.eventregRemoveuserfromall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregRemoveuserfromgroup', function() {
      it('should call eventregRemoveuserfromgroup successfully', function(done) {
        //uncomment below and update the code to test eventregRemoveuserfromgroup
        //instance.eventregRemoveuserfromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
