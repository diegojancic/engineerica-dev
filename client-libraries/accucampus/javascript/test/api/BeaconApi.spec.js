/**
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuCampusOpenApi3);
  }
}(this, function(expect, AccuCampusOpenApi3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuCampusOpenApi3.BeaconApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BeaconApi', function() {
    describe('beaconDelete', function() {
      it('should call beaconDelete successfully', function(done) {
        //uncomment below and update the code to test beaconDelete
        //instance.beaconDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconDisable', function() {
      it('should call beaconDisable successfully', function(done) {
        //uncomment below and update the code to test beaconDisable
        //instance.beaconDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconGet', function() {
      it('should call beaconGet successfully', function(done) {
        //uncomment below and update the code to test beaconGet
        //instance.beaconGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconGetlocations', function() {
      it('should call beaconGetlocations successfully', function(done) {
        //uncomment below and update the code to test beaconGetlocations
        //instance.beaconGetlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconGetstationlocation', function() {
      it('should call beaconGetstationlocation successfully', function(done) {
        //uncomment below and update the code to test beaconGetstationlocation
        //instance.beaconGetstationlocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconGetuuid', function() {
      it('should call beaconGetuuid successfully', function(done) {
        //uncomment below and update the code to test beaconGetuuid
        //instance.beaconGetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconList', function() {
      it('should call beaconList successfully', function(done) {
        //uncomment below and update the code to test beaconList
        //instance.beaconList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconListprofiles', function() {
      it('should call beaconListprofiles successfully', function(done) {
        //uncomment below and update the code to test beaconListprofiles
        //instance.beaconListprofiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconResetuuid', function() {
      it('should call beaconResetuuid successfully', function(done) {
        //uncomment below and update the code to test beaconResetuuid
        //instance.beaconResetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconSave', function() {
      it('should call beaconSave successfully', function(done) {
        //uncomment below and update the code to test beaconSave
        //instance.beaconSave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconScanlocations', function() {
      it('should call beaconScanlocations successfully', function(done) {
        //uncomment below and update the code to test beaconScanlocations
        //instance.beaconScanlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconSetuuid', function() {
      it('should call beaconSetuuid successfully', function(done) {
        //uncomment below and update the code to test beaconSetuuid
        //instance.beaconSetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconSilentregions', function() {
      it('should call beaconSilentregions successfully', function(done) {
        //uncomment below and update the code to test beaconSilentregions
        //instance.beaconSilentregions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconSilentsignin', function() {
      it('should call beaconSilentsignin successfully', function(done) {
        //uncomment below and update the code to test beaconSilentsignin
        //instance.beaconSilentsignin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconSilentsignout', function() {
      it('should call beaconSilentsignout successfully', function(done) {
        //uncomment below and update the code to test beaconSilentsignout
        //instance.beaconSilentsignout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
