/**
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuCampusOpenApi3);
  }
}(this, function(expect, AccuCampusOpenApi3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuCampusOpenApi3.RatingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RatingApi', function() {
    describe('ratingFlag', function() {
      it('should call ratingFlag successfully', function(done) {
        //uncomment below and update the code to test ratingFlag
        //instance.ratingFlag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingFlagcomment', function() {
      it('should call ratingFlagcomment successfully', function(done) {
        //uncomment below and update the code to test ratingFlagcomment
        //instance.ratingFlagcomment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingGet', function() {
      it('should call ratingGet successfully', function(done) {
        //uncomment below and update the code to test ratingGet
        //instance.ratingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingGetall', function() {
      it('should call ratingGetall successfully', function(done) {
        //uncomment below and update the code to test ratingGetall
        //instance.ratingGetall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingGetcomments', function() {
      it('should call ratingGetcomments successfully', function(done) {
        //uncomment below and update the code to test ratingGetcomments
        //instance.ratingGetcomments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingGetpending', function() {
      it('should call ratingGetpending successfully', function(done) {
        //uncomment below and update the code to test ratingGetpending
        //instance.ratingGetpending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingGetpendingmoderation', function() {
      it('should call ratingGetpendingmoderation successfully', function(done) {
        //uncomment below and update the code to test ratingGetpendingmoderation
        //instance.ratingGetpendingmoderation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingModerate', function() {
      it('should call ratingModerate successfully', function(done) {
        //uncomment below and update the code to test ratingModerate
        //instance.ratingModerate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingPostcomment', function() {
      it('should call ratingPostcomment successfully', function(done) {
        //uncomment below and update the code to test ratingPostcomment
        //instance.ratingPostcomment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingRate', function() {
      it('should call ratingRate successfully', function(done) {
        //uncomment below and update the code to test ratingRate
        //instance.ratingRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingRatepending', function() {
      it('should call ratingRatepending successfully', function(done) {
        //uncomment below and update the code to test ratingRatepending
        //instance.ratingRatepending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingVote', function() {
      it('should call ratingVote successfully', function(done) {
        //uncomment below and update the code to test ratingVote
        //instance.ratingVote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
