/**
 * AccuCampus OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UNKNOWN_BASE_TYPE from '../model/UNKNOWN_BASE_TYPE';

/**
* Actionpack service.
* @module api/ActionpackApi
* @version 1.0.0
*/
export default class ActionpackApi {

    /**
    * Constructs a new ActionpackApi. 
    * @alias module:api/ActionpackApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the actionpackAssign operation.
     * @callback module:api/ActionpackApi~actionpackAssignCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign an action item pack to a user
     * Allows the user to assign an action pack to a user or group of users.
     * @param {String} pack The id of the action pack to assign.
     * @param {Boolean} itemsdata A JSON array containing the action items' data needed to assign them to the assignee (Id, Event, DateDue, DateExpired, NotifyAssigne).
     * @param {Object} opts Optional parameters
     * @param {String} opts.assignee The assignee of the pack.
     * @param {String} opts.group The group to assign the pack.
     * @param {String} opts.notes The assignment's notes.
     * @param {module:api/ActionpackApi~actionpackAssignCallback} callback The callback function, accepting three arguments: error, data, response
     */
    actionpackAssign(pack, itemsdata, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'pack' is set
      if (pack === undefined || pack === null) {
        throw new Error("Missing the required parameter 'pack' when calling actionpackAssign");
      }
      // verify the required parameter 'itemsdata' is set
      if (itemsdata === undefined || itemsdata === null) {
        throw new Error("Missing the required parameter 'itemsdata' when calling actionpackAssign");
      }

      let pathParams = {
      };
      let queryParams = {
        'pack': pack,
        'assignee': opts['assignee'],
        'group': opts['group'],
        'itemsdata': itemsdata,
        'notes': opts['notes']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/actionpack/assign', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actionpackDelete operation.
     * @callback module:api/ActionpackApi~actionpackDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an action item pack
     * Allows the user to delete an action item pack.
     * @param {String} id The id of the action pack to delete.
     * @param {Object} opts Optional parameters
     * @param {module:model/AnyType} opts.body 
     * @param {module:api/ActionpackApi~actionpackDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    actionpackDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling actionpackDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/actionpack/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actionpackGet operation.
     * @callback module:api/ActionpackApi~actionpackGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * View details of an action item pack
     * Allows the user to view an individual action pack and its details.
     * @param {String} id The id of the action pack to get.
     * @param {module:api/ActionpackApi~actionpackGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    actionpackGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling actionpackGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/actionpack/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actionpackList operation.
     * @callback module:api/ActionpackApi~actionpackListCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * View a list of action item packs
     * Allows the user to view the full list of action item packs.
     * @param {Number} from The first record to return.
     * @param {Number} count The max number of records to return.
     * @param {module:api/ActionpackApi~actionpackListCallback} callback The callback function, accepting three arguments: error, data, response
     */
    actionpackList(from, count, callback) {
      let postBody = null;
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling actionpackList");
      }
      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling actionpackList");
      }

      let pathParams = {
      };
      let queryParams = {
        'from': from,
        'count': count
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/actionpack/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actionpackSave operation.
     * @callback module:api/ActionpackApi~actionpackSaveCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or edit an action item pack
     * Allows the user to edit an action item pack.
     * @param {String} id The id of the action pack to save (leave empty to create a new one).
     * @param {Object} opts Optional parameters
     * @param {module:model/UNKNOWN_BASE_TYPE} opts.UNKNOWN_BASE_TYPE 
     * @param {module:api/ActionpackApi~actionpackSaveCallback} callback The callback function, accepting three arguments: error, data, response
     */
    actionpackSave(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['UNKNOWN_BASE_TYPE'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling actionpackSave");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/actionpack/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
