=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'cgi'

module OpenapiClient
  class SocialApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Gets the list of contacts in the network
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter Text to filter results.
    # @option opts [Boolean] :showdefaultphoto If true, a default photo will be returned in case the user does not have a photo. Otherwise, no photo will be returned.
    # @return [nil]
    def social_contacts(opts = {})
      social_contacts_with_http_info(opts)
      nil
    end

    # Gets the list of contacts in the network
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter Text to filter results.
    # @option opts [Boolean] :showdefaultphoto If true, a default photo will be returned in case the user does not have a photo. Otherwise, no photo will be returned.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def social_contacts_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SocialApi.social_contacts ...'
      end
      # resource path
      local_var_path = '/social/contacts'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'filter'] = opts[:'filter'] if !opts[:'filter'].nil?
      query_params[:'showdefaultphoto'] = opts[:'showdefaultphoto'] if !opts[:'showdefaultphoto'].nil?

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] 

      # auth_names
      auth_names = opts[:auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SocialApi#social_contacts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
