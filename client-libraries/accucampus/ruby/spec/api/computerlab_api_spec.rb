=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ComputerlabApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ComputerlabApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ComputerlabApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ComputerlabApi' do
    it 'should create an instance of ComputerlabApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ComputerlabApi)
    end
  end

  # unit tests for computerlab_deletecomputer
  # Delete a computer
  # Allows the user to delete an existing computer.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'computerlab_deletecomputer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_getcomputer
  # Search and view details of a computer
  # Allows the user to search and view an individual computer and its details.
  # @param id The unique device id of the computer to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'computerlab_getcomputer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_getsettings
  # Loads the settings for a computer lab
  # Loads the settings for a computer lab.
  # @param id The id of the computer lab/location.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'computerlab_getsettings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_issignedin
  # Gets whether a user is signed-in or not.
  # @param station The id of the sign-in station to get.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'computerlab_issignedin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_listcomputers
  # View a list of computers
  # Allows the user to view the list of all computers.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :location The id of the location whose computers have to be returned.
  # @option opts [Boolean] :freeonly If true, only free computers will be returned.
  # @return [nil]
  describe 'computerlab_listcomputers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_listlabs
  # View a list of the locations that use the Computer Lab add-on
  # Allows the user to view the list of all labs.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'computerlab_listlabs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_liststations
  # View a list of sign-in stations available for computer labs.
  # Allows the user to view the list of sign-in stations that are available for computer labs.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'computerlab_liststations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_savecomputer
  # Create or edit a computer
  # Allows the user to create or edit a computer.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'computerlab_savecomputer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_savesettings
  # Saves the settings for a computer lab
  # Saves the settings for a computer lab.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'computerlab_savesettings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for computerlab_saveswipe
  # Save a new swipe from a computer in a computer lab.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'computerlab_saveswipe test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
