=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ScheduleApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ScheduleApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ScheduleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ScheduleApi' do
    it 'should create an instance of ScheduleApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ScheduleApi)
    end
  end

  # unit tests for schedule_delete
  # Delete a schedule slot
  # Allows the user to delete a schedule slot from another user.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'schedule_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_deletemine
  # Delete a specific block from a user&#39;s own schedule
  # Allows the user to delete a schedule block from their own availability.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'schedule_deletemine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_enable
  # Enable or disable the schedule for a specific person
  # Allows the user to enable or disable a schedule for another user.
  # @param userid The id of the user to enable or disable the schedule.
  # @param enable True to enable schedules, false to disable.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_enable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_enablemine
  # Enable or disable current user&#39;s schedule
  # Allows the user to enable or disable a schedule for himself.
  # @param enable True to enable schedules, false to disable.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_enablemine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_findallstaffslots
  # Search available schedule slots by service, event, date
  # Allows users to search available slots.
  # @param starttime The start time of the range to look for slots.
  # @param endtime The end time of the range to look for slots.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :staffid The id of the staff to filter by.
  # @option opts [String] :serviceids CSV list of the service Ids to filter by.
  # @option opts [String] :eventid The id of the event to filter by.
  # @option opts [String] :locationid The id of the location to filter by.
  # @option opts [String] :staffroleids CSV list of the staff member role ids to filter by.
  # @option opts [String] :availablefor The specific availability type to filter by.
  # @return [nil]
  describe 'schedule_findallstaffslots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_findslots
  # Search available schedule slots by service, event, date and/or staff
  # Allows users to search available slots when making appointments.
  # @param staffid The id of the staff to filter by.
  # @param starttime The start time of the range to look for slots.
  # @param endtime The end time of the range to look for slots.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :serviceids CSV list of the service Ids to filter by.
  # @option opts [String] :eventid The id of the event to filter by.
  # @option opts [String] :locationid The id of the service to filter by.
  # @option opts [String] :availablefor The specific availability type to filter by.
  # @return [nil]
  describe 'schedule_findslots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_findstaffavail
  # Search available staff members slots by service, event, and/or date
  # Allows users to search available staff.
  # @param starttime The start time of the range to look for slots.
  # @param endtime The end time of the range to look for slots.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :serviceids CSV list of the service ids to filter by.
  # @option opts [String] :eventid The id of the event to filter by.
  # @option opts [String] :locationid The id of the service to filter by.
  # @option opts [String] :staffroleids CSV list of the staff member role ids to filter by.
  # @option opts [String] :availablefor Filter slots by a specific availability type.
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'schedule_findstaffavail test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_get
  # Search and view details of a specific schedule slot
  # Allows the user to view the details of schedule shifts for any user role that the user has permission to view.
  # @param scheduleid The id of the schedule.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_getmine
  # View details of a specific schedule block, for current user
  # Allows the user to view the details of their own schedule shifts.
  # @param scheduleid The id of the schedule.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_getmine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_getstaff
  # View a list of schedule information of a specified person
  # Allows the user to view the schedule shifts for user roles that the user has permission to access.
  # @param userid The id of the user to get info.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_getstaff test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_getstaffmine
  # View current user&#39;s schedule information
  # Allows the user to view their own schedule.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'schedule_getstaffmine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_myofftimes
  # View current user&#39;s schedule exceptions
  # Allows the user to view their own schedule exceptions.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :includedeleted If true the deleted offtimes are also returned.
  # @option opts [Boolean] :onlyupcoming If true then only upcoming offtimes are returned.
  # @option opts [DateTime] :modifiedafter If specified, only offtimes modified after the specified date will be returned.
  # @return [nil]
  describe 'schedule_myofftimes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_save
  # Create or edit a schedule slot
  # Allows the user to create or edit a schedule slot of another user.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'schedule_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for schedule_savemine
  # Create or edit a block in current user&#39;s schedule
  # Allows the user to create or edit a schedule shift in their own availability.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'schedule_savemine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
