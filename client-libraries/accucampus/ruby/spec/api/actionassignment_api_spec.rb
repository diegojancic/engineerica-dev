=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ActionassignmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ActionassignmentApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ActionassignmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActionassignmentApi' do
    it 'should create an instance of ActionassignmentApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ActionassignmentApi)
    end
  end

  # unit tests for actionassignment_delete
  # Remove an action item from an action plan
  # Allows a user to remove an action item from a user&#39;s action plan.
  # @param id The id of the action assignment to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'actionassignment_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_get
  # Search and view details of an action item assigned to a user
  # Allows the user to view an individual action item and its details, minus all the action item&#39;s updates.
  # @param id The id of the action assignment to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'actionassignment_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_list
  # View a list of action items in a user&#39;s plan
  # Allows the user to view the list of all action items for a specified user.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :assignee The assignee&#39;s id to filter the assignments.
  # @option opts [Integer] :status The status to filter the assignments.
  # @return [nil]
  describe 'actionassignment_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_listhistory
  # View the history of an action item assigned to a user
  # Allows the user to view an individual action plan and its details, including all the action plan&#39;s updates.
  # @param actionassignment The action assignment&#39;s id whose history the user wants to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'actionassignment_listhistory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_listmine
  # List public action assignments assigned to the logged user
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :status The status to filter the assignments.
  # @return [nil]
  describe 'actionassignment_listmine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_listpublichistory
  # List public action assignment history
  # @param actionassignment The action assignment&#39;s id whose history the user wants to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'actionassignment_listpublichistory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_markcomplete
  # Bulk complete action items
  # Allows the user to bulk complete action items.
  # @param item The action item to assign.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :assignee The assignee of the item.
  # @option opts [String] :group The group to assing the item.
  # @option opts [String] :notes The assignment&#39;s notes.
  # @return [nil]
  describe 'actionassignment_markcomplete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_save
  # Add an action item to a user&#39;s action plan
  # Allows the user to edit or assign an action item to a user
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'actionassignment_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for actionassignment_savehistory
  # Update an action item assigned to a user
  # Allows the user to update or mark an action item as complete.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'actionassignment_savehistory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
