=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TranslationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TranslationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TranslationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TranslationApi' do
    it 'should create an instance of TranslationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TranslationApi)
    end
  end

  # unit tests for translation_get
  # Gets the translations of the specified values
  # @param universal Pipe separated list of universal text to be translated.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'translation_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for translation_getcachefile
  # Get the file containing the translations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account The id of the account whose translations file has to be retrieved.
  # @return [nil]
  describe 'translation_getcachefile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for translation_list
  # Lists all the available translations in the system
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Text to search/filter translations.
  # @option opts [Boolean] :nondefaultonly If true then it returns only the terms translated. Otherwise, it returns all.
  # @option opts [Boolean] :appdefaultasuniversal If true then it uses the app default translation as the universal term.
  # @return [nil]
  describe 'translation_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for translation_save
  # Edit a translation
  # Allows the user to edit a translation for the entire account.
  # @param id The id of the translation as returned by translation.list.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'translation_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
