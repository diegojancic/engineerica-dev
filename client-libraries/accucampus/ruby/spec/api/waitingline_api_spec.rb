=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::WaitinglineApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WaitinglineApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::WaitinglineApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WaitinglineApi' do
    it 'should create an instance of WaitinglineApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::WaitinglineApi)
    end
  end

  # unit tests for waitingline_adduser
  # Put user in a waiting line
  # @param station The id of the sign-in station.
  # @param user The user&#39;s card number.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :locationid The location&#39;s id where the swipe must be saved.
  # @option opts [DateTime] :time The date and time of the swipe.
  # @option opts [String] :signinrole Specifies if the sign-in is for an attendee or a staff member
  # @option opts [String] :roleid Specifies the role the user has selected in order to sign-in
  # @option opts [String] :services The services ids the user has selected.
  # @option opts [String] :eventid The id of the event the user selected.
  # @option opts [String] :staff The id of the staff member the user selected.
  # @option opts [Integer] :photosize The swiping user&#39;s photo size.
  # @return [nil]
  describe 'waitingline_adduser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_delete
  # Delete a waiting line
  # Allows the user to delete an existing waiting line, provided it is in a location that the user is scoped to.
  # @param id The id of the line to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'waitingline_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_get
  # View details of a waiting line
  # Allows the user to view the details of a waiting line in a location to which they are scoped.
  # @param id The id of the waiting line to get.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'waitingline_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_isuserin
  # Check whether a user is in a waiting line, signed-in or is not in the area
  # @param station The id of the sign-in station.
  # @param time The date and time of the swipe.
  # @param user The card number of the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :location The id of the location the user picked.
  # @return [nil]
  describe 'waitingline_isuserin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_list
  # View a list of waiting lines
  # Allows the user to view the list of waiting lines in locations to which they are scoped.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'waitingline_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_removeuser
  # Remove a user from a waiting line
  # Allows the user to remove a user from a waiting line, provided they have permission to access that waiting line.
  # @param waitingline The id of the waiting line whose item has to be removed.
  # @param itemid The ID of the item that has to be removed.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'waitingline_removeuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_save
  # Create or edit a waiting line
  # Allows the user to create or edit a waiting line in a location to which they are scoped.
  # @param id The id of the waiting line save (leave empty to create a new one).
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'waitingline_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for waitingline_signinuser
  # Sign a user in from a waiting line
  # Allows the user to sign a user in from a waiting line, provided they have permission to access that waiting line.
  # @param waitingline The id of the waiting line whose item needs to be signed-in.
  # @param itemid The ID of the item that has to be signed-in.
  # @param staff The id of the staff member selected to sign-in.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photosize The swiping user&#39;s photo size.
  # @return [nil]
  describe 'waitingline_signinuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
