=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SessionswipeApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SessionswipeApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SessionswipeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionswipeApi' do
    it 'should create an instance of SessionswipeApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SessionswipeApi)
    end
  end

  # unit tests for sessionswipe_delete
  # Delete a session swipe
  # Allows the user to delete an existing class attendance swipe.
  # @param id The id of the session swipe to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'sessionswipe_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionswipe_get
  # View details of a class attendance swipe
  # Allows the user to view an individual class attendance swipe.
  # @param id The id of the swipe to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionswipe_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionswipe_listunresolved
  # View a list of unresolved swipes
  # Allows the user to view all unresolved swipes.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionswipe_listunresolved test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionswipe_resolve
  # Resolve a swipe and create the corresponding attendance log
  # Allows the user to resolve an unresolved swipe, which would result in the creation of an attendance log.
  # @param id The id of the swipe to resolve.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :session The id of the session whose swipe has to be saved.
  # @option opts [String] :user The id of the user who signed-in.
  # @return [nil]
  describe 'sessionswipe_resolve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionswipe_save
  # Creates a new swipe, and if possible, creates the attendance log
  # Allows the user to create a new swipe, which would usually result in an attendance log.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'sessionswipe_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionswipe_saveanonym
  # Creates a new swipe from a sign-in station, and if possible, creates the attendance log
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'sessionswipe_saveanonym test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
