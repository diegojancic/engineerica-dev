=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::UserprofileApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserprofileApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::UserprofileApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserprofileApi' do
    it 'should create an instance of UserprofileApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::UserprofileApi)
    end
  end

  # unit tests for userprofile_delete
  # Delete a user profile
  # Allows the user to delete a profile from the list of profiles that they have permission to edit.
  # @param id The id of the user profile to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'userprofile_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_get
  # View a specific user profile
  # Allows the user to view individual user profiles and their details, provided they have permission to view that profile.
  # @param id The id of the profile question set.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'userprofile_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_getallview
  # Shows the profile for a specific (or current) user, based on each profile questionnaire questions.
  # Allows the user to view a profile for a user, provided they have permission to view that user and profile.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id The id of the user to view, or empty for current user.
  # @return [nil]
  describe 'userprofile_getallview test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_list
  # View the list of user profiles
  # Allows the user to view the full list of profiles that they have permission to view.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from The first record to return.
  # @option opts [Integer] :count The max number of records to return.
  # @return [nil]
  describe 'userprofile_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_listquestions
  # Gets the list of all the available user questions
  # Allows the user to view the list of questions in a profile that they have permission to view.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'userprofile_listquestions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_preparestats
  # Gets the statistics of a user group
  # Allows the user to view the demographic statistics of a user group.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params The ID of the group, specified as &#39;group&#x3D;...&#39;
  # @return [nil]
  describe 'userprofile_preparestats test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_save
  # Create or edit user profile questions
  # Allows the user to create or edit a user profile.
  # @param id The id of the profile question set.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'userprofile_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for userprofile_saveanswers
  # Saves the profile for a specific (or current) user. Additional security applies on a per profile basis.
  # Allows the user to edit a profile for a user, provided they have permission to edit that user and profile.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'userprofile_saveanswers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
