=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MediaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MediaApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MediaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MediaApi' do
    it 'should create an instance of MediaApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MediaApi)
    end
  end

  # unit tests for media_checkin
  # Check in media item
  # Allows the user to check in a media item.
  # @param media The id of the media item to checkin.
  # @param checkindate The checkout date.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :notes The notes of the checkout.
  # @return [nil]
  describe 'media_checkin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_checkout
  # Check out media item
  # Allows the user to check out a media item.
  # @param media The id of the media item to checkout.
  # @param user The id of the user that is checking the item out.
  # @param checkoutdate The checkout date.
  # @param duedate The date when the checkout is due.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :staff The id of the staff member related to the checkout.
  # @option opts [String] :event The id of the event related to the checkout.
  # @option opts [String] :notes The notes of the checkout.
  # @return [nil]
  describe 'media_checkout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_checkoutlist
  # View a list of past media checkouts
  # Allows the user to view a list of all past checkouts
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :media Used to filter the checkouts of a specific media item.
  # @option opts [String] :user Used to filter the checkouts made by a specific user.
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'media_checkoutlist test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_delete
  # Delete a media item
  # Allows the user to delete an existing media item.
  # @param id The id of the media item to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'media_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_deletecheckoutlog
  # Delete a media checkout log
  # Allows the user to delete a media item&#39;s checkout log.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'media_deletecheckoutlog test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_get
  # Search and view details of a media item
  # Allows the user to view an individual media item and its details.
  # @param id The id of the media item to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'media_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_getbycode
  # Search media item by unique code
  # Allows the user to search for media items by their unique code.
  # @param code The code of the media item to get.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :location The location where to look for the media item.
  # @return [nil]
  describe 'media_getbycode test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_getcheckout
  # View details of a media item checkout information
  # Allows the user to view a media item&#39;s checkout information.
  # @param id The id of the media item whose checkout information has to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'media_getcheckout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_getcheckoutlog
  # View details of a media checkout log
  # Allows the user to view a media item&#39;s checkout history.
  # @param id The id of the media item whose checkout information has to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'media_getcheckoutlog test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_list
  # View a list of media items
  # Allows the user to view the list of all media items tied to locations in which the user is scoped.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :status Used to filter the media items by their checkout status (0 &#x3D; CheckedIn, 1 &#x3D; CheckedOut, Unspecified &#x3D; All).
  # @option opts [String] :user Used to filter the media items that are checked-out by a specific user.
  # @return [nil]
  describe 'media_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for media_save
  # Create or edit a media item
  # Allows the user to create or edit a media item.
  # @param id The id of the media item save (leave empty to create a new one).
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'media_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
