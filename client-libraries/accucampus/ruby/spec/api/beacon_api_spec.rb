=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::BeaconApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BeaconApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::BeaconApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BeaconApi' do
    it 'should create an instance of BeaconApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::BeaconApi)
    end
  end

  # unit tests for beacon_delete
  # Delete a beacon profile
  # Allows the user to delete an existing beacon profile.
  # @param id The id of the beacon to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'beacon_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_disable
  # Disable beacon support account wide
  # Allows the user to enable or disable beacon usage account wide.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_disable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_get
  # View details of a beacon profile
  # Allows the user to view an individual beacon profile and its details.
  # @param id The id of the beacon to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_getlocations
  # Get the sign-in stations assigned to specific beacons.
  # @param beacons A JSON array containg the beacons data (region, minor and major) values.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_getlocations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_getstationlocation
  # Get the location settings in the specified sign-in station.
  # @param station The id of the sign-in station whose location information has to be retrieved.
  # @param location The id of the location whose information has to be retrieved.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_getstationlocation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_getuuid
  # View the identifier for the account&#39;s beacon region (for sign-in stations).
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_getuuid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_list
  # View a list of beacon profiles
  # Allows the user to view the list of all beacon profiles without their basic details.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_listprofiles
  # View a list of beacon profiles with their characteristics
  # Allows the user to view the list of all beacon profiles with their basic details.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_listprofiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_resetuuid
  # Generate or reset the identifier for the account&#39;s beacon region.
  # Allows the user to reset the identifier for the beacon region, generally not necessary.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_resetuuid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_save
  # Create or edit a beacon profile
  # Allows the user to create or edit a beacon profile.
  # @param id The id of the beacon save (leave empty to create a new one).
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'beacon_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_scanlocations
  # Check if there&#39;s location available to sign-in / out.
  # @param beacons A JSON array containg the beacons data (region, minor and major) values.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_scanlocations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_setuuid
  # Set the identifier for the account&#39;s beacon region (for sign-in stations).
  # Allows the user to set the identifier for the account&#39;s beacon regions for sign-in stations, generally not necessary as each sign-in station profile generates its own region.
  # @param id The custom region UUID.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_setuuid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_silentregions
  # View all the beacon regions defined for silent tracking
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_silentregions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_silentsignin
  # Sign-in silently from the location specified by a beacon
  # @param uuid The id of the region the user is in.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_silentsignin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for beacon_silentsignout
  # Sign-out silently from the location specified by a beacon
  # @param uuid The id of the region the user has left.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'beacon_silentsignout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
