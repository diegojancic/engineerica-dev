=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ServiceassignmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ServiceassignmentApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ServiceassignmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ServiceassignmentApi' do
    it 'should create an instance of ServiceassignmentApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ServiceassignmentApi)
    end
  end

  # unit tests for serviceassignment_addservice
  # Enable a service in a specific location
  # Allows the user to enable a service in a location to which they are scoped.
  # @param serviceid The id of the service to add.
  # @param locationid The id of the location.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'serviceassignment_addservice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for serviceassignment_getlocation
  # View a list of services enabled for a specific location
  # Allows the user to view a list of services available in a location to which they are scoped.
  # @param locationid The id of the location to get.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :includegloballyavailable Specifies whether the services available globally must be returned or not.
  # @option opts [Boolean] :namefilter Filters the name of the services to return.
  # @option opts [Integer] :count The max number of services to return.
  # @return [nil]
  describe 'serviceassignment_getlocation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for serviceassignment_getservice
  # View a list of locations where a service is available
  # Allows the user to view a list of locations in which a service is available.
  # @param serviceid The id of the service to get its locations.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'serviceassignment_getservice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for serviceassignment_removeservice
  # Remove a service from a location
  # Allows the user to disable a service from a location to which they are scoped.
  # @param serviceid The id of the service to remove.
  # @param locationid The id of the location to remove the service from.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'serviceassignment_removeservice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
