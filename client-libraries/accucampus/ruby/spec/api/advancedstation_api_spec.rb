=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AdvancedstationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdvancedstationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AdvancedstationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdvancedstationApi' do
    it 'should create an instance of AdvancedstationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AdvancedstationApi)
    end
  end

  # unit tests for advancedstation_checkunknownuser
  # Check whether the user is known by the system.
  # @param station The id of the sign-in station to get.
  # @param user The card of the user.
  # @param location The id of the location the user picked.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_checkunknownuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_checkuserrole
  # Check whether the user is a staff member, an attendee or both.
  # @param station The id of the sign-in station to get.
  # @param user The card of the user.
  # @param location The id of the location the user picked.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_checkuserrole test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_createuser
  # Creates a user via a sign-in station.
  # @param station The id of the sign-in station to get.
  # @param user The card of the user to create.
  # @param location The id of the location the user picked.
  # @param firstname The first name of the user to create.
  # @param lastname The last name of the user to create.
  # @param email The email of the user to create.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :middlename The middle name of the user to create.
  # @return [nil]
  describe 'advancedstation_createuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getevents
  # Gets the courses available for a specific location and a specific student.
  # @param station The id of the sign-in station to get.
  # @param location The id of the location the student picked.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_getevents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getinfo
  # Gets the info to display in the sign-in station by it&#39;s ID.
  # @param id The id of the sign-in station to get.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :event The id of the event (or session), to override the scheduled one.
  # @return [nil]
  describe 'advancedstation_getinfo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getlocations
  # Gets the locations available in a sign-in station.
  # @param station The id of the sign-in station whose locations have to be returned.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_getlocations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getlogstaff
  # Gets the staff/tutors available filtered by the location, course and services of the given attendance log.
  # @param station The id of the sign-in station to get.
  # @param attendancelog The id of the attendance log to filter the staff members.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'advancedstation_getlogstaff test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getroles
  # Gets the user roles of the user trying to sign-in.
  # @param station The id of the sign-in station to get.
  # @param signinrole Specifies how the user is signing-in.
  # @param user The card of the user.
  # @param location The id of the location the user picked.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_getroles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getservices
  # Gets the services available for a specific location.
  # @param station The id of the sign-in station to get.
  # @param location The id of the location the student picked.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advancedstation_getservices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_getstaff
  # Gets the staff/tutors available for a specific location, course and service.
  # @param station The id of the sign-in station to get.
  # @param locationid The id of the location the student picked.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :services The list of services selected by the user, in JSON format.
  # @option opts [String] :eventid The ID of the event selected.
  # @option opts [Integer] :photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
  # @return [nil]
  describe 'advancedstation_getstaff test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advancedstation_issignedin
  # Gets whether a user is signed-in or not.
  # @param station The id of the sign-in station to get.
  # @param time The date and time of the swipe.
  # @param user The card of the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :location The id of the location the user picked.
  # @return [nil]
  describe 'advancedstation_issignedin test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
