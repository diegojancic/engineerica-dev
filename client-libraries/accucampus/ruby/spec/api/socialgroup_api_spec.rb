=begin
#AccuCampus OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SocialgroupApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SocialgroupApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SocialgroupApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SocialgroupApi' do
    it 'should create an instance of SocialgroupApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SocialgroupApi)
    end
  end

  # unit tests for socialgroup_addmembers
  # Adds new members to a group (which the user must own already)
  # @param id ID of the group to add members to.
  # @param userids Csv list of user Ids to add.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'socialgroup_addmembers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_delete
  # Deletes a group
  # @param id ID of the group to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'socialgroup_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_list
  # View all the groups the current user is in
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'socialgroup_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_listmembers
  # Lists the members of a group
  # @param id ID of the group to list members.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'socialgroup_listmembers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_removemembers
  # Removes members from a group (which the user must own already)
  # @param id ID of the group to remove members from.
  # @param userids Csv list of user Ids to remove.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'socialgroup_removemembers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_removemyself
  # Removes myself from an existent group
  # @param id ID of the group to remove me from.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'socialgroup_removemyself test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for socialgroup_save
  # Saves a new group
  # @param id ID of the group to update. Leave blank to create new.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'socialgroup_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
