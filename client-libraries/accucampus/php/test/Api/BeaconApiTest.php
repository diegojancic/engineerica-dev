<?php
/**
 * BeaconApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AccuCampus OpenAPI 3
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BeaconApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BeaconApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for beaconDelete
     *
     * Delete a beacon profile.
     *
     */
    public function testBeaconDelete()
    {
    }

    /**
     * Test case for beaconDisable
     *
     * Disable beacon support account wide.
     *
     */
    public function testBeaconDisable()
    {
    }

    /**
     * Test case for beaconGet
     *
     * View details of a beacon profile.
     *
     */
    public function testBeaconGet()
    {
    }

    /**
     * Test case for beaconGetlocations
     *
     * Get the sign-in stations assigned to specific beacons..
     *
     */
    public function testBeaconGetlocations()
    {
    }

    /**
     * Test case for beaconGetstationlocation
     *
     * Get the location settings in the specified sign-in station..
     *
     */
    public function testBeaconGetstationlocation()
    {
    }

    /**
     * Test case for beaconGetuuid
     *
     * View the identifier for the account's beacon region (for sign-in stations)..
     *
     */
    public function testBeaconGetuuid()
    {
    }

    /**
     * Test case for beaconList
     *
     * View a list of beacon profiles.
     *
     */
    public function testBeaconList()
    {
    }

    /**
     * Test case for beaconListprofiles
     *
     * View a list of beacon profiles with their characteristics.
     *
     */
    public function testBeaconListprofiles()
    {
    }

    /**
     * Test case for beaconResetuuid
     *
     * Generate or reset the identifier for the account's beacon region..
     *
     */
    public function testBeaconResetuuid()
    {
    }

    /**
     * Test case for beaconSave
     *
     * Create or edit a beacon profile.
     *
     */
    public function testBeaconSave()
    {
    }

    /**
     * Test case for beaconScanlocations
     *
     * Check if there's location available to sign-in / out..
     *
     */
    public function testBeaconScanlocations()
    {
    }

    /**
     * Test case for beaconSetuuid
     *
     * Set the identifier for the account's beacon region (for sign-in stations)..
     *
     */
    public function testBeaconSetuuid()
    {
    }

    /**
     * Test case for beaconSilentregions
     *
     * View all the beacon regions defined for silent tracking.
     *
     */
    public function testBeaconSilentregions()
    {
    }

    /**
     * Test case for beaconSilentsignin
     *
     * Sign-in silently from the location specified by a beacon.
     *
     */
    public function testBeaconSilentsignin()
    {
    }

    /**
     * Test case for beaconSilentsignout
     *
     * Sign-out silently from the location specified by a beacon.
     *
     */
    public function testBeaconSilentsignout()
    {
    }
}
