=begin comment

AccuCampus OpenAPI 3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::MediaApi');

my $api = WWW::OpenAPIClient::MediaApi->new();
isa_ok($api, 'WWW::OpenAPIClient::MediaApi');

#
# media_checkin test
#
{
    my $media = undef; # replace NULL with a proper value
    my $checkindate = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->media_checkin(media => $media, checkindate => $checkindate, notes => $notes);
}

#
# media_checkout test
#
{
    my $media = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $checkoutdate = undef; # replace NULL with a proper value
    my $duedate = undef; # replace NULL with a proper value
    my $staff = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->media_checkout(media => $media, user => $user, checkoutdate => $checkoutdate, duedate => $duedate, staff => $staff, event => $event, notes => $notes);
}

#
# media_checkoutlist test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $media = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->media_checkoutlist(from => $from, count => $count, media => $media, user => $user, photosize => $photosize);
}

#
# media_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->media_delete(id => $id, body => $body);
}

#
# media_deletecheckoutlog test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->media_deletecheckoutlog(unknown_base_type => $unknown_base_type);
}

#
# media_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->media_get(id => $id);
}

#
# media_getbycode test
#
{
    my $code = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->media_getbycode(code => $code, location => $location);
}

#
# media_getcheckout test
#
{
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->media_getcheckout(id => $id, photosize => $photosize);
}

#
# media_getcheckoutlog test
#
{
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->media_getcheckoutlog(id => $id, photosize => $photosize);
}

#
# media_list test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->media_list(from => $from, count => $count, status => $status, user => $user);
}

#
# media_save test
#
{
    my $id = undef; # replace NULL with a proper value
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->media_save(id => $id, unknown_base_type => $unknown_base_type);
}


1;
