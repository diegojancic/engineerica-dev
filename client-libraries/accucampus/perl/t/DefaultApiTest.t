=begin comment

AccuCampus OpenAPI 3 Documentation

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::DefaultApi');

my $api = WWW::OpenAPIClient::DefaultApi->new();
isa_ok($api, 'WWW::OpenAPIClient::DefaultApi');

#
# actionassignmentdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentdelete(token => $token, id => $id);
}

#
# actionassignmentget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentget(token => $token, id => $id);
}

#
# actionassignmentlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $assignee = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentlist(token => $token, from => $from, count => $count, assignee => $assignee, status => $status);
}

#
# actionassignmentlisthistory test
#
{
    my $token = undef; # replace NULL with a proper value
    my $actionassignment = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentlisthistory(token => $token, actionassignment => $actionassignment);
}

#
# actionassignmentlistmine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentlistmine(token => $token, from => $from, count => $count, status => $status);
}

#
# actionassignmentlistpublichistory test
#
{
    my $token = undef; # replace NULL with a proper value
    my $actionassignment = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentlistpublichistory(token => $token, actionassignment => $actionassignment);
}

#
# actionassignmentmarkcomplete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $item = undef; # replace NULL with a proper value
    my $assignee = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentmarkcomplete(token => $token, item => $item, assignee => $assignee, group => $group, notes => $notes);
}

#
# actionassignmentsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentsave(unknown_base_type => $unknown_base_type);
}

#
# actionassignmentsavehistory test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->actionassignmentsavehistory(unknown_base_type => $unknown_base_type);
}

#
# actionitemdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionitemdelete(token => $token, id => $id);
}

#
# actionitemget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionitemget(token => $token, id => $id);
}

#
# actionitemlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->actionitemlist(token => $token, from => $from, count => $count);
}

#
# actionitemsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->actionitemsave(unknown_base_type => $unknown_base_type);
}

#
# actionloglist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $resource = undef; # replace NULL with a proper value
    my $actionfilter = undef; # replace NULL with a proper value
    my $argument = undef; # replace NULL with a proper value
    my $result = $api->actionloglist(token => $token, from => $from, count => $count, user => $user, startdate => $startdate, enddate => $enddate, resource => $resource, actionfilter => $actionfilter, argument => $argument);
}

#
# actionpackassign test
#
{
    my $token = undef; # replace NULL with a proper value
    my $pack = undef; # replace NULL with a proper value
    my $itemsdata = undef; # replace NULL with a proper value
    my $assignee = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->actionpackassign(token => $token, pack => $pack, itemsdata => $itemsdata, assignee => $assignee, group => $group, notes => $notes);
}

#
# actionpackdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionpackdelete(token => $token, id => $id);
}

#
# actionpackget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actionpackget(token => $token, id => $id);
}

#
# actionpacklist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->actionpacklist(token => $token, from => $from, count => $count);
}

#
# actionpacksave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->actionpacksave(unknown_base_type => $unknown_base_type);
}

#
# actiontypedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actiontypedelete(token => $token, id => $id);
}

#
# actiontypeget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->actiontypeget(token => $token, id => $id);
}

#
# actiontypelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->actiontypelist(token => $token, from => $from, count => $count);
}

#
# actiontypesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->actiontypesave(unknown_base_type => $unknown_base_type);
}

#
# adhocquerycheckexecution test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->adhocquerycheckexecution(token => $token, id => $id);
}

#
# adhocquerydelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->adhocquerydelete(token => $token, id => $id);
}

#
# adhocqueryexecute test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $query = undef; # replace NULL with a proper value
    my $result = $api->adhocqueryexecute(token => $token, id => $id, query => $query);
}

#
# adhocqueryget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->adhocqueryget(token => $token, id => $id);
}

#
# adhocquerygetschema test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->adhocquerygetschema(token => $token);
}

#
# adhocquerylist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->adhocquerylist(token => $token, from => $from, count => $count);
}

#
# adhocquerylistexecutions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $query = undef; # replace NULL with a proper value
    my $result = $api->adhocquerylistexecutions(token => $token, from => $from, count => $count, query => $query);
}

#
# adhocquerysave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->adhocquerysave(unknown_base_type => $unknown_base_type);
}

#
# adhocquerystopexecution test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->adhocquerystopexecution(token => $token, id => $id);
}

#
# adhocreportsreqaccess test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->adhocreportsreqaccess(token => $token);
}

#
# advancedstationcheckunknownuser test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->advancedstationcheckunknownuser(station => $station, user => $user, location => $location);
}

#
# advancedstationcheckuserrole test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->advancedstationcheckuserrole(station => $station, user => $user, location => $location);
}

#
# advancedstationcreateuser test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $firstname = undef; # replace NULL with a proper value
    my $lastname = undef; # replace NULL with a proper value
    my $email = undef; # replace NULL with a proper value
    my $middlename = undef; # replace NULL with a proper value
    my $result = $api->advancedstationcreateuser(station => $station, user => $user, location => $location, firstname => $firstname, lastname => $lastname, email => $email, middlename => $middlename);
}

#
# advancedstationgetevents test
#
{
    my $station = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetevents(station => $station, location => $location, user => $user);
}

#
# advancedstationgetinfo test
#
{
    my $id = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetinfo(id => $id, event => $event);
}

#
# advancedstationgetlocations test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetlocations(station => $station, user => $user);
}

#
# advancedstationgetlogstaff test
#
{
    my $station = undef; # replace NULL with a proper value
    my $attendancelog = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetlogstaff(station => $station, attendancelog => $attendancelog, photosize => $photosize);
}

#
# advancedstationgetroles test
#
{
    my $station = undef; # replace NULL with a proper value
    my $signinrole = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetroles(station => $station, signinrole => $signinrole, user => $user, location => $location);
}

#
# advancedstationgetservices test
#
{
    my $station = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetservices(station => $station, location => $location, user => $user);
}

#
# advancedstationgetstaff test
#
{
    my $station = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $services = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->advancedstationgetstaff(station => $station, locationid => $locationid, user => $user, services => $services, eventid => $eventid, photosize => $photosize);
}

#
# advancedstationissignedin test
#
{
    my $station = undef; # replace NULL with a proper value
    my $time = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->advancedstationissignedin(station => $station, time => $time, user => $user, location => $location);
}

#
# advroleaddmissing test
#
{
    my $token = undef; # replace NULL with a proper value
    my $roles = undef; # replace NULL with a proper value
    my $permissions = undef; # replace NULL with a proper value
    my $result = $api->advroleaddmissing(token => $token, roles => $roles, permissions => $permissions);
}

#
# advrolecheckperm test
#
{
    my $token = undef; # replace NULL with a proper value
    my $roles = undef; # replace NULL with a proper value
    my $permissions = undef; # replace NULL with a proper value
    my $result = $api->advrolecheckperm(token => $token, roles => $roles, permissions => $permissions);
}

#
# advroledelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->advroledelete(token => $token, id => $id);
}

#
# advroledeletemapping test
#
{
    my $token = undef; # replace NULL with a proper value
    my $map = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $result = $api->advroledeletemapping(token => $token, map => $map, roleid => $roleid);
}

#
# advroleget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->advroleget(token => $token, id => $id);
}

#
# advrolelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $includepolicies = undef; # replace NULL with a proper value
    my $includeinternal = undef; # replace NULL with a proper value
    my $name = undef; # replace NULL with a proper value
    my $result = $api->advrolelist(token => $token, includepolicies => $includepolicies, includeinternal => $includeinternal, name => $name);
}

#
# advrolelistmaps test
#
{
    my $token = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $result = $api->advrolelistmaps(token => $token, roleid => $roleid);
}

#
# advrolelistrolesmapped test
#
{
    my $token = undef; # replace NULL with a proper value
    my $map = undef; # replace NULL with a proper value
    my $result = $api->advrolelistrolesmapped(token => $token, map => $map);
}

#
# advrolelisttemplates test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->advrolelisttemplates(token => $token);
}

#
# advrolesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->advrolesave(unknown_base_type => $unknown_base_type);
}

#
# advrolesavemapping test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->advrolesavemapping(unknown_base_type => $unknown_base_type);
}

#
# advrolesuserlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $onlywithoutcard = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->advrolesuserlist(token => $token, from => $from, count => $count, roleid => $roleid, onlywithoutcard => $onlywithoutcard, photosize => $photosize);
}

#
# advroleuserupgrade test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $result = $api->advroleuserupgrade(token => $token, userid => $userid, roleid => $roleid);
}

#
# appointmentcancel test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentcancel(token => $token, id => $id);
}

#
# appointmentcheckisvalid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $editing = undef; # replace NULL with a proper value
    my $result = $api->appointmentcheckisvalid(token => $token, id => $id, editing => $editing);
}

#
# appointmenteditanyway test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $attendee = undef; # replace NULL with a proper value
    my $staff = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $end = undef; # replace NULL with a proper value
    my $term = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $services = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->appointmenteditanyway(token => $token, id => $id, attendee => $attendee, staff => $staff, location => $location, start => $start, end => $end, term => $term, event => $event, services => $services, notes => $notes);
}

#
# appointmenteditpresence test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $showedup = undef; # replace NULL with a proper value
    my $result = $api->appointmenteditpresence(token => $token, id => $id, showedup => $showedup);
}

#
# appointmentfindallstaffslots test
#
{
    my $token = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->appointmentfindallstaffslots(token => $token, starttime => $starttime, endtime => $endtime, serviceids => $serviceids, locationid => $locationid, eventid => $eventid, photosize => $photosize);
}

#
# appointmentfindslots test
#
{
    my $token = undef; # replace NULL with a proper value
    my $staffid = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $result = $api->appointmentfindslots(token => $token, staffid => $staffid, starttime => $starttime, endtime => $endtime, serviceids => $serviceids, eventid => $eventid, locationid => $locationid);
}

#
# appointmentfindstaff test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->appointmentfindstaff(token => $token, serviceids => $serviceids, starttime => $starttime, endtime => $endtime, eventid => $eventid, locationid => $locationid, photosize => $photosize);
}

#
# appointmentget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentget(token => $token, id => $id);
}

#
# appointmentgetcurrent test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->appointmentgetcurrent(station => $station, user => $user, location => $location);
}

#
# appointmentgetlocations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->appointmentgetlocations(token => $token, serviceid => $serviceid);
}

#
# appointmentlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->appointmentlist(token => $token, from => $from, count => $count, startdate => $startdate, enddate => $enddate, userid => $userid);
}

#
# appointmentlistmine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $modifiedafter = undef; # replace NULL with a proper value
    my $result = $api->appointmentlistmine(token => $token, start => $start, modifiedafter => $modifiedafter);
}

#
# appointmentlistupcoming test
#
{
    my $token = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $modifiedafter = undef; # replace NULL with a proper value
    my $result = $api->appointmentlistupcoming(token => $token, start => $start, modifiedafter => $modifiedafter);
}

#
# appointmentrescheduleoutlook test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $end = undef; # replace NULL with a proper value
    my $result = $api->appointmentrescheduleoutlook(token => $token, id => $id, start => $start, end => $end);
}

#
# appointmentrestore test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentrestore(token => $token, id => $id);
}

#
# appointmentrestoreanyway test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentrestoreanyway(token => $token, id => $id);
}

#
# appointmentsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->appointmentsave(unknown_base_type => $unknown_base_type);
}

#
# appointmentsetasvalid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentsetasvalid(token => $token, id => $id);
}

#
# appointmentsuggestlocations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->appointmentsuggestlocations(token => $token);
}

#
# appointmentsuggestservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->appointmentsuggestservices(token => $token);
}

#
# appointmentvoid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->appointmentvoid(token => $token, id => $id);
}

#
# appsharegetphone test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->appsharegetphone(token => $token);
}

#
# appsharesendtext test
#
{
    my $token = undef; # replace NULL with a proper value
    my $phonenumber = undef; # replace NULL with a proper value
    my $result = $api->appsharesendtext(token => $token, phonenumber => $phonenumber);
}

#
# attendancelogcommentdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancelogcommentdelete(token => $token, id => $id);
}

#
# attendancelogcommentget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancelogcommentget(token => $token, id => $id);
}

#
# attendancelogcommentlist test
#
{
    my $attendancelog = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $result = $api->attendancelogcommentlist(attendancelog => $attendancelog, token => $token);
}

#
# attendancelogcommentsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->attendancelogcommentsave(unknown_base_type => $unknown_base_type);
}

#
# attendancelogdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancelogdelete(token => $token, id => $id);
}

#
# attendancelogget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancelogget(token => $token, id => $id);
}

#
# attendanceloggetchangehistory test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendanceloggetchangehistory(token => $token, id => $id);
}

#
# attendanceloglist test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $filter = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->attendanceloglist(from => $from, count => $count, token => $token, filter => $filter, userid => $userid);
}

#
# attendanceloglistmine test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $filter = undef; # replace NULL with a proper value
    my $result = $api->attendanceloglistmine(from => $from, count => $count, token => $token, filter => $filter);
}

#
# attendancelogliststaff test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $filter = undef; # replace NULL with a proper value
    my $result = $api->attendancelogliststaff(from => $from, count => $count, token => $token, filter => $filter);
}

#
# attendancelogsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->attendancelogsave(unknown_base_type => $unknown_base_type);
}

#
# attendancelogsignout test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $datetime = undef; # replace NULL with a proper value
    my $result = $api->attendancelogsignout(token => $token, id => $id, location => $location, event => $event, datetime => $datetime);
}

#
# attendancelogwhosin test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $sorting = undef; # replace NULL with a proper value
    my $roles = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $extensions = undef; # replace NULL with a proper value
    my $export = undef; # replace NULL with a proper value
    my $result = $api->attendancelogwhosin(from => $from, count => $count, token => $token, location => $location, event => $event, sorting => $sorting, roles => $roles, photosize => $photosize, extensions => $extensions, export => $export);
}

#
# attendancerestrictiondelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancerestrictiondelete(token => $token, id => $id);
}

#
# attendancerestrictionget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->attendancerestrictionget(token => $token, id => $id);
}

#
# attendancerestrictionlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->attendancerestrictionlist(token => $token, from => $from, count => $count);
}

#
# attendancerestrictionsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->attendancerestrictionsave(unknown_base_type => $unknown_base_type);
}

#
# beacondelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->beacondelete(token => $token, id => $id);
}

#
# beacondisable test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->beacondisable(token => $token);
}

#
# beaconget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->beaconget(token => $token, id => $id);
}

#
# beacongetlocations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $beacons = undef; # replace NULL with a proper value
    my $result = $api->beacongetlocations(token => $token, beacons => $beacons);
}

#
# beacongetstationlocation test
#
{
    my $token = undef; # replace NULL with a proper value
    my $station = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->beacongetstationlocation(token => $token, station => $station, location => $location);
}

#
# beacongetuuid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->beacongetuuid(token => $token);
}

#
# beaconlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->beaconlist(token => $token, from => $from, count => $count);
}

#
# beaconlistprofiles test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->beaconlistprofiles(token => $token);
}

#
# beaconresetuuid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->beaconresetuuid(token => $token);
}

#
# beaconsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->beaconsave(unknown_base_type => $unknown_base_type);
}

#
# beaconscanlocations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $beacons = undef; # replace NULL with a proper value
    my $result = $api->beaconscanlocations(token => $token, beacons => $beacons);
}

#
# beaconsetuuid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->beaconsetuuid(token => $token, id => $id);
}

#
# beaconsilentregions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->beaconsilentregions(token => $token);
}

#
# beaconsilentsignin test
#
{
    my $token = undef; # replace NULL with a proper value
    my $uuid = undef; # replace NULL with a proper value
    my $result = $api->beaconsilentsignin(token => $token, uuid => $uuid);
}

#
# beaconsilentsignout test
#
{
    my $token = undef; # replace NULL with a proper value
    my $uuid = undef; # replace NULL with a proper value
    my $result = $api->beaconsilentsignout(token => $token, uuid => $uuid);
}

#
# bgjobgetstatus test
#
{
    my $token = undef; # replace NULL with a proper value
    my $jobid = undef; # replace NULL with a proper value
    my $jobtype = undef; # replace NULL with a proper value
    my $result = $api->bgjobgetstatus(token => $token, jobid => $jobid, jobtype => $jobtype);
}

#
# captchagetchallenge test
#
{
    my $result = $api->captchagetchallenge();
}

#
# captchagetimage test
#
{
    my $captchatoken = undef; # replace NULL with a proper value
    my $result = $api->captchagetimage(captchatoken => $captchatoken);
}

#
# changelog test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->changelog(token => $token);
}

#
# clientget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $client = undef; # replace NULL with a proper value
    my $clientname = undef; # replace NULL with a proper value
    my $result = $api->clientget(token => $token, client => $client, clientname => $clientname);
}

#
# clientlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->clientlist(token => $token, from => $from, count => $count);
}

#
# clientsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->clientsave(unknown_base_type => $unknown_base_type);
}

#
# clientsendmessage test
#
{
    my $token = undef; # replace NULL with a proper value
    my $uniqueclientid = undef; # replace NULL with a proper value
    my $message = undef; # replace NULL with a proper value
    my $result = $api->clientsendmessage(token => $token, uniqueclientid => $uniqueclientid, message => $message);
}

#
# communityinvite test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->communityinvite(token => $token);
}

#
# communityjoin test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->communityjoin(token => $token);
}

#
# compasscategorydelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->compasscategorydelete(token => $token, id => $id);
}

#
# compasscategoryget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->compasscategoryget(token => $token, id => $id);
}

#
# compasscategorylist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $onlywithservices = undef; # replace NULL with a proper value
    my $result = $api->compasscategorylist(token => $token, from => $from, count => $count, onlywithservices => $onlywithservices);
}

#
# compasscategorysave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->compasscategorysave(unknown_base_type => $unknown_base_type);
}

#
# compassservicelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $category = undef; # replace NULL with a proper value
    my $result = $api->compassservicelist(token => $token, category => $category);
}

#
# compassservicelistlocations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->compassservicelistlocations(token => $token, serviceid => $serviceid);
}

#
# computerlabdeletecomputer test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->computerlabdeletecomputer(token => $token, id => $id);
}

#
# computerlabgetcomputer test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->computerlabgetcomputer(token => $token, id => $id);
}

#
# computerlabgetsettings test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->computerlabgetsettings(id => $id);
}

#
# computerlabissignedin test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->computerlabissignedin(station => $station, user => $user);
}

#
# computerlablistcomputers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $freeonly = undef; # replace NULL with a proper value
    my $result = $api->computerlablistcomputers(token => $token, from => $from, count => $count, location => $location, freeonly => $freeonly);
}

#
# computerlablistlabs test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->computerlablistlabs(token => $token);
}

#
# computerlabliststations test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->computerlabliststations(token => $token);
}

#
# computerlabsavecomputer test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->computerlabsavecomputer(unknown_base_type => $unknown_base_type);
}

#
# computerlabsavesettings test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->computerlabsavesettings(unknown_base_type => $unknown_base_type);
}

#
# computerlabsaveswipe test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->computerlabsaveswipe(unknown_base_type => $unknown_base_type);
}

#
# deadendrecordingdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $hierarchykey = undef; # replace NULL with a proper value
    my $result = $api->deadendrecordingdelete(token => $token, hierarchykey => $hierarchykey);
}

#
# deadendrecordinglist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->deadendrecordinglist(token => $token);
}

#
# deadendrecordinglistcomments test
#
{
    my $token = undef; # replace NULL with a proper value
    my $hierarchykey = undef; # replace NULL with a proper value
    my $result = $api->deadendrecordinglistcomments(token => $token, hierarchykey => $hierarchykey);
}

#
# deadendrecordingsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->deadendrecordingsave(unknown_base_type => $unknown_base_type);
}

#
# departmentdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->departmentdelete(token => $token, id => $id);
}

#
# departmentget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->departmentget(token => $token, id => $id);
}

#
# departmentlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->departmentlist(token => $token, from => $from, count => $count);
}

#
# departmentsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->departmentsave(unknown_base_type => $unknown_base_type);
}

#
# doc test
#
{
    my $excludeanonymous = undef; # replace NULL with a proper value
    my $result = $api->doc(excludeanonymous => $excludeanonymous);
}

#
# easyloginaddbgimage test
#
{
    my $token = undef; # replace NULL with a proper value
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $result = $api->easyloginaddbgimage(token => $token, upload => $upload, filename => $filename);
}

#
# eventchecksessions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $autorepair = undef; # replace NULL with a proper value
    my $result = $api->eventchecksessions(token => $token, eventid => $eventid, autorepair => $autorepair);
}

#
# eventdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->eventdelete(token => $token, id => $id);
}

#
# eventget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->eventget(token => $token, id => $id);
}

#
# eventgetsessionsbydate test
#
{
    my $token = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $date = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $result = $api->eventgetsessionsbydate(token => $token, location => $location, date => $date, type => $type);
}

#
# eventlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $summaryonly = undef; # replace NULL with a proper value
    my $termid = undef; # replace NULL with a proper value
    my $result = $api->eventlist(token => $token, from => $from, count => $count, summaryonly => $summaryonly, termid => $termid);
}

#
# eventlistregistered test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $summaryonly = undef; # replace NULL with a proper value
    my $termid = undef; # replace NULL with a proper value
    my $result = $api->eventlistregistered(token => $token, from => $from, count => $count, summaryonly => $summaryonly, termid => $termid);
}

#
# eventregaddme test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregaddme(token => $token, eventid => $eventid, listname => $listname);
}

#
# eventregaddmetoall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregaddmetoall(token => $token, listname => $listname);
}

#
# eventregaddmetogroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $codegroup = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregaddmetogroup(token => $token, codegroup => $codegroup, listname => $listname);
}

#
# eventregadduser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregadduser(token => $token, userid => $userid, eventid => $eventid, listname => $listname);
}

#
# eventregaddusertoall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregaddusertoall(token => $token, userid => $userid, listname => $listname);
}

#
# eventregaddusertogroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $codegroup = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregaddusertogroup(token => $token, userid => $userid, codegroup => $codegroup, listname => $listname);
}

#
# eventreggetevents test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $termid = undef; # replace NULL with a proper value
    my $namefilter = undef; # replace NULL with a proper value
    my $result = $api->eventreggetevents(token => $token, userid => $userid, listname => $listname, termid => $termid, namefilter => $namefilter);
}

#
# eventreggetgroups test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventreggetgroups(token => $token, userid => $userid, listname => $listname);
}

#
# eventreggetmyevents test
#
{
    my $token = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $termid = undef; # replace NULL with a proper value
    my $namefilter = undef; # replace NULL with a proper value
    my $result = $api->eventreggetmyevents(token => $token, listname => $listname, termid => $termid, namefilter => $namefilter);
}

#
# eventreggetmygroups test
#
{
    my $token = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventreggetmygroups(token => $token, listname => $listname);
}

#
# eventreggetusers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->eventreggetusers(token => $token, eventid => $eventid, listname => $listname, photosize => $photosize);
}

#
# eventreggetusersfromgroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $codegroup = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventreggetusersfromgroup(token => $token, codegroup => $codegroup, listname => $listname);
}

#
# eventreggetuserstoall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventreggetuserstoall(token => $token, listname => $listname);
}

#
# eventregremoveme test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremoveme(token => $token, eventid => $eventid, listname => $listname);
}

#
# eventregremovemefromall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremovemefromall(token => $token, listname => $listname);
}

#
# eventregremovemefromgroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $codegroup = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremovemefromgroup(token => $token, codegroup => $codegroup, listname => $listname);
}

#
# eventregremoveuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremoveuser(token => $token, userid => $userid, eventid => $eventid, listname => $listname);
}

#
# eventregremoveuserfromall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremoveuserfromall(token => $token, userid => $userid, listname => $listname);
}

#
# eventregremoveuserfromgroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $codegroup = undef; # replace NULL with a proper value
    my $listname = undef; # replace NULL with a proper value
    my $result = $api->eventregremoveuserfromgroup(token => $token, userid => $userid, codegroup => $codegroup, listname => $listname);
}

#
# eventsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->eventsave(unknown_base_type => $unknown_base_type);
}

#
# eventsearchgroup test
#
{
    my $token = undef; # replace NULL with a proper value
    my $query = undef; # replace NULL with a proper value
    my $result = $api->eventsearchgroup(token => $token, query => $query);
}

#
# export test
#
{
    my $token = undef; # replace NULL with a proper value
    my $exporttype = undef; # replace NULL with a proper value
    my $exportformat = undef; # replace NULL with a proper value
    my $filters = undef; # replace NULL with a proper value
    my $result = $api->export(token => $token, exporttype => $exporttype, exportformat => $exportformat, filters => $filters);
}

#
# exportlisttypes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->exportlisttypes(token => $token);
}

#
# featurelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->featurelist(token => $token);
}

#
# holidaylist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $term = undef; # replace NULL with a proper value
    my $result = $api->holidaylist(token => $token, term => $term);
}

#
# holidaysave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->holidaysave(unknown_base_type => $unknown_base_type);
}

#
# holidaysuggest test
#
{
    my $token = undef; # replace NULL with a proper value
    my $term = undef; # replace NULL with a proper value
    my $result = $api->holidaysuggest(token => $token, term => $term);
}

#
# import test
#
{
    my $token = undef; # replace NULL with a proper value
    my $importtype = undef; # replace NULL with a proper value
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $parameters = undef; # replace NULL with a proper value
    my $result = $api->import(token => $token, importtype => $importtype, upload => $upload, filename => $filename, parameters => $parameters);
}

#
# importlisttypes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->importlisttypes(token => $token);
}

#
# interactiondelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->interactiondelete(token => $token, id => $id);
}

#
# interactionfeed test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $public = undef; # replace NULL with a proper value
    my $contexttype = undef; # replace NULL with a proper value
    my $contextid = undef; # replace NULL with a proper value
    my $types = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $showdefaultphoto = undef; # replace NULL with a proper value
    my $orderdescending = undef; # replace NULL with a proper value
    my $result = $api->interactionfeed(token => $token, from => $from, count => $count, startdate => $startdate, public => $public, contexttype => $contexttype, contextid => $contextid, types => $types, photosize => $photosize, showdefaultphoto => $showdefaultphoto, orderdescending => $orderdescending);
}

#
# interactionget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $thumbnailmediasize = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->interactionget(token => $token, id => $id, thumbnailmediasize => $thumbnailmediasize, photosize => $photosize);
}

#
# interactionlistprivatesummary test
#
{
    my $token = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $showdefaultphoto = undef; # replace NULL with a proper value
    my $result = $api->interactionlistprivatesummary(token => $token, photosize => $photosize, showdefaultphoto => $showdefaultphoto);
}

#
# interactionsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->interactionsave(unknown_base_type => $unknown_base_type);
}

#
# licenseacceptagreement test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->licenseacceptagreement(token => $token);
}

#
# licensegetagreementstatus test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->licensegetagreementstatus(token => $token);
}

#
# licensegetcurrent test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->licensegetcurrent(token => $token);
}

#
# licenserenew test
#
{
    my $token = undef; # replace NULL with a proper value
    my $email = undef; # replace NULL with a proper value
    my $phonenumber = undef; # replace NULL with a proper value
    my $jobtitle = undef; # replace NULL with a proper value
    my $institution = undef; # replace NULL with a proper value
    my $comments = undef; # replace NULL with a proper value
    my $result = $api->licenserenew(token => $token, email => $email, phonenumber => $phonenumber, jobtitle => $jobtitle, institution => $institution, comments => $comments);
}

#
# likedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $interactionid = undef; # replace NULL with a proper value
    my $result = $api->likedelete(token => $token, interactionid => $interactionid);
}

#
# likelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $interactionid = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->likelist(token => $token, interactionid => $interactionid, photosize => $photosize);
}

#
# likesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->likesave(unknown_base_type => $unknown_base_type);
}

#
# listtimezones test
#
{
    my $result = $api->listtimezones();
}

#
# locationdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->locationdelete(token => $token, id => $id);
}

#
# locationget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->locationget(token => $token, id => $id);
}

#
# locationlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $locations = undef; # replace NULL with a proper value
    my $sortbygroup = undef; # replace NULL with a proper value
    my $result = $api->locationlist(token => $token, from => $from, count => $count, locations => $locations, sortbygroup => $sortbygroup);
}

#
# locationsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->locationsave(unknown_base_type => $unknown_base_type);
}

#
# login test
#
{
    my $domain = undef; # replace NULL with a proper value
    my $username = undef; # replace NULL with a proper value
    my $password = undef; # replace NULL with a proper value
    my $method = undef; # replace NULL with a proper value
    my $rememberme = undef; # replace NULL with a proper value
    my $result = $api->login(domain => $domain, username => $username, password => $password, method => $method, rememberme => $rememberme);
}

#
# logout test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->logout(token => $token);
}

#
# mediacheckin test
#
{
    my $token = undef; # replace NULL with a proper value
    my $media = undef; # replace NULL with a proper value
    my $checkindate = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->mediacheckin(token => $token, media => $media, checkindate => $checkindate, notes => $notes);
}

#
# mediacheckout test
#
{
    my $token = undef; # replace NULL with a proper value
    my $media = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $checkoutdate = undef; # replace NULL with a proper value
    my $duedate = undef; # replace NULL with a proper value
    my $staff = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $notes = undef; # replace NULL with a proper value
    my $result = $api->mediacheckout(token => $token, media => $media, user => $user, checkoutdate => $checkoutdate, duedate => $duedate, staff => $staff, event => $event, notes => $notes);
}

#
# mediacheckoutlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $media = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->mediacheckoutlist(token => $token, from => $from, count => $count, media => $media, user => $user, photosize => $photosize);
}

#
# mediadelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->mediadelete(token => $token, id => $id);
}

#
# mediadeletecheckoutlog test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->mediadeletecheckoutlog(token => $token, id => $id);
}

#
# mediaget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->mediaget(token => $token, id => $id);
}

#
# mediagetbycode test
#
{
    my $token = undef; # replace NULL with a proper value
    my $code = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->mediagetbycode(token => $token, code => $code, location => $location);
}

#
# mediagetcheckout test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->mediagetcheckout(token => $token, id => $id, photosize => $photosize);
}

#
# mediagetcheckoutlog test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->mediagetcheckoutlog(token => $token, id => $id, photosize => $photosize);
}

#
# medialist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->medialist(token => $token, from => $from, count => $count, status => $status, user => $user);
}

#
# mediasave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->mediasave(unknown_base_type => $unknown_base_type);
}

#
# mediatypedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->mediatypedelete(token => $token, id => $id);
}

#
# mediatypeget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->mediatypeget(token => $token, id => $id);
}

#
# mediatypelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->mediatypelist(token => $token, from => $from, count => $count);
}

#
# mediatypesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->mediatypesave(unknown_base_type => $unknown_base_type);
}

#
# memorizedreportdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->memorizedreportdelete(token => $token, id => $id);
}

#
# memorizedreportget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->memorizedreportget(token => $token, id => $id);
}

#
# memorizedreportlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $customname = undef; # replace NULL with a proper value
    my $result = $api->memorizedreportlist(token => $token, from => $from, count => $count, customname => $customname);
}

#
# memorizedreportsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->memorizedreportsave(unknown_base_type => $unknown_base_type);
}

#
# menugetitems test
#
{
    my $menuid = undef; # replace NULL with a proper value
    my $result = $api->menugetitems(menuid => $menuid);
}

#
# myaccount test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->myaccount(token => $token);
}

#
# myianatimezone test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->myianatimezone(token => $token);
}

#
# myprofile test
#
{
    my $token = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->myprofile(token => $token, photosize => $photosize);
}

#
# myrights test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->myrights(token => $token);
}

#
# mysaveprofile test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->mysaveprofile(unknown_base_type => $unknown_base_type);
}

#
# notificationdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->notificationdelete(token => $token, id => $id);
}

#
# notificationget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->notificationget(token => $token, id => $id);
}

#
# notificationgetforstation test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->notificationgetforstation(station => $station, user => $user);
}

#
# notificationgetunreadcount test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->notificationgetunreadcount(token => $token);
}

#
# notificationlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $recipient = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $sentonscreen = undef; # replace NULL with a proper value
    my $sentemail = undef; # replace NULL with a proper value
    my $sentsms = undef; # replace NULL with a proper value
    my $result = $api->notificationlist(token => $token, from => $from, count => $count, recipient => $recipient, status => $status, startdate => $startdate, enddate => $enddate, sentonscreen => $sentonscreen, sentemail => $sentemail, sentsms => $sentsms);
}

#
# notificationlistmine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $result = $api->notificationlistmine(token => $token, from => $from, count => $count, status => $status, startdate => $startdate, enddate => $enddate);
}

#
# notificationmarkasread test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $result = $api->notificationmarkasread(token => $token, id => $id, status => $status, startdate => $startdate, enddate => $enddate);
}

#
# notificationmarkasunread test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $result = $api->notificationmarkasunread(token => $token, id => $id, status => $status, startdate => $startdate, enddate => $enddate);
}

#
# notificationsend test
#
{
    my $token = undef; # replace NULL with a proper value
    my $emailenabled = undef; # replace NULL with a proper value
    my $onscreenenabled = undef; # replace NULL with a proper value
    my $smsenabled = undef; # replace NULL with a proper value
    my $title = undef; # replace NULL with a proper value
    my $tousers = undef; # replace NULL with a proper value
    my $togroups = undef; # replace NULL with a proper value
    my $onscreenbody = undef; # replace NULL with a proper value
    my $onscreenclick = undef; # replace NULL with a proper value
    my $onscreenurl = undef; # replace NULL with a proper value
    my $onscreenclass = undef; # replace NULL with a proper value
    my $onscreenduration = undef; # replace NULL with a proper value
    my $showonstation = undef; # replace NULL with a proper value
    my $emailfromname = undef; # replace NULL with a proper value
    my $emailfrom = undef; # replace NULL with a proper value
    my $emailsubject = undef; # replace NULL with a proper value
    my $emailbody = undef; # replace NULL with a proper value
    my $textmessagebody = undef; # replace NULL with a proper value
    my $result = $api->notificationsend(token => $token, emailenabled => $emailenabled, onscreenenabled => $onscreenenabled, smsenabled => $smsenabled, title => $title, tousers => $tousers, togroups => $togroups, onscreenbody => $onscreenbody, onscreenclick => $onscreenclick, onscreenurl => $onscreenurl, onscreenclass => $onscreenclass, onscreenduration => $onscreenduration, showonstation => $showonstation, emailfromname => $emailfromname, emailfrom => $emailfrom, emailsubject => $emailsubject, emailbody => $emailbody, textmessagebody => $textmessagebody);
}

#
# notificationsendonscreen test
#
{
    my $token = undef; # replace NULL with a proper value
    my $notification = undef; # replace NULL with a proper value
    my $result = $api->notificationsendonscreen(token => $token, notification => $notification);
}

#
# notificationtopicdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->notificationtopicdelete(token => $token, id => $id);
}

#
# notificationtopicget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->notificationtopicget(token => $token, id => $id);
}

#
# notificationtopiclist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->notificationtopiclist(token => $token, from => $from, count => $count);
}

#
# notificationtopiclistsubscribe test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->notificationtopiclistsubscribe(token => $token);
}

#
# notificationtopicsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->notificationtopicsave(unknown_base_type => $unknown_base_type);
}

#
# pushderegister test
#
{
    my $devicetoken = undef; # replace NULL with a proper value
    my $platform = undef; # replace NULL with a proper value
    my $result = $api->pushderegister(devicetoken => $devicetoken, platform => $platform);
}

#
# pushregister test
#
{
    my $devicetoken = undef; # replace NULL with a proper value
    my $platform = undef; # replace NULL with a proper value
    my $result = $api->pushregister(devicetoken => $devicetoken, platform => $platform);
}

#
# qrlabelsprint test
#
{
    my $token = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $result = $api->qrlabelsprint(token => $token, user => $user, group => $group);
}

#
# qrloginget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->qrloginget(token => $token);
}

#
# qrloginlogin test
#
{
    my $onetimetoken = undef; # replace NULL with a proper value
    my $result = $api->qrloginlogin(onetimetoken => $onetimetoken);
}

#
# quickpaneldeletewidget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->quickpaneldeletewidget(token => $token, id => $id);
}

#
# quickpanelfetchwidget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $widgetid = undef; # replace NULL with a proper value
    my $result = $api->quickpanelfetchwidget(token => $token, widgetid => $widgetid);
}

#
# quickpanelgetwidget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->quickpanelgetwidget(token => $token, id => $id);
}

#
# quickpanelinit test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->quickpanelinit(token => $token);
}

#
# quickpanellistwidgets test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->quickpanellistwidgets(token => $token);
}

#
# quickpanellistwidgettypes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->quickpanellistwidgettypes(token => $token);
}

#
# quickpanelreorderwidgets test
#
{
    my $token = undef; # replace NULL with a proper value
    my $sectionname = undef; # replace NULL with a proper value
    my $orderids = undef; # replace NULL with a proper value
    my $result = $api->quickpanelreorderwidgets(token => $token, sectionname => $sectionname, orderids => $orderids);
}

#
# quickpanelsavewidget test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->quickpanelsavewidget(unknown_base_type => $unknown_base_type);
}

#
# ratingflag test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $comment = undef; # replace NULL with a proper value
    my $result = $api->ratingflag(token => $token, id => $id, comment => $comment);
}

#
# ratingflagcomment test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $comment = undef; # replace NULL with a proper value
    my $result = $api->ratingflagcomment(token => $token, id => $id, comment => $comment);
}

#
# ratingget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $entityids = undef; # replace NULL with a proper value
    my $result = $api->ratingget(token => $token, type => $type, entityids => $entityids);
}

#
# ratinggetall test
#
{
    my $token = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $entityid = undef; # replace NULL with a proper value
    my $mostrecentfirst = undef; # replace NULL with a proper value
    my $result = $api->ratinggetall(token => $token, type => $type, entityid => $entityid, mostrecentfirst => $mostrecentfirst);
}

#
# ratinggetcomments test
#
{
    my $token = undef; # replace NULL with a proper value
    my $ratingid = undef; # replace NULL with a proper value
    my $result = $api->ratinggetcomments(token => $token, ratingid => $ratingid);
}

#
# ratinggetpending test
#
{
    my $getgroup = undef; # replace NULL with a proper value
    my $rateid = undef; # replace NULL with a proper value
    my $rateval = undef; # replace NULL with a proper value
    my $result = $api->ratinggetpending(getgroup => $getgroup, rateid => $rateid, rateval => $rateval);
}

#
# ratinggetpendingmoderation test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->ratinggetpendingmoderation(token => $token);
}

#
# ratingmoderate test
#
{
    my $token = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $approve = undef; # replace NULL with a proper value
    my $result = $api->ratingmoderate(token => $token, type => $type, id => $id, approve => $approve);
}

#
# ratingpostcomment test
#
{
    my $token = undef; # replace NULL with a proper value
    my $ratingid = undef; # replace NULL with a proper value
    my $comment = undef; # replace NULL with a proper value
    my $annonymous = undef; # replace NULL with a proper value
    my $result = $api->ratingpostcomment(token => $token, ratingid => $ratingid, comment => $comment, annonymous => $annonymous);
}

#
# ratingrate test
#
{
    my $token = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $entityid = undef; # replace NULL with a proper value
    my $annonymous = undef; # replace NULL with a proper value
    my $value = undef; # replace NULL with a proper value
    my $comment = undef; # replace NULL with a proper value
    my $updatecomment = undef; # replace NULL with a proper value
    my $result = $api->ratingrate(token => $token, type => $type, entityid => $entityid, annonymous => $annonymous, value => $value, comment => $comment, updatecomment => $updatecomment);
}

#
# ratingratepending test
#
{
    my $group = undef; # replace NULL with a proper value
    my $annonymous = undef; # replace NULL with a proper value
    my $rateid = undef; # replace NULL with a proper value
    my $value = undef; # replace NULL with a proper value
    my $comment = undef; # replace NULL with a proper value
    my $updatecomment = undef; # replace NULL with a proper value
    my $result = $api->ratingratepending(group => $group, annonymous => $annonymous, rateid => $rateid, value => $value, comment => $comment, updatecomment => $updatecomment);
}

#
# ratingvote test
#
{
    my $token = undef; # replace NULL with a proper value
    my $ratingid = undef; # replace NULL with a proper value
    my $vote = undef; # replace NULL with a proper value
    my $result = $api->ratingvote(token => $token, ratingid => $ratingid, vote => $vote);
}

#
# reportattanalyticsprepare test
#
{
    my $token = undef; # replace NULL with a proper value
    my $reportname = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $refreshgroup = undef; # replace NULL with a proper value
    my $result = $api->reportattanalyticsprepare(token => $token, reportname => $reportname, params => $params, refreshgroup => $refreshgroup);
}

#
# reportlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->reportlist(token => $token);
}

#
# reportpermissionsbyuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $result = $api->reportpermissionsbyuser(token => $token, params => $params);
}

#
# reportprepare test
#
{
    my $token = undef; # replace NULL with a proper value
    my $reportname = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $repformat = undef; # replace NULL with a proper value
    my $fillgroupid = undef; # replace NULL with a proper value
    my $groupby = undef; # replace NULL with a proper value
    my $refreshgroup = undef; # replace NULL with a proper value
    my $filtertext = undef; # replace NULL with a proper value
    my $result = $api->reportprepare(token => $token, reportname => $reportname, params => $params, repformat => $repformat, fillgroupid => $fillgroupid, groupby => $groupby, refreshgroup => $refreshgroup, filtertext => $filtertext);
}

#
# reportquery test
#
{
    my $token = undef; # replace NULL with a proper value
    my $reportname = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $result = $api->reportquery(token => $token, reportname => $reportname, params => $params);
}

#
# reportscheduledelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->reportscheduledelete(token => $token, id => $id);
}

#
# reportscheduleget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->reportscheduleget(token => $token, id => $id);
}

#
# reportschedulelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->reportschedulelist(token => $token, from => $from, count => $count);
}

#
# reportschedulesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->reportschedulesave(unknown_base_type => $unknown_base_type);
}

#
# reporttagresults test
#
{
    my $token = undef; # replace NULL with a proper value
    my $reportname = undef; # replace NULL with a proper value
    my $assign = undef; # replace NULL with a proper value
    my $tags = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $result = $api->reporttagresults(token => $token, reportname => $reportname, assign => $assign, tags => $tags, params => $params);
}

#
# riskmodelcheckanalysis test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodelcheckanalysis(token => $token, id => $id);
}

#
# riskmodeldelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodeldelete(token => $token, id => $id);
}

#
# riskmodelget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodelget(token => $token, id => $id);
}

#
# riskmodelgetscore test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->riskmodelgetscore(token => $token, userid => $userid);
}

#
# riskmodellist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->riskmodellist(token => $token, from => $from, count => $count);
}

#
# riskmodelpredict test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodelpredict(token => $token, id => $id);
}

#
# riskmodelprocess test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodelprocess(token => $token, id => $id);
}

#
# riskmodelrefresh test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->riskmodelrefresh(token => $token, id => $id);
}

#
# riskmodelsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->riskmodelsave(unknown_base_type => $unknown_base_type);
}

#
# riskmodeltermprecedences test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->riskmodeltermprecedences(token => $token);
}

#
# rolelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $name = undef; # replace NULL with a proper value
    my $result = $api->rolelist(token => $token, name => $name);
}

#
# ruledelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->ruledelete(token => $token, id => $id);
}

#
# ruleget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->ruleget(token => $token, id => $id);
}

#
# rulegeteventtype test
#
{
    my $token = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $result = $api->rulegeteventtype(token => $token, event => $event);
}

#
# rulelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->rulelist(token => $token, from => $from, count => $count);
}

#
# rulelistactions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->rulelistactions(token => $token);
}

#
# rulelisteventtypes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->rulelisteventtypes(token => $token);
}

#
# rulelisthttprequests test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $failed = undef; # replace NULL with a proper value
    my $status = undef; # replace NULL with a proper value
    my $result = $api->rulelisthttprequests(token => $token, from => $from, count => $count, failed => $failed, status => $status);
}

#
# rulesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->rulesave(unknown_base_type => $unknown_base_type);
}

#
# scheduledelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $scheduleid = undef; # replace NULL with a proper value
    my $result = $api->scheduledelete(token => $token, scheduleid => $scheduleid);
}

#
# scheduledeletemine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $scheduleid = undef; # replace NULL with a proper value
    my $result = $api->scheduledeletemine(token => $token, scheduleid => $scheduleid);
}

#
# scheduleenable test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $enable = undef; # replace NULL with a proper value
    my $result = $api->scheduleenable(token => $token, userid => $userid, enable => $enable);
}

#
# scheduleenablemine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $enable = undef; # replace NULL with a proper value
    my $result = $api->scheduleenablemine(token => $token, enable => $enable);
}

#
# schedulefindallstaffslots test
#
{
    my $token = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $staffid = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $staffroleids = undef; # replace NULL with a proper value
    my $availablefor = undef; # replace NULL with a proper value
    my $result = $api->schedulefindallstaffslots(token => $token, starttime => $starttime, endtime => $endtime, staffid => $staffid, serviceids => $serviceids, eventid => $eventid, locationid => $locationid, staffroleids => $staffroleids, availablefor => $availablefor);
}

#
# schedulefindslots test
#
{
    my $token = undef; # replace NULL with a proper value
    my $staffid = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $availablefor = undef; # replace NULL with a proper value
    my $result = $api->schedulefindslots(token => $token, staffid => $staffid, starttime => $starttime, endtime => $endtime, serviceids => $serviceids, eventid => $eventid, locationid => $locationid, availablefor => $availablefor);
}

#
# schedulefindstaffavail test
#
{
    my $token = undef; # replace NULL with a proper value
    my $starttime = undef; # replace NULL with a proper value
    my $endtime = undef; # replace NULL with a proper value
    my $serviceids = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $staffroleids = undef; # replace NULL with a proper value
    my $availablefor = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->schedulefindstaffavail(token => $token, starttime => $starttime, endtime => $endtime, serviceids => $serviceids, eventid => $eventid, locationid => $locationid, staffroleids => $staffroleids, availablefor => $availablefor, photosize => $photosize);
}

#
# scheduleget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $scheduleid = undef; # replace NULL with a proper value
    my $result = $api->scheduleget(token => $token, scheduleid => $scheduleid);
}

#
# schedulegetmine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $scheduleid = undef; # replace NULL with a proper value
    my $result = $api->schedulegetmine(token => $token, scheduleid => $scheduleid);
}

#
# schedulegetstaff test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->schedulegetstaff(token => $token, userid => $userid);
}

#
# schedulegetstaffmine test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->schedulegetstaffmine(token => $token);
}

#
# scheduleintegrationdeleteitem test
#
{
    my $token = undef; # replace NULL with a proper value
    my $thirdpartyid = undef; # replace NULL with a proper value
    my $result = $api->scheduleintegrationdeleteitem(token => $token, thirdpartyid => $thirdpartyid);
}

#
# scheduleintegrationdeleteitemsbymasterid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $thirdpartymasterid = undef; # replace NULL with a proper value
    my $result = $api->scheduleintegrationdeleteitemsbymasterid(token => $token, thirdpartymasterid => $thirdpartymasterid);
}

#
# scheduleintegrationgetitem test
#
{
    my $token = undef; # replace NULL with a proper value
    my $thirdpartyid = undef; # replace NULL with a proper value
    my $result = $api->scheduleintegrationgetitem(token => $token, thirdpartyid => $thirdpartyid);
}

#
# scheduleintegrationsaveitem test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->scheduleintegrationsaveitem(unknown_base_type => $unknown_base_type);
}

#
# scheduleintegrationsetid test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $thirdpartyid = undef; # replace NULL with a proper value
    my $thirdpartymasterid = undef; # replace NULL with a proper value
    my $result = $api->scheduleintegrationsetid(token => $token, id => $id, thirdpartyid => $thirdpartyid, thirdpartymasterid => $thirdpartymasterid);
}

#
# schedulemyofftimes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $includedeleted = undef; # replace NULL with a proper value
    my $onlyupcoming = undef; # replace NULL with a proper value
    my $modifiedafter = undef; # replace NULL with a proper value
    my $result = $api->schedulemyofftimes(token => $token, includedeleted => $includedeleted, onlyupcoming => $onlyupcoming, modifiedafter => $modifiedafter);
}

#
# schedulesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->schedulesave(unknown_base_type => $unknown_base_type);
}

#
# schedulesavemine test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->schedulesavemine(unknown_base_type => $unknown_base_type);
}

#
# search test
#
{
    my $token = undef; # replace NULL with a proper value
    my $query = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $result = $api->search(token => $token, query => $query, page => $page);
}

#
# searchgetentities test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->searchgetentities(token => $token);
}

#
# securityassesspermission test
#
{
    my $token = undef; # replace NULL with a proper value
    my $commandname = undef; # replace NULL with a proper value
    my $result = $api->securityassesspermission(token => $token, commandname => $commandname);
}

#
# securityassessrole test
#
{
    my $token = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $result = $api->securityassessrole(token => $token, roleid => $roleid);
}

#
# securityassessscope test
#
{
    my $token = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $result = $api->securityassessscope(token => $token, locationid => $locationid);
}

#
# securityassessuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->securityassessuser(token => $token, userid => $userid);
}

#
# seminardelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->seminardelete(token => $token, id => $id);
}

#
# seminarget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->seminarget(token => $token, id => $id);
}

#
# seminarlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $summaryonly = undef; # replace NULL with a proper value
    my $termid = undef; # replace NULL with a proper value
    my $result = $api->seminarlist(token => $token, from => $from, count => $count, summaryonly => $summaryonly, termid => $termid);
}

#
# seminarsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->seminarsave(unknown_base_type => $unknown_base_type);
}

#
# serviceassignmentaddservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $result = $api->serviceassignmentaddservice(token => $token, serviceid => $serviceid, locationid => $locationid);
}

#
# serviceassignmentgetlocation test
#
{
    my $token = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $includegloballyavailable = undef; # replace NULL with a proper value
    my $namefilter = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->serviceassignmentgetlocation(token => $token, locationid => $locationid, includegloballyavailable => $includegloballyavailable, namefilter => $namefilter, count => $count);
}

#
# serviceassignmentgetservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->serviceassignmentgetservice(token => $token, serviceid => $serviceid);
}

#
# serviceassignmentremoveservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $result = $api->serviceassignmentremoveservice(token => $token, serviceid => $serviceid, locationid => $locationid);
}

#
# servicedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->servicedelete(token => $token, id => $id);
}

#
# serviceget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->serviceget(token => $token, id => $id);
}

#
# servicelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->servicelist(token => $token, from => $from, count => $count);
}

#
# servicesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->servicesave(unknown_base_type => $unknown_base_type);
}

#
# sessionattendancelogaddnote test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $text = undef; # replace NULL with a proper value
    my $result = $api->sessionattendancelogaddnote(token => $token, id => $id, text => $text);
}

#
# sessionattendancelogget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->sessionattendancelogget(token => $token, id => $id, photosize => $photosize);
}

#
# sessionattendanceloggetuser test
#
{
    my $attendee = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $result = $api->sessionattendanceloggetuser(attendee => $attendee, eventid => $eventid, token => $token);
}

#
# sessionattendanceloglist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $session = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->sessionattendanceloglist(token => $token, session => $session, from => $from, count => $count, photosize => $photosize);
}

#
# sessionattendanceloglistevent test
#
{
    my $eventid = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $result = $api->sessionattendanceloglistevent(eventid => $eventid, token => $token);
}

#
# sessionattendanceloglistsummary test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $attendeeid = undef; # replace NULL with a proper value
    my $groupid = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $end = undef; # replace NULL with a proper value
    my $result = $api->sessionattendanceloglistsummary(token => $token, eventid => $eventid, attendeeid => $attendeeid, groupid => $groupid, start => $start, end => $end);
}

#
# sessionattendancelogmylistsummary test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $start = undef; # replace NULL with a proper value
    my $end = undef; # replace NULL with a proper value
    my $result = $api->sessionattendancelogmylistsummary(token => $token, eventid => $eventid, start => $start, end => $end);
}

#
# sessionattendancelogsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionattendancelogsave(unknown_base_type => $unknown_base_type);
}

#
# sessionattendancelogsaveswipe test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionattendancelogsaveswipe(unknown_base_type => $unknown_base_type);
}

#
# sessionbulkupdate test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessions = undef; # replace NULL with a proper value
    my $result = $api->sessionbulkupdate(token => $token, eventid => $eventid, sessions => $sessions);
}

#
# sessionget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->sessionget(token => $token, id => $id);
}

#
# sessiongetschedule test
#
{
    my $token = undef; # replace NULL with a proper value
    my $day = undef; # replace NULL with a proper value
    my $attendee = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $instructor = undef; # replace NULL with a proper value
    my $result = $api->sessiongetschedule(token => $token, day => $day, attendee => $attendee, location => $location, instructor => $instructor);
}

#
# sessionlist test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $startdate = undef; # replace NULL with a proper value
    my $enddate = undef; # replace NULL with a proper value
    my $result = $api->sessionlist(from => $from, count => $count, token => $token, startdate => $startdate, enddate => $enddate);
}

#
# sessionregaddcurrentuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionregaddcurrentuser(token => $token, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionregadduser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionregadduser(token => $token, userid => $userid, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreggetmysessions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $date = undef; # replace NULL with a proper value
    my $result = $api->sessionreggetmysessions(token => $token, date => $date);
}

#
# sessionreggetsessions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->sessionreggetsessions(token => $token, userid => $userid);
}

#
# sessionreggetsettings test
#
{
    my $token = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $noinherit = undef; # replace NULL with a proper value
    my $result = $api->sessionreggetsettings(token => $token, locationid => $locationid, eventid => $eventid, sessiondate => $sessiondate, noinherit => $noinherit);
}

#
# sessionreggetusers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreggetusers(token => $token, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreglistsessions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreglistsessions(token => $token, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreglistupcoming test
#
{
    my $token = undef; # replace NULL with a proper value
    my $date = undef; # replace NULL with a proper value
    my $result = $api->sessionreglistupcoming(token => $token, date => $date);
}

#
# sessionreglistupcomingevent test
#
{
    my $token = undef; # replace NULL with a proper value
    my $date = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $result = $api->sessionreglistupcomingevent(token => $token, date => $date, event => $event);
}

#
# sessionregremovecurrentuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionregremovecurrentuser(token => $token, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionregremoveuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionregremoveuser(token => $token, userid => $userid, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionregsavesettings test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionregsavesettings(unknown_base_type => $unknown_base_type);
}

#
# sessionswipedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->sessionswipedelete(token => $token, id => $id);
}

#
# sessionswipeget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->sessionswipeget(token => $token, id => $id);
}

#
# sessionswipelistunresolved test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $result = $api->sessionswipelistunresolved(from => $from, count => $count, token => $token);
}

#
# sessionswiperesolve test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $session = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->sessionswiperesolve(token => $token, id => $id, session => $session, user => $user);
}

#
# sessionswipesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionswipesave(unknown_base_type => $unknown_base_type);
}

#
# sessionswipesaveanonym test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionswipesaveanonym(unknown_base_type => $unknown_base_type);
}

#
# settingaddlogo test
#
{
    my $token = undef; # replace NULL with a proper value
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $result = $api->settingaddlogo(token => $token, upload => $upload, filename => $filename);
}

#
# settingget test
#
{
    my $keys = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $domain = undef; # replace NULL with a proper value
    my $scope = undef; # replace NULL with a proper value
    my $result = $api->settingget(keys => $keys, token => $token, domain => $domain, scope => $scope);
}

#
# settingsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->settingsave(unknown_base_type => $unknown_base_type);
}

#
# settingviewgeneral test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->settingviewgeneral(token => $token);
}

#
# socialcontacts test
#
{
    my $token = undef; # replace NULL with a proper value
    my $filter = undef; # replace NULL with a proper value
    my $showdefaultphoto = undef; # replace NULL with a proper value
    my $result = $api->socialcontacts(token => $token, filter => $filter, showdefaultphoto => $showdefaultphoto);
}

#
# socialgroupaddmembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $userids = undef; # replace NULL with a proper value
    my $result = $api->socialgroupaddmembers(token => $token, id => $id, userids => $userids);
}

#
# socialgroupdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->socialgroupdelete(token => $token, id => $id);
}

#
# socialgrouplist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->socialgrouplist(token => $token);
}

#
# socialgrouplistmembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->socialgrouplistmembers(token => $token, id => $id);
}

#
# socialgroupremovemembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $userids = undef; # replace NULL with a proper value
    my $result = $api->socialgroupremovemembers(token => $token, id => $id, userids => $userids);
}

#
# socialgroupremovemyself test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->socialgroupremovemyself(token => $token, id => $id);
}

#
# socialgroupsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->socialgroupsave(unknown_base_type => $unknown_base_type);
}

#
# ssogeneratekey test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->ssogeneratekey(token => $token);
}

#
# ssogetsettings test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->ssogetsettings(token => $token);
}

#
# ssoissuetoken test
#
{
    my $key = undef; # replace NULL with a proper value
    my $username = undef; # replace NULL with a proper value
    my $expires = undef; # replace NULL with a proper value
    my $result = $api->ssoissuetoken(key => $key, username => $username, expires => $expires);
}

#
# ssosavesettings test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->ssosavesettings(unknown_base_type => $unknown_base_type);
}

#
# staffavailaddmetoallservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->staffavailaddmetoallservices(token => $token);
}

#
# staffavailaddmetoservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->staffavailaddmetoservice(token => $token, serviceid => $serviceid);
}

#
# staffavailaddusertoallservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->staffavailaddusertoallservices(token => $token, userid => $userid);
}

#
# staffavailaddusertoservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->staffavailaddusertoservice(token => $token, userid => $userid, serviceid => $serviceid);
}

#
# staffavailgetmyservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->staffavailgetmyservices(token => $token);
}

#
# staffavailgetservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->staffavailgetservices(token => $token, userid => $userid);
}

#
# staffavailgetusersforservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->staffavailgetusersforservice(token => $token, serviceid => $serviceid);
}

#
# staffavaillisttypes test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->staffavaillisttypes(token => $token);
}

#
# staffavailremovemefromallservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->staffavailremovemefromallservices(token => $token);
}

#
# staffavailremovemefromservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->staffavailremovemefromservice(token => $token, serviceid => $serviceid);
}

#
# staffavailremoveuserfromallservices test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->staffavailremoveuserfromallservices(token => $token, userid => $userid);
}

#
# staffavailremoveuserfromservice test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $serviceid = undef; # replace NULL with a proper value
    my $result = $api->staffavailremoveuserfromservice(token => $token, userid => $userid, serviceid => $serviceid);
}

#
# staffavailsetavailability test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $availablefor = undef; # replace NULL with a proper value
    my $result = $api->staffavailsetavailability(token => $token, userid => $userid, availablefor => $availablefor);
}

#
# staffavailsetmyavailability test
#
{
    my $token = undef; # replace NULL with a proper value
    my $availablefor = undef; # replace NULL with a proper value
    my $result = $api->staffavailsetmyavailability(token => $token, availablefor => $availablefor);
}

#
# stationdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->stationdelete(token => $token, id => $id);
}

#
# stationget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->stationget(token => $token, id => $id);
}

#
# stationgetcurrentterms test
#
{
    my $station = undef; # replace NULL with a proper value
    my $result = $api->stationgetcurrentterms(station => $station);
}

#
# stationgetinfo test
#
{
    my $id = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $result = $api->stationgetinfo(id => $id, event => $event);
}

#
# stationgetlicense test
#
{
    my $station = undef; # replace NULL with a proper value
    my $result = $api->stationgetlicense(station => $station);
}

#
# stationgetlocationsettings test
#
{
    my $location = undef; # replace NULL with a proper value
    my $result = $api->stationgetlocationsettings(location => $location);
}

#
# stationlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->stationlist(token => $token, from => $from, count => $count);
}

#
# stationsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->stationsave(unknown_base_type => $unknown_base_type);
}

#
# stationsavemine test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->stationsavemine(unknown_base_type => $unknown_base_type);
}

#
# stationunlock test
#
{
    my $id = undef; # replace NULL with a proper value
    my $passcode = undef; # replace NULL with a proper value
    my $method = undef; # replace NULL with a proper value
    my $result = $api->stationunlock(id => $id, passcode => $passcode, method => $method);
}

#
# swipedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->swipedelete(token => $token, id => $id);
}

#
# swipeget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->swipeget(token => $token, id => $id);
}

#
# swipelist test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $token = undef; # replace NULL with a proper value
    my $result = $api->swipelist(from => $from, count => $count, token => $token);
}

#
# swipesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->swipesave(unknown_base_type => $unknown_base_type);
}

#
# swipesaveanonym test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->swipesaveanonym(unknown_base_type => $unknown_base_type);
}

#
# tagdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->tagdelete(token => $token, id => $id);
}

#
# tagget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->tagget(token => $token, id => $id);
}

#
# taglist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->taglist(token => $token, group => $group, from => $from, count => $count);
}

#
# taglistgroups test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->taglistgroups(token => $token);
}

#
# tagsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->tagsave(unknown_base_type => $unknown_base_type);
}

#
# tagsearch test
#
{
    my $token = undef; # replace NULL with a proper value
    my $query = undef; # replace NULL with a proper value
    my $allowcreatingnew = undef; # replace NULL with a proper value
    my $result = $api->tagsearch(token => $token, query => $query, allowcreatingnew => $allowcreatingnew);
}

#
# templateaddimage test
#
{
    my $token = undef; # replace NULL with a proper value
    my $template = undef; # replace NULL with a proper value
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $result = $api->templateaddimage(token => $token, template => $template, upload => $upload, filename => $filename);
}

#
# templatedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->templatedelete(token => $token, id => $id);
}

#
# templateemail test
#
{
    my $token = undef; # replace NULL with a proper value
    my $jobid = undef; # replace NULL with a proper value
    my $emailsubject = undef; # replace NULL with a proper value
    my $emailbody = undef; # replace NULL with a proper value
    my $templatekind = undef; # replace NULL with a proper value
    my $emailfrom = undef; # replace NULL with a proper value
    my $emailreplyto = undef; # replace NULL with a proper value
    my $result = $api->templateemail(token => $token, jobid => $jobid, emailsubject => $emailsubject, emailbody => $emailbody, templatekind => $templatekind, emailfrom => $emailfrom, emailreplyto => $emailreplyto);
}

#
# templategenerate test
#
{
    my $token = undef; # replace NULL with a proper value
    my $template = undef; # replace NULL with a proper value
    my $source = undef; # replace NULL with a proper value
    my $singlefile = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $forsending = undef; # replace NULL with a proper value
    my $role = undef; # replace NULL with a proper value
    my $filters = undef; # replace NULL with a proper value
    my $result = $api->templategenerate(token => $token, template => $template, source => $source, singlefile => $singlefile, userid => $userid, forsending => $forsending, role => $role, filters => $filters);
}

#
# templateget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->templateget(token => $token, id => $id);
}

#
# templategetgenerated test
#
{
    my $token = undef; # replace NULL with a proper value
    my $jobid = undef; # replace NULL with a proper value
    my $result = $api->templategetgenerated(token => $token, jobid => $jobid);
}

#
# templatelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $kind = undef; # replace NULL with a proper value
    my $designedonly = undef; # replace NULL with a proper value
    my $result = $api->templatelist(token => $token, from => $from, count => $count, kind => $kind, designedonly => $designedonly);
}

#
# templatelistsources test
#
{
    my $token = undef; # replace NULL with a proper value
    my $kind = undef; # replace NULL with a proper value
    my $result = $api->templatelistsources(token => $token, kind => $kind);
}

#
# templatesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->templatesave(unknown_base_type => $unknown_base_type);
}

#
# templatesavelayout test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->templatesavelayout(unknown_base_type => $unknown_base_type);
}

#
# termdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->termdelete(token => $token, id => $id);
}

#
# termget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->termget(token => $token, id => $id);
}

#
# termlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $notpast = undef; # replace NULL with a proper value
    my $result = $api->termlist(token => $token, from => $from, count => $count, notpast => $notpast);
}

#
# termsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->termsave(unknown_base_type => $unknown_base_type);
}

#
# textcreditremaining test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->textcreditremaining(token => $token);
}

#
# texttoimage test
#
{
    my $token = undef; # replace NULL with a proper value
    my $text = undef; # replace NULL with a proper value
    my $fontcolor = undef; # replace NULL with a proper value
    my $fontsize = undef; # replace NULL with a proper value
    my $direction = undef; # replace NULL with a proper value
    my $width = undef; # replace NULL with a proper value
    my $result = $api->texttoimage(token => $token, text => $text, fontcolor => $fontcolor, fontsize => $fontsize, direction => $direction, width => $width);
}

#
# translationget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $universal = undef; # replace NULL with a proper value
    my $result = $api->translationget(token => $token, universal => $universal);
}

#
# translationgetcachefile test
#
{
    my $token = undef; # replace NULL with a proper value
    my $account = undef; # replace NULL with a proper value
    my $result = $api->translationgetcachefile(token => $token, account => $account);
}

#
# translationlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $filter = undef; # replace NULL with a proper value
    my $nondefaultonly = undef; # replace NULL with a proper value
    my $appdefaultasuniversal = undef; # replace NULL with a proper value
    my $result = $api->translationlist(token => $token, filter => $filter, nondefaultonly => $nondefaultonly, appdefaultasuniversal => $appdefaultasuniversal);
}

#
# translationsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->translationsave(unknown_base_type => $unknown_base_type);
}

#
# userchangepwd test
#
{
    my $token = undef; # replace NULL with a proper value
    my $oldpass = undef; # replace NULL with a proper value
    my $newpass = undef; # replace NULL with a proper value
    my $result = $api->userchangepwd(token => $token, oldpass => $oldpass, newpass => $newpass);
}

#
# userchangepwdbyreq test
#
{
    my $changereq = undef; # replace NULL with a proper value
    my $newpass = undef; # replace NULL with a proper value
    my $result = $api->userchangepwdbyreq(changereq => $changereq, newpass => $newpass);
}

#
# userdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->userdelete(token => $token, id => $id);
}

#
# userfindsimilar test
#
{
    my $token = undef; # replace NULL with a proper value
    my $currentid = undef; # replace NULL with a proper value
    my $phonenumber = undef; # replace NULL with a proper value
    my $cardnumber = undef; # replace NULL with a proper value
    my $result = $api->userfindsimilar(token => $token, currentid => $currentid, phonenumber => $phonenumber, cardnumber => $cardnumber);
}

#
# userget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->userget(token => $token, id => $id, photosize => $photosize);
}

#
# usergetbycard test
#
{
    my $token = undef; # replace NULL with a proper value
    my $card = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->usergetbycard(token => $token, card => $card, photosize => $photosize);
}

#
# usergroupaddmember test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $groupid = undef; # replace NULL with a proper value
    my $result = $api->usergroupaddmember(token => $token, userid => $userid, groupid => $groupid);
}

#
# usergroupdelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->usergroupdelete(token => $token, id => $id);
}

#
# usergroupget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->usergroupget(token => $token, id => $id);
}

#
# usergroupgetmembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $groupid = undef; # replace NULL with a proper value
    my $result = $api->usergroupgetmembers(token => $token, groupid => $groupid);
}

#
# usergroupgetuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->usergroupgetuser(token => $token, userid => $userid);
}

#
# usergrouplist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $type = undef; # replace NULL with a proper value
    my $result = $api->usergrouplist(token => $token, from => $from, count => $count, type => $type);
}

#
# usergrouprefresh test
#
{
    my $token = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $result = $api->usergrouprefresh(token => $token, group => $group);
}

#
# usergroupremovemember test
#
{
    my $token = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $groupid = undef; # replace NULL with a proper value
    my $result = $api->usergroupremovemember(token => $token, userid => $userid, groupid => $groupid);
}

#
# usergroupsave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->usergroupsave(unknown_base_type => $unknown_base_type);
}

#
# usergrouptagmembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $tags = undef; # replace NULL with a proper value
    my $result = $api->usergrouptagmembers(token => $token, group => $group, tags => $tags);
}

#
# usergroupuntagmembers test
#
{
    my $token = undef; # replace NULL with a proper value
    my $group = undef; # replace NULL with a proper value
    my $tags = undef; # replace NULL with a proper value
    my $result = $api->usergroupuntagmembers(token => $token, group => $group, tags => $tags);
}

#
# userlist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $onlywithoutcard = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->userlist(token => $token, from => $from, count => $count, roleid => $roleid, onlywithoutcard => $onlywithoutcard, photosize => $photosize);
}

#
# userloadphoto test
#
{
    my $token = undef; # replace NULL with a proper value
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $automatch = undef; # replace NULL with a proper value
    my $result = $api->userloadphoto(token => $token, upload => $upload, filename => $filename, userid => $userid, automatch => $automatch);
}

#
# usermovedata test
#
{
    my $token = undef; # replace NULL with a proper value
    my $source = undef; # replace NULL with a proper value
    my $destination = undef; # replace NULL with a proper value
    my $result = $api->usermovedata(token => $token, source => $source, destination => $destination);
}

#
# userprofiledelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->userprofiledelete(token => $token, id => $id);
}

#
# userprofileget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->userprofileget(token => $token, id => $id);
}

#
# userprofilegetallview test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->userprofilegetallview(token => $token, id => $id);
}

#
# userprofilelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->userprofilelist(token => $token, from => $from, count => $count);
}

#
# userprofilelistquestions test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->userprofilelistquestions(token => $token);
}

#
# userprofilepreparestats test
#
{
    my $token = undef; # replace NULL with a proper value
    my $params = undef; # replace NULL with a proper value
    my $result = $api->userprofilepreparestats(token => $token, params => $params);
}

#
# userprofilesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->userprofilesave(unknown_base_type => $unknown_base_type);
}

#
# userprofilesaveanswers test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->userprofilesaveanswers(unknown_base_type => $unknown_base_type);
}

#
# userrequestpwdchange test
#
{
    my $domain = undef; # replace NULL with a proper value
    my $email = undef; # replace NULL with a proper value
    my $result = $api->userrequestpwdchange(domain => $domain, email => $email);
}

#
# usersave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->usersave(unknown_base_type => $unknown_base_type);
}

#
# usersavepwdchange test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->usersavepwdchange(unknown_base_type => $unknown_base_type);
}

#
# usersettingsget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $keys = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->usersettingsget(token => $token, keys => $keys, user => $user);
}

#
# usersettingsgetmultiple test
#
{
    my $token = undef; # replace NULL with a proper value
    my $keys = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $result = $api->usersettingsgetmultiple(token => $token, keys => $keys, user => $user);
}

#
# usersettingssave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->usersettingssave(unknown_base_type => $unknown_base_type);
}

#
# usersettingssavemultiple test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->usersettingssavemultiple(unknown_base_type => $unknown_base_type);
}

#
# version test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->version(token => $token);
}

#
# virtuallineaddmyself test
#
{
    my $token = undef; # replace NULL with a proper value
    my $waitinglineid = undef; # replace NULL with a proper value
    my $result = $api->virtuallineaddmyself(token => $token, waitinglineid => $waitinglineid);
}

#
# virtuallinelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->virtuallinelist(token => $token);
}

#
# virtuallineremovemyself test
#
{
    my $token = undef; # replace NULL with a proper value
    my $result = $api->virtuallineremovemyself(token => $token);
}

#
# waitinglineadduser test
#
{
    my $station = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $locationid = undef; # replace NULL with a proper value
    my $time = undef; # replace NULL with a proper value
    my $signinrole = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $services = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $staff = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->waitinglineadduser(station => $station, user => $user, locationid => $locationid, time => $time, signinrole => $signinrole, roleid => $roleid, services => $services, eventid => $eventid, staff => $staff, photosize => $photosize);
}

#
# waitinglinedelete test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->waitinglinedelete(token => $token, id => $id);
}

#
# waitinglineget test
#
{
    my $token = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->waitinglineget(token => $token, id => $id, photosize => $photosize);
}

#
# waitinglineisuserin test
#
{
    my $station = undef; # replace NULL with a proper value
    my $time = undef; # replace NULL with a proper value
    my $user = undef; # replace NULL with a proper value
    my $location = undef; # replace NULL with a proper value
    my $result = $api->waitinglineisuserin(station => $station, time => $time, user => $user, location => $location);
}

#
# waitinglinelist test
#
{
    my $token = undef; # replace NULL with a proper value
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $result = $api->waitinglinelist(token => $token, from => $from, count => $count);
}

#
# waitinglineremoveuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $waitingline = undef; # replace NULL with a proper value
    my $itemid = undef; # replace NULL with a proper value
    my $result = $api->waitinglineremoveuser(token => $token, waitingline => $waitingline, itemid => $itemid);
}

#
# waitinglinesave test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->waitinglinesave(unknown_base_type => $unknown_base_type);
}

#
# waitinglinesigninuser test
#
{
    my $token = undef; # replace NULL with a proper value
    my $waitingline = undef; # replace NULL with a proper value
    my $itemid = undef; # replace NULL with a proper value
    my $staff = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->waitinglinesigninuser(token => $token, waitingline => $waitingline, itemid => $itemid, staff => $staff, photosize => $photosize);
}


1;
