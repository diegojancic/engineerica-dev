openapi: 3.0.1
info:
  title: AccuCampus OpenAPI 3 Documentation
  version: 1.0.0
servers:
- url: https://accucampus.net/api/v1
paths:
  /doc:
    get:
      description: Retrieves the list of actions available in the system.
      operationId: doc
      parameters:
      - description: If true it excludes the anonymous actions from the returned list.
        explode: true
        in: query
        name: excludeanonymous
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the documentation
      x-accepts: application/json
  /featurelist:
    get:
      operationId: featurelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the available features.
      x-accepts: application/json
  /login:
    get:
      operationId: login
      parameters:
      - description: The account domain to login.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          type: string
        style: form
      - description: The username (email) of the user to login as.
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: The password of the user to login as.
        explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      - description: The authentication method. Valid values are 'token' and 'cookie'.
        explode: true
        in: query
        name: method
        required: true
        schema:
          type: string
        style: form
      - description: If true then the session will not expire.
        explode: true
        in: query
        name: rememberme
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Login
      x-accepts: application/json
  /logout:
    get:
      operationId: logout
      parameters:
      - description: The authentication token used to login.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Logout
      x-accepts: application/json
  /search:
    get:
      operationId: search
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The query to search for.
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Current page to show, zero-based.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search
      x-accepts: application/json
  /searchgetentities:
    get:
      operationId: searchgetentities
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the information of the entities that can be searched
      x-accepts: application/json
  /listtimezones:
    get:
      operationId: listtimezones
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the available timezones
      x-accepts: application/json
  /myianatimezone:
    get:
      operationId: myianatimezone
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the current time zone's iana name
      x-accepts: application/json
  /captchagetimage:
    get:
      operationId: captchagetimage
      parameters:
      - description: The captcha token or ID returned by the captcha.getchallenge
          action
        explode: true
        in: query
        name: captchatoken
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets a captcha image that the user must complete to do certain requests.
      x-accepts: application/json
  /captchagetchallenge:
    get:
      operationId: captchagetchallenge
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets a captcha challenge that the user must complete to do certain
        requests.
      x-accepts: application/json
  /menugetitems:
    get:
      operationId: menugetitems
      parameters:
      - description: The Id of the menu to get.
        explode: true
        in: query
        name: menuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the items on the menu
      x-accepts: application/json
  /texttoimage:
    get:
      operationId: texttoimage
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The text to convert to an image, use double pipes (||) as a new
          line.
        explode: true
        in: query
        name: text
        required: true
        schema:
          type: string
        style: form
      - description: 'The color of the text, in hex format, without the #.'
        explode: true
        in: query
        name: fontcolor
        required: false
        schema:
          type: string
        style: form
      - description: The size of the text, in points.
        explode: true
        in: query
        name: fontsize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Either vertical or horizontal, default horizontal.
        explode: true
        in: query
        name: direction
        required: false
        schema:
          type: string
        style: form
      - description: The image width in pixels (or height if the direction is vertical).
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Generates a dynamic image from text
      x-accepts: application/json
  /qrloginget:
    get:
      operationId: qrloginget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets an image of a QR token
      x-accepts: application/json
  /qrloginlogin:
    get:
      operationId: qrloginlogin
      parameters:
      - description: The token read from the QR code.
        explode: true
        in: query
        name: onetimetoken
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Login
      x-accepts: application/json
  /appsharegetphone:
    get:
      operationId: appsharegetphone
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the phone number of the current user
      x-accepts: application/json
  /appsharesendtext:
    get:
      operationId: appsharesendtext
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Phone number to where to send the link. Leave empty to the number
          on file.
        explode: true
        in: query
        name: phonenumber
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sends an SMS with the link to the app
      x-accepts: application/json
  /ssogeneratekey:
    get:
      description: Allows the user to generate or reset the access key for single
        sign-on.
      operationId: ssogeneratekey
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Generate/reset single sign on access key.
      x-accepts: application/json
  /ssosavesettings:
    post:
      description: Allows the user to edit settings for single sign-on.
      operationId: ssosavesettings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                enabled:
                  description: Specifies whether the single sign on is enabled or
                    not.
                  type: boolean
                expireswheninactive:
                  description: Specifies whether the sessions should expire when inactive.
                  type: boolean
                redirecturl:
                  description: The url the user gets redirected when the session is
                    closed or expires.
                  type: string
              required:
              - enabled
              - expireswheninactive
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Edit single sign-on settings.
      x-contentType: application/json
      x-accepts: application/json
  /ssogetsettings:
    get:
      description: Allows the user to view settings for single sign-on.
      operationId: ssogetsettings
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View single sign on settings.
      x-accepts: application/json
  /ssoissuetoken:
    get:
      operationId: ssoissuetoken
      parameters:
      - description: The single sign-on key of the account.
        explode: true
        in: query
        name: key
        required: true
        schema:
          type: string
        style: form
      - description: The email of the user to sign-on.
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: Specifies whether the session should expire when inactive.
        explode: true
        in: query
        name: expires
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Issue single sign-on token
      x-accepts: application/json
  /licensegetcurrent:
    get:
      operationId: licensegetcurrent
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the current license information
      x-accepts: application/json
  /licenserenew:
    get:
      description: Allows the user to select the option to contact Engineerica when
        the AccuCampus account is nearing its renewal date.
      operationId: licenserenew
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The e-mail of the user sending the request.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      - description: The phone number of the user sending the request.
        explode: true
        in: query
        name: phonenumber
        required: true
        schema:
          type: string
        style: form
      - description: The job title of the user sending the request.
        explode: true
        in: query
        name: jobtitle
        required: false
        schema:
          type: string
        style: form
      - description: The institution of the user sending the request.
        explode: true
        in: query
        name: institution
        required: false
        schema:
          type: string
        style: form
      - description: Comments entered by the user sending the request.
        explode: true
        in: query
        name: comments
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Contact Engineerica in order to renew the AccuCampus subscription
      x-accepts: application/json
  /licenseacceptagreement:
    get:
      operationId: licenseacceptagreement
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Accept the license agreement
      x-accepts: application/json
  /licensegetagreementstatus:
    get:
      operationId: licensegetagreementstatus
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check if license agreement has been accepted
      x-accepts: application/json
  /myrights:
    get:
      operationId: myrights
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the list of actions the user can execute.
      x-accepts: application/json
  /myprofile:
    get:
      operationId: myprofile
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the logged in user information.
      x-accepts: application/json
  /mysaveprofile:
    post:
      operationId: mysaveprofile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                firstname:
                  description: The first name of the user.
                  type: string
                middlename:
                  description: The middle name of the user.
                  type: string
                lastname:
                  description: The last name of the user.
                  type: string
                email:
                  description: The email of the user.
                  type: string
                mobilephonenumber:
                  description: The mobile phone number of the user.
                  type: string
                homephonenumber:
                  description: The home phone number of the user.
                  type: string
                workphonenumber:
                  description: The work phone number of the user.
                  type: string
                streetaddress:
                  description: The street address of the user.
                  type: string
                city:
                  description: The city of the user.
                  type: string
                state:
                  description: The state of the user.
                  type: string
                zipcode:
                  description: The zip code of the user.
                  type: string
                title:
                  description: The title of the user.
                  type: string
                company:
                  description: The company of the user.
                  type: string
                photoid:
                  description: The ID of a photo uploaded using user.loadphoto.
                  format: uuid
                  type: string
              required:
              - email
              - firstname
              - lastname
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Updates logged user's profile information
      x-contentType: application/json
      x-accepts: application/json
  /myaccount:
    get:
      operationId: myaccount
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the logged in user account.
      x-accepts: application/json
  /userlist:
    get:
      description: Allows the user to view the full list of users and is based on
        role permissions.
      operationId: userlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The id of the role to filter users by, or empty to return all
          users.
        explode: true
        in: query
        name: roleid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: If is 1 then only the users without a card are returned, otherwise
          all users are returned.
        explode: true
        in: query
        name: onlywithoutcard
        required: false
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of users
      x-accepts: application/json
  /userget:
    get:
      description: Allows the user to search and view a user and their details.
      operationId: userget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a user
      x-accepts: application/json
  /usergetbycard:
    get:
      description: Allows the user to search for a user by their card number.
      operationId: usergetbycard
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The card number of the user to get.
        explode: true
        in: query
        name: card
        required: true
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search user by card number
      x-accepts: application/json
  /usersave:
    post:
      description: Allows the user to create or edit a user.
      operationId: usersave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the user to save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                firstname:
                  description: The first name of the user.
                  type: string
                middlename:
                  description: The middle name of the user.
                  type: string
                lastname:
                  description: The last name of the user.
                  type: string
                email:
                  description: The email of the user.
                  type: string
                mobilephonenumber:
                  description: The mobile phone number of the user.
                  type: string
                homephonenumber:
                  description: The home phone number of the user.
                  type: string
                workphonenumber:
                  description: The work phone number of the user.
                  type: string
                streetaddress:
                  description: The street address of the user.
                  type: string
                city:
                  description: The city of the user.
                  type: string
                state:
                  description: The state of the user.
                  type: string
                zipcode:
                  description: The zip code of the user.
                  type: string
                title:
                  description: The title of the user.
                  type: string
                company:
                  description: The company of the user.
                  type: string
                password:
                  description: The new password of the user.
                  type: string
                roles:
                  description: Comma separated list of roles of the user.
                  type: string
                assigncard:
                  description: True if a new card has to be assigned to the user,
                    otherwise false.
                  type: string
                cardnumber:
                  description: The card number that has to be assigned to the user.
                  type: string
                more:
                  description: Custom data of the user
                  type: string
                photoid:
                  description: The ID of a photo uploaded using user.loadphoto.
                  format: uuid
                  type: string
                active:
                  description: The status of the user.
                  type: boolean
              required:
              - email
              - firstname
              - lastname
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a user
      x-contentType: application/json
      x-accepts: application/json
  /userdelete:
    get:
      description: Allows the user to delete a user.
      operationId: userdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a user
      x-accepts: application/json
  /userchangepwd:
    get:
      description: Allows the user to change their own password.
      operationId: userchangepwd
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The old password of the authenticated user.
        explode: true
        in: query
        name: oldpass
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The new password of the authenticated user.
        explode: true
        in: query
        name: newpass
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Change user's own password
      x-accepts: application/json
  /userchangepwdbyreq:
    get:
      operationId: userchangepwdbyreq
      parameters:
      - description: The change password request ID sent by email to the user.
        explode: true
        in: query
        name: changereq
        required: true
        schema:
          type: string
        style: form
      - description: The new password of the user.
        explode: true
        in: query
        name: newpass
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Changes the user password using a change password request id
      x-accepts: application/json
  /userrequestpwdchange:
    get:
      operationId: userrequestpwdchange
      parameters:
      - description: The domain of the account where the user exists.
        explode: true
        in: query
        name: domain
        required: true
        schema:
          type: string
        style: form
      - description: The email of the user.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Requests a password change
      x-accepts: application/json
  /usersavepwdchange:
    post:
      description: Allows the user to trigger an email to another user asking them
        to set or change their password.
      operationId: usersavepwdchange
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                users:
                  description: A JSON array containing the ids of the users whose
                    passwords have to be set.
                  type: string
                role:
                  description: A specific role whose users passwords have to be set.
                  format: uuid
                  type: string
              required:
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Send email to the specified user(s) to set/change their passwords
      x-contentType: application/json
      x-accepts: application/json
  /userloadphoto:
    get:
      description: Allows the user to upload a photo for a user.
      operationId: userloadphoto
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Set 'file' as value to indicate that a file is being submitted
          in the body (instead of a JSON object).
        explode: true
        in: query
        name: upload
        required: true
        schema:
          type: string
        style: form
      - description: The local name of the uploaded file. For later reference.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: The user ID to directly associate the upload photo. If not specified,
          a temp ID is returned that can be later specified in 'user.save'.
        explode: true
        in: query
        name: userid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: 'Set this to true to find the specific user based on the file
          name. '
        explode: true
        in: query
        name: automatch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Upload a photo for a specific user
      x-accepts: application/json
  /userfindsimilar:
    get:
      description: Allows the user to be warned if a user they are creating has the
        same card number as another user.
      operationId: userfindsimilar
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the current user.
        explode: true
        in: query
        name: currentid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A phone number to search for similar users.
        explode: true
        in: query
        name: phonenumber
        required: false
        schema:
          type: string
        style: form
      - description: A card number to search for similar users.
        explode: true
        in: query
        name: cardnumber
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Finds similar users to prevent duplicates
      x-accepts: application/json
  /usermovedata:
    get:
      description: Allows administrators to move data between users.
      operationId: usermovedata
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user that is the source of the data.
        explode: true
        in: query
        name: source
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the user that is the destination of the data.
        explode: true
        in: query
        name: destination
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Move data between users
      x-accepts: application/json
  /rolelist:
    get:
      operationId: rolelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Filter by name of the role.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Show a list of roles
      x-accepts: application/json
  /clientget:
    get:
      operationId: clientget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique id of the client.
        explode: true
        in: query
        name: client
        required: true
        schema:
          type: string
        style: form
      - description: The custom name of the client.
        explode: true
        in: query
        name: clientname
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get client
      x-accepts: application/json
  /clientsave:
    post:
      operationId: clientsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                client:
                  description: The id of the client to save.
                  format: uuid
                  type: string
                clientname:
                  description: The name of the client.
                  type: string
                pushtoken:
                  description: The push token of the client.
                  type: string
              required:
              - client
              - clientname
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a client
      x-contentType: application/json
      x-accepts: application/json
  /clientlist:
    get:
      operationId: clientlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the clients of the specified conference
      x-accepts: application/json
  /clientsendmessage:
    get:
      operationId: clientsendmessage
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique id of the client.
        explode: true
        in: query
        name: uniqueclientid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The body of the message to send.
        explode: true
        in: query
        name: message
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Send a message to a client
      x-accepts: application/json
  /bgjobgetstatus:
    get:
      operationId: bgjobgetstatus
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the job to get the status. 10 most recent will be returned
          if not specified.
        explode: true
        in: query
        name: jobid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The job type to filter by.
        explode: true
        in: query
        name: jobtype
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get background job status
      x-accepts: application/json
  /settingget:
    get:
      operationId: settingget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The account domain, in case of reading settings annonymously.
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: The option keys to get values for. Enter multiple separated by
          comma.
        explode: true
        in: query
        name: keys
        required: true
        schema:
          type: string
        style: form
      - description: The scope of the settings to get.
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get settings for the account or the specified scope
      x-accepts: application/json
  /settingsave:
    post:
      description: Allows the user to affect settings that are not specified elsewhere
        in permissions. This includes Attendance, Appointments, Compass, Media, and
        Social Activity.
      operationId: settingsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                optionsjson:
                  description: The options to save in the account, in JSON format.
                  type: string
                scope:
                  description: The scope of the settings to save.
                  type: string
              required:
              - optionsjson
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save settings for the account or the specified scope
      x-contentType: application/json
      x-accepts: application/json
  /settingaddlogo:
    get:
      description: Allows the user to add the logo for the account, which appears
        on all pages on the AccuCampus browser version.
      operationId: settingaddlogo
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Set 'file' as value to indicate that a file is being submitted
          in the body (instead of a JSON object).
        explode: true
        in: query
        name: upload
        required: true
        schema:
          type: string
        style: form
      - description: The original filename, needed to process the file.
        explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add a logo to the account
      x-accepts: application/json
  /settingviewgeneral:
    get:
      description: Allows the user to view the settings' general section.
      operationId: settingviewgeneral
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View general settings for the account
      x-accepts: application/json
  /actionloglist:
    get:
      description: Allows the user to view the audit logs for the account.
      operationId: actionloglist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user whose action logs have to be returned.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start date of the period to filter the logs.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the logs.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The resource to filter the action logs.
        explode: true
        in: query
        name: resource
        required: false
        schema:
          type: string
        style: form
      - description: The action to filter the action logs.
        explode: true
        in: query
        name: actionfilter
        required: false
        schema:
          type: string
        style: form
      - description: The id of the entity that was the argument of the executed action.
        explode: true
        in: query
        name: argument
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of users action logs
      x-accepts: application/json
  /version:
    get:
      operationId: version
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get current version information
      x-accepts: application/json
  /changelog:
    get:
      operationId: changelog
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the application change log
      x-accepts: application/json
  /easyloginaddbgimage:
    get:
      description: Allows the user to set the background image that all users will
        see when logging into an AccuCampus account not using SSO.
      operationId: easyloginaddbgimage
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Set 'file' as value to indicate that a file is being submitted
          in the body (instead of a JSON object).
        explode: true
        in: query
        name: upload
        required: true
        schema:
          type: string
        style: form
      - description: The original filename, needed to process the file.
        explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Adds background image for the login
      x-accepts: application/json
  /export:
    get:
      description: Allows the user to export data from AccuCampus into a CSV, HTML,
        or Excel format.
      operationId: export
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: What to export.
        explode: true
        in: query
        name: exporttype
        required: true
        schema:
          type: string
        style: form
      - description: The format of the resulting file. Valid types are CSV, HTML,
          XLS.
        explode: true
        in: query
        name: exportformat
        required: true
        schema:
          type: string
        style: form
      - description: 'Pipe separated filters for the export, eg: aaa=val|bbb=val|...'
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Export AccuCampus data
      x-accepts: application/json
  /exportlisttypes:
    get:
      operationId: exportlisttypes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists available export types
      x-accepts: application/json
  /locationget:
    get:
      description: Allows the user to search and view an individual location and its
        details.
      operationId: locationget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a location
      x-accepts: application/json
  /locationlist:
    get:
      description: Allows the user to view the list of all locations to which they
        are scoped.
      operationId: locationlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The comma-separated list containing the ids of the locations
          to list.
        explode: true
        in: query
        name: locations
        required: false
        schema:
          type: string
        style: form
      - description: True to list locations sorted by the 'Located In' property. Defaults
          to false.
        explode: true
        in: query
        name: sortbygroup
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of locations
      x-accepts: application/json
  /locationdelete:
    get:
      description: Allows the user to delete an existing location.
      operationId: locationdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a location
      x-accepts: application/json
  /locationsave:
    post:
      description: Allows the user to create or edit a location.
      operationId: locationsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the location save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the location.
                  type: string
                categoryid:
                  description: The id of location's LocationCategory.
                  format: uuid
                  type: string
                categoryname:
                  description: The name of the location's LocationCategory.
                  type: string
                streetaddress:
                  description: The street address of the location.
                  type: string
                latitude:
                  description: The latitude of the location.
                  format: double
                  type: number
                longitude:
                  description: The longitude of the location.
                  format: double
                  type: number
                websiteurl:
                  description: The web site url of the location.
                  type: string
                email:
                  description: The e-mail address of the location.
                  type: string
                moreinformation:
                  description: More information relevant to the location.
                  type: string
                isrestricted:
                  description: Whether this location has the access restricted.
                  type: boolean
                accessroles:
                  description: The roles that can view the info associated to this
                    location, in JSON format.
                  type: string
                order:
                  description: The order of the location.
                  format: int32
                  type: integer
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a location
      x-contentType: application/json
      x-accepts: application/json
  /riskmodeldelete:
    get:
      description: Allows the user to delete a previously created risk assessment
        model.
      operationId: riskmodeldelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the risk assessment model to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a risk assessment model
      x-accepts: application/json
  /riskmodelget:
    get:
      description: Allows the user to view an individual risk assessment model and
        its details.
      operationId: riskmodelget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the risk assessment model to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a risk assessment model
      x-accepts: application/json
  /riskmodelsave:
    post:
      description: Allows the user to create or edit a risk assessment model.
      operationId: riskmodelsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the department save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the department.
                  type: string
                excludedfeatures:
                  description: The features to exclude from the model.
                  type: string
                excludedusers:
                  description: The criteria to exclude users from the model.
                  type: string
                newfeatures:
                  description: The new features for this model.
                  type: string
                termprecedences:
                  description: The terms precedences for this model.
                  type: string
              required:
              - name
              - termprecedences
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a risk assessment model
      x-contentType: application/json
      x-accepts: application/json
  /riskmodellist:
    get:
      description: Allows the user to view the full list of risk assessment models.
      operationId: riskmodellist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of risk assessment models
      x-accepts: application/json
  /riskmodelgetscore:
    get:
      description: Allows the user to view the risk score of another user.
      operationId: riskmodelgetscore
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to get the risk score.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the risk score for a specific user
      x-accepts: application/json
  /riskmodelrefresh:
    get:
      description: Allows the user to refresh a risk assessment model.
      operationId: riskmodelrefresh
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the risk assessment model whose information has to
          be refreshed.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Refresh the information used in a risk assessment model
      x-accepts: application/json
  /riskmodelprocess:
    get:
      description: Allows the user to process a risk assessment model once it has
        been created.
      operationId: riskmodelprocess
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the risk assessment model to process.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Process a risk assessment model
      x-accepts: application/json
  /riskmodelpredict:
    get:
      description: Allows a user to process a risk prediction from a risk assessment
        model that has processed.
      operationId: riskmodelpredict
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the assessment model to use in order to predict risk.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Predict risk based on an assessment model
      x-accepts: application/json
  /riskmodelcheckanalysis:
    get:
      description: Allows the user to check the status of a risk assessment model
        as it is being processed.
      operationId: riskmodelcheckanalysis
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the risk assessment model whose analysis status has
          to be returned.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check the status of the analysis of a specified risk assessment model
      x-accepts: application/json
  /riskmodeltermprecedences:
    get:
      description: Allows the user to view the default term precedences used in a
        model.
      operationId: riskmodeltermprecedences
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all default term precedences
      x-accepts: application/json
  /adhocquerydelete:
    get:
      description: Allows the user to delete a previously created ad hoc query.
      operationId: adhocquerydelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the ad hoc query to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an ad hoc query
      x-accepts: application/json
  /adhocqueryget:
    get:
      description: Allows the user to view an individual ad hoc query with its settings.
      operationId: adhocqueryget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the query to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of an ad hoc query
      x-accepts: application/json
  /adhocquerysave:
    post:
      description: Allows the user to edit an ad hoc query.
      operationId: adhocquerysave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the query to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the query.
                  type: string
                text:
                  description: The text of the query (the query itself).
                  type: string
              required:
              - name
              - text
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an ad hoc query
      x-contentType: application/json
      x-accepts: application/json
  /adhocquerylist:
    get:
      description: Allows the user to view the full list of saved queries.
      operationId: adhocquerylist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of saved ad hoc queries
      x-accepts: application/json
  /adhocquerygetschema:
    get:
      description: Allows the user to view the list of schema for ad hoc queries.
      operationId: adhocquerygetschema
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the database schema for making ad hoc queries
      x-accepts: application/json
  /adhocqueryexecute:
    get:
      description: Allows the user to execute an ad hoc query.
      operationId: adhocqueryexecute
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the query to execute.
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The query to execute.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Execute an ad hoc query
      x-accepts: application/json
  /adhocquerycheckexecution:
    get:
      description: Allows the user to check whether a query has executed, viewable
        on the query's execution page.
      operationId: adhocquerycheckexecution
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the ad hoc query execution to be checked.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check the status of an ad hoc query execution
      x-accepts: application/json
  /adhocquerystopexecution:
    get:
      description: Allows the user to halt the execution of a query that is currently
        being executed.
      operationId: adhocquerystopexecution
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the ad hoc query execution to be stopped.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Stops the execution of an ad hoc query
      x-accepts: application/json
  /adhocquerylistexecutions:
    get:
      description: Allows the user to view the full list of past query executions.
      operationId: adhocquerylistexecutions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: query
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of ad hoc queries executions
      x-accepts: application/json
  /adhocreportsreqaccess:
    get:
      description: Allows the user to request access to the ad-hoc reports by clicking,
        'Request Access' under Institutional Research -> Ad-hoc Reports
      operationId: adhocreportsreqaccess
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Request access to the ad-hoc reports
      x-accepts: application/json
  /communityinvite:
    get:
      description: Allows the user to invite all other users to the AccuCampus Communities.
      operationId: communityinvite
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sends an invitation to everyone to AccuCampus Communities
      x-accepts: application/json
  /communityjoin:
    get:
      description: Allows the user to access the AccuCampus Communities.
      operationId: communityjoin
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sends an invitation for myself to AccuCampus Communities
      x-accepts: application/json
  /templatelist:
    get:
      description: Allows the user to view the full list of created templates.
      operationId: templatelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The kind of the templates to return. It must be included in (badge,
          certificate).
        explode: true
        in: query
        name: kind
        required: true
        schema:
          type: string
        style: form
      - description: If true then it only returns the templates that were designed.
          Otherwise, it returns all.
        explode: true
        in: query
        name: designedonly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of defined templates
      x-accepts: application/json
  /templateget:
    get:
      description: Allows the user to view a template and its details.
      operationId: templateget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the template to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a template
      x-accepts: application/json
  /templatesave:
    post:
      description: Allows the user to create or edit a template.
      operationId: templatesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the template to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                kind:
                  description: The kind of the templates to return. It must be included
                    in (badge, certificate).
                  type: string
                name:
                  description: The template's name.
                  type: string
                description:
                  description: The template's description.
                  type: string
              required:
              - kind
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a template
      x-contentType: application/json
      x-accepts: application/json
  /templatesavelayout:
    post:
      description: Allows the user to edit a template's layout.
      operationId: templatesavelayout
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the template whose layout needs to be saved.
                  format: uuid
                  type: string
                layout:
                  description: The template's layout (in JSON).
                  type: string
              required:
              - id
              - layout
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save the layout of a template
      x-contentType: application/json
      x-accepts: application/json
  /templateaddimage:
    get:
      description: Allows the user to add an image to a badge or certificate template.
      operationId: templateaddimage
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the template where the image has to be added
        explode: true
        in: query
        name: template
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Set 'file' as value to indicate that a file is being submitted
          in the body (instead of a JSON object).
        explode: true
        in: query
        name: upload
        required: true
        schema:
          type: string
        style: form
      - description: The local name of the uploaded file. For later reference.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add an image to a template
      x-accepts: application/json
  /templatedelete:
    get:
      description: Allows the user to delete an existing template.
      operationId: templatedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the template to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a template
      x-accepts: application/json
  /templategenerate:
    get:
      description: Allows the user to generate an existing template as badges or certificates.
      operationId: templategenerate
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the template to generate.
        explode: true
        in: query
        name: template
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The source key of the selected template data source.
        explode: true
        in: query
        name: source
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: True if all the templates should be placed in the same file,
          false if each one shoud be in its own file.
        explode: true
        in: query
        name: singlefile
        required: true
        schema:
          type: boolean
        style: form
      - description: Only the template for these users is created (and emailed if
          'email' is true), enter multiple separated by commas.
        explode: true
        in: query
        name: userid
        required: false
        schema:
          type: string
        style: form
      - description: It specifies the purpose of the creation of the templates. If
          true then is for sending via e-mail, otherwise is just for downloading
        explode: true
        in: query
        name: forsending
        required: false
        schema:
          type: boolean
        style: form
      - description: 'When printing all badges, filter by person type, can be either:
          attendee, presenter or exhibitor'
        explode: true
        in: query
        name: role
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: 'Pipe separated filters for the generation, eg: aaa=val|bbb=val|...'
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Generate specified templates
      x-accepts: application/json
  /templategetgenerated:
    get:
      description: Allows the user to view templates which have been generated as
        badges or certificates.
      operationId: templategetgenerated
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the job that is creating the templates.
        explode: true
        in: query
        name: jobid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View generated templates
      x-accepts: application/json
  /templateemail:
    get:
      description: Allows the user to send generated templates via email through AccuCampus.
      operationId: templateemail
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the job that is creating the templates.
        explode: true
        in: query
        name: jobid
        required: true
        schema:
          type: string
        style: form
      - description: The kind of the template you're sending. It must be included
          in (badge, certificate).
        explode: true
        in: query
        name: templatekind
        required: false
        schema:
          type: string
        style: form
      - description: The name of the sender to be displayed in the receipients inbox
        explode: true
        in: query
        name: emailfrom
        required: false
        schema:
          type: string
        style: form
      - description: The reply-to field for the emails.
        explode: true
        in: query
        name: emailreplyto
        required: false
        schema:
          type: string
        style: form
      - description: Args depending on the send-to flag.
        explode: true
        in: query
        name: emailsubject
        required: true
        schema:
          type: string
        style: form
      - description: Args depending on the send-to flag.
        explode: true
        in: query
        name: emailbody
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Send generated templates by email
      x-accepts: application/json
  /templatelistsources:
    get:
      description: Allows the user to see tokens to be used in the template
      operationId: templatelistsources
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The kind of the templates to return. It must be included in (badge,
          certificate).
        explode: true
        in: query
        name: kind
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of templates' data sources
      x-accepts: application/json
  /textcreditremaining:
    get:
      operationId: textcreditremaining
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the remaining text credits for the account
      x-accepts: application/json
  /translationlist:
    get:
      operationId: translationlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Text to search/filter translations.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: If true then it returns only the terms translated. Otherwise,
          it returns all.
        explode: true
        in: query
        name: nondefaultonly
        required: false
        schema:
          type: boolean
        style: form
      - description: If true then it uses the app default translation as the universal
          term.
        explode: true
        in: query
        name: appdefaultasuniversal
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists all the available translations in the system
      x-accepts: application/json
  /translationsave:
    post:
      description: Allows the user to edit a translation for the entire account.
      operationId: translationsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the translation as returned by translation.list.
                  type: string
                translation:
                  description: The translated text.
                  type: string
              required:
              - id
              - token
              - translation
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Edit a translation
      x-contentType: application/json
      x-accepts: application/json
  /translationget:
    get:
      operationId: translationget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Pipe separated list of universal text to be translated.
        explode: true
        in: query
        name: universal
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the translations of the specified values
      x-accepts: application/json
  /translationgetcachefile:
    get:
      operationId: translationgetcachefile
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the account whose translations file has to be retrieved.
        explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the file containing the translations
      x-accepts: application/json
  /usersettingssave:
    post:
      operationId: usersettingssave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                key:
                  description: Setting key to save.
                  type: string
                value:
                  description: Setting value to save.
                  type: string
                user:
                  description: The user id whose settings have to be saved.
                  format: uuid
                  type: string
              required:
              - key
              - token
              - value
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a user setting
      x-contentType: application/json
      x-accepts: application/json
  /usersettingssavemultiple:
    post:
      operationId: usersettingssavemultiple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                optionsjson:
                  description: The options to save in the account, in JSON format.
                  type: string
                user:
                  description: The user id whose settings have to be saved.
                  format: uuid
                  type: string
              required:
              - optionsjson
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save multiple user settings at once
      x-contentType: application/json
      x-accepts: application/json
  /usersettingsget:
    get:
      operationId: usersettingsget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Setting key to get. Can be multiple separated by commas.
        explode: true
        in: query
        name: keys
        required: true
        schema:
          type: string
        style: form
      - description: The user id whose settings have to be returned.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists available user settings
      x-accepts: application/json
  /usersettingsgetmultiple:
    get:
      operationId: usersettingsgetmultiple
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Setting key to get. Can be multiple separated by commas.
        explode: true
        in: query
        name: keys
        required: true
        schema:
          type: string
        style: form
      - description: The user id whose settings have to be returned.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get multiple user settings
      x-accepts: application/json
  /departmentget:
    get:
      description: Allows the user to view an individual college department and its
        details.
      operationId: departmentget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the department to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a college department
      x-accepts: application/json
  /departmentlist:
    get:
      description: Allows the user to view the full list of college departments.
      operationId: departmentlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of college departments
      x-accepts: application/json
  /departmentdelete:
    get:
      description: Allows the user to delete an existing college department.
      operationId: departmentdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the department to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a college department
      x-accepts: application/json
  /departmentsave:
    post:
      description: Allows the user to create or edit a college department.
      operationId: departmentsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the department save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the department.
                  type: string
                details:
                  description: The details of the department.
                  type: string
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a college department
      x-contentType: application/json
      x-accepts: application/json
  /quickpanelinit:
    get:
      operationId: quickpanelinit
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Returns the initial information required to show the quick panels
      x-accepts: application/json
  /quickpanelfetchwidget:
    get:
      operationId: quickpanelfetchwidget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the data to fetch it's data.
        explode: true
        in: query
        name: widgetid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Fetches the information for a specific widget.
      x-accepts: application/json
  /quickpanellistwidgettypes:
    get:
      operationId: quickpanellistwidgettypes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists all the widget types available in the system
      x-accepts: application/json
  /quickpanelgetwidget:
    get:
      description: Allows the user to view a widget added in as Quick Panel.
      operationId: quickpanelgetwidget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the widget to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a widget included in the Quick Panel
      x-accepts: application/json
  /quickpanellistwidgets:
    get:
      description: Allows the user to view the widgets that have been added to the
        Quick Panel.
      operationId: quickpanellistwidgets
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists all the widgets that are added in the Quick Panel
      x-accepts: application/json
  /quickpanelsavewidget:
    post:
      description: Allows the user to save a widget to the Quick Panel.
      operationId: quickpanelsavewidget
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the widget.
                  format: uuid
                  type: string
                sectionname:
                  description: The section name where to add the widget.
                  type: string
                sortorder:
                  description: The sort order of the widget.
                  format: int32
                  type: integer
                title:
                  description: Title of the widget.
                  type: string
                type:
                  description: Type of the widget.
                  type: string
                data:
                  description: Context data of the widget.
                  type: string
                roleids:
                  description: CSV list of roles that display this widget.
                  type: string
              required:
              - data
              - roleids
              - sectionname
              - sortorder
              - title
              - token
              - type
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a widget for the Quick Panel
      x-contentType: application/json
      x-accepts: application/json
  /quickpaneldeletewidget:
    get:
      description: Allows the user to delete a widget that has been added to the Quick
        Panel.
      operationId: quickpaneldeletewidget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the widget.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Deletes a widget from the Quick Panel
      x-accepts: application/json
  /quickpanelreorderwidgets:
    get:
      operationId: quickpanelreorderwidgets
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The section name where to sort the widgets.
        explode: true
        in: query
        name: sectionname
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the widgets to reorder.
        explode: true
        in: query
        name: orderids
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Reorders the widgets and moves them to a specific column
      x-accepts: application/json
  /termget:
    get:
      description: Allows the user to view a term and its details.
      operationId: termget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the term to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a term
      x-accepts: application/json
  /termlist:
    get:
      description: Allows the user to view the full list of existing term.
      operationId: termlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specifies whether the terms in the past should be returned or
          not.
        explode: true
        in: query
        name: notpast
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of all terms
      x-accepts: application/json
  /termdelete:
    get:
      description: Allows the user to delete a term from the existing list.
      operationId: termdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the term to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a term
      x-accepts: application/json
  /termsave:
    post:
      description: Allows the user to create and edit terms.
      operationId: termsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the term to save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the term.
                  type: string
                start:
                  description: The date when the term starts.
                  format: date-time
                  type: string
                end:
                  description: The date when the term ends.
                  format: date-time
                  type: string
              required:
              - end
              - name
              - start
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create and edit terms
      x-contentType: application/json
      x-accepts: application/json
  /holidaysuggest:
    get:
      description: Allows the user to view the holiday suggestions for each term.
      operationId: holidaysuggest
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The term to get holidays from.
        explode: true
        in: query
        name: term
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the holiday suggestions in the given term
      x-accepts: application/json
  /holidaylist:
    get:
      description: Allows the user to view all holidays entered.
      operationId: holidaylist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The term to get holidays from.
        explode: true
        in: query
        name: term
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of entered holidays
      x-accepts: application/json
  /holidaysave:
    post:
      description: Allows the user to create or edit holidays.
      operationId: holidaysave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                daysoff:
                  description: A json list of names and dates.
                  type: string
              required:
              - daysoff
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a list of holidays
      x-contentType: application/json
      x-accepts: application/json
  /notificationtopicget:
    get:
      description: Allows the user to view an individual notification topic and its
        details.
      operationId: notificationtopicget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification topic to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a notification topic
      x-accepts: application/json
  /notificationtopiclist:
    get:
      description: Allows the user to view the list of all notification topics.
      operationId: notificationtopiclist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List all the notification topics
      x-accepts: application/json
  /notificationtopicdelete:
    get:
      description: Allows the user to delete an existing notification topic.
      operationId: notificationtopicdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification topic to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a notification topic
      x-accepts: application/json
  /notificationtopicsave:
    post:
      description: Allows the user to create and edit a notification topic.
      operationId: notificationtopicsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the topic to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the topic.
                  type: string
                description:
                  description: The description of the topic.
                  type: string
                enableonscreendelivery:
                  description: Specifies whether the notifications assigned to this
                    topic can be sent on-screen or not.
                  type: boolean
                sendonscreendefault:
                  description: Specifies whether the notifications assigned to this
                    topic have to have the on-screen delivery enabled by default.
                  type: boolean
                enableemaildelivery:
                  description: Specifies whether the notifications assigned to this
                    topic can be sent via e-mail or not.
                  type: boolean
                sendemaildefault:
                  description: Specifies whether the notifications assigned to this
                    topic have to have the e-mail delivery enabled by default.
                  type: boolean
                enablesmsdelivery:
                  description: Specifies whether the notifications assigned to this
                    topic can be sent via sms or not.
                  type: boolean
                sendsmsdefault:
                  description: Specifies whether the notifications assigned to this
                    topic have to have the sms delivery enabled by default.
                  type: boolean
              required:
              - description
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a notification topic
      x-contentType: application/json
      x-accepts: application/json
  /notificationtopiclistsubscribe:
    get:
      operationId: notificationtopiclistsubscribe
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List all the notification topics available to subscribe
      x-accepts: application/json
  /notificationsendonscreen:
    get:
      operationId: notificationsendonscreen
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the notification to send.
        explode: true
        in: query
        name: notification
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Send on-screen notifications
      x-accepts: application/json
  /notificationgetunreadcount:
    get:
      operationId: notificationgetunreadcount
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the number of unread notifications
      x-accepts: application/json
  /notificationget:
    get:
      operationId: notificationget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a notification
      x-accepts: application/json
  /notificationdelete:
    get:
      description: Allows the user to delete an existing notification.
      operationId: notificationdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a notification
      x-accepts: application/json
  /notificationlist:
    get:
      description: Allows the user to view the list of all sent notifications.
      operationId: notificationlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The recipient whose notifications have to be listed.
        explode: true
        in: query
        name: recipient
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The status of the notifications to list. Read, Unread or All.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date of the period to filter the notifications.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the notifications.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Specifies whether to list the notifications that were sent on-screen
          or not.
        explode: true
        in: query
        name: sentonscreen
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies whether to list the notifications that were sent via
          e-mail or not.
        explode: true
        in: query
        name: sentemail
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies whether to list the notifications that were sent via
          sms or not.
        explode: true
        in: query
        name: sentsms
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of all sent notifications
      x-accepts: application/json
  /notificationlistmine:
    get:
      operationId: notificationlistmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Specifies the status of the notifications to list. Read, Unread
          or All.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date of the period to filter the notifications.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the notifications.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the notifications sent to the current user
      x-accepts: application/json
  /notificationmarkasread:
    get:
      operationId: notificationmarkasread
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification to mark as read. If not specified
          all notifications of the logged user will be marked as read.
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies the status to filter the notifications. Read, Unread
          or All.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date of the period to filter the notifications.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the notifications.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Mark a notification as read
      x-accepts: application/json
  /notificationmarkasunread:
    get:
      operationId: notificationmarkasunread
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the notification to mark as unread. If not specified
          all notifications of the logged user will be marked as unread.
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies the status to filter the notifications. Read, Unread
          or All.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date of the period to filter the notifications.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the notifications.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Mark a notification as unread
      x-accepts: application/json
  /notificationsend:
    get:
      description: Allows the user to send notifications to other users through the
        Send Message link.
      operationId: notificationsend
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Comma-separated Ids of users to send the notification.
        explode: true
        in: query
        name: tousers
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated Ids of user groups to send the notification.
        explode: true
        in: query
        name: togroups
        required: false
        schema:
          type: string
        style: form
      - description: Whether send the notification via email.
        explode: true
        in: query
        name: emailenabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Whether to display the notification on screen.
        explode: true
        in: query
        name: onscreenenabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Whether to send the notification via text message.
        explode: true
        in: query
        name: smsenabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Notification title.
        explode: true
        in: query
        name: title
        required: true
        schema:
          type: string
        style: form
      - description: Body of the message for on-screen display.
        explode: true
        in: query
        name: onscreenbody
        required: false
        schema:
          type: string
        style: form
      - description: 'What to do when the notification is clicked. Valid values: hide,
          view, url.'
        explode: true
        in: query
        name: onscreenclick
        required: false
        schema:
          type: string
        style: form
      - description: Url to redirect the user, if onscreenclick=url.
        explode: true
        in: query
        name: onscreenurl
        required: false
        schema:
          type: string
        style: form
      - description: 'How to display the notification. Valid values: info, success,
          warning, error'
        explode: true
        in: query
        name: onscreenclass
        required: false
        schema:
          type: string
        style: form
      - description: Time in seconds to display the notification.
        explode: true
        in: query
        name: onscreenduration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Whether to show the notification in the sign-in station.
        explode: true
        in: query
        name: showonstation
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Name of the email sender.
        explode: true
        in: query
        name: emailfromname
        required: false
        schema:
          type: string
        style: form
      - description: Reply-to email.
        explode: true
        in: query
        name: emailfrom
        required: false
        schema:
          type: string
        style: form
      - description: Subject of the email.
        explode: true
        in: query
        name: emailsubject
        required: false
        schema:
          type: string
        style: form
      - description: Body of the email.
        explode: true
        in: query
        name: emailbody
        required: false
        schema:
          type: string
        style: form
      - description: Message for SMS. Max 160 characters.
        explode: true
        in: query
        name: textmessagebody
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Send notifications on screen, via email or text to users
      x-accepts: application/json
  /pushderegister:
    get:
      operationId: pushderegister
      parameters:
      - description: The device token where to send the notification.
        explode: true
        in: query
        name: devicetoken
        required: true
        schema:
          type: string
        style: form
      - description: Either ios or android
        explode: true
        in: query
        name: platform
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Deregisters the current device to receive push notifications
      x-accepts: application/json
  /pushregister:
    get:
      operationId: pushregister
      parameters:
      - description: The device token where to send the notification.
        explode: true
        in: query
        name: devicetoken
        required: true
        schema:
          type: string
        style: form
      - description: Either ios or android
        explode: true
        in: query
        name: platform
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Registers the current device to receive push notifications
      x-accepts: application/json
  /ruledelete:
    get:
      description: Allows the user to delete an existing rule.
      operationId: ruledelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the rule to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a rule
      x-accepts: application/json
  /ruleget:
    get:
      description: Allows the user to view an individual rule and its details.
      operationId: ruleget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the rule to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a rule
      x-accepts: application/json
  /rulelist:
    get:
      description: Allows the user to view the list of all rules.
      operationId: rulelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of user rules
      x-accepts: application/json
  /rulesave:
    post:
      description: Allows the user to create or edit a rule.
      operationId: rulesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the rule to save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the rule.
                  type: string
                description:
                  description: The description of the rule.
                  type: string
                onevent:
                  description: The event that will trigger this rule.
                  type: string
                conditionsjson:
                  description: The conditions that apply to this rule.
                  type: string
                actionsjson:
                  description: The actions that will be executed when this rule matches.
                  type: string
                active:
                  description: Specifies if the action is active or inactive
                  type: boolean
              required:
              - actionsjson
              - active
              - conditionsjson
              - name
              - onevent
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a rule
      x-contentType: application/json
      x-accepts: application/json
  /rulelistactions:
    get:
      description: Allows the user to view all the available rule actions.
      operationId: rulelistactions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of rule actions available
      x-accepts: application/json
  /rulelisteventtypes:
    get:
      description: Allows the user to view a list of available triggers for rules.
      operationId: rulelisteventtypes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of rule event types
      x-accepts: application/json
  /rulegeteventtype:
    get:
      description: Allows the user to view the trigger and its available conditions
        for the rule.
      operationId: rulegeteventtype
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the event to refresh.
        explode: true
        in: query
        name: event
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a rule event type
      x-accepts: application/json
  /rulelisthttprequests:
    get:
      operationId: rulelisthttprequests
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: If true only failed requests will be returned
        explode: true
        in: query
        name: failed
        required: false
        schema:
          type: boolean
        style: form
      - description: The http status to filter the requests
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the http requests sent as a result of a rule
      x-accepts: application/json
  /interactiondelete:
    get:
      operationId: interactiondelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the interaction to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an interaction
      x-accepts: application/json
  /interactionfeed:
    get:
      operationId: interactionfeed
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: If set, only interactions that happened after this date are returned.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Specifies whether to return public or private interactions.
        explode: true
        in: query
        name: public
        required: false
        schema:
          type: boolean
        style: form
      - description: The type of the context of the interactions to return.
        explode: true
        in: query
        name: contexttype
        required: false
        schema:
          type: string
        style: form
      - description: The id of the context of the interactions to return.
        explode: true
        in: query
        name: contextid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The  comma separated types of the interactions to return.
        explode: true
        in: query
        name: types
        required: false
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: If true, a default photo will be returned in case the user does
          not have a photo. Otherwise, no photo will be returned.
        explode: true
        in: query
        name: showdefaultphoto
        required: false
        schema:
          type: boolean
        style: form
      - description: If true, last interactions will be shown first. Otherwise, interactions
          will be ordered ascendantly.
        explode: true
        in: query
        name: orderdescending
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the interactions feed
      x-accepts: application/json
  /interactionget:
    get:
      operationId: interactionget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the interaction.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: The size in pixels of the thumbnail media URLs returned. Defaults
          to 680. If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: thumbnailmediasize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View an interaction
      x-accepts: application/json
  /interactionlistprivatesummary:
    get:
      operationId: interactionlistprivatesummary
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: If true, a default photo will be returned in case the user does
          not have a photo. Otherwise, no photo will be returned.
        explode: true
        in: query
        name: showdefaultphoto
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get current user's latest private interactions
      x-accepts: application/json
  /interactionsave:
    post:
      operationId: interactionsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the interaction to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                type:
                  description: The type of the interaction
                  type: string
                body:
                  description: The body of the interaction (encoded in Base64).
                  type: string
                attachmentname:
                  description: The name of the file to be uploaded.
                  type: string
                public:
                  description: Specifies whether this interaction is public or private.
                  type: boolean
                sourceid:
                  description: Pass-through field used for reference in the client.
                  type: string
                sourcedate:
                  description: The source's date.
                  format: date-time
                  type: string
                contexttype:
                  description: The type of the context of the interaction.
                  type: string
                contextid:
                  description: The id of the context of the interaction.
                  format: uuid
                  type: string
                photosize:
                  description: The size in pixels of the photo URLs returned. Defaults
                    to 40. If the size specified is not available, a similar one will
                    be returned.
                  format: int32
                  type: integer
                showdefaultphoto:
                  description: If true, a default photo will be returned in case the
                    user does not have a photo. Otherwise, no photo will be returned.
                  type: boolean
                notificationtitle:
                  description: Specifies the value that is sent as the notification
                    title.
                  type: string
              required:
              - public
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save an interaction
      x-contentType: application/json
      x-accepts: application/json
  /likedelete:
    get:
      operationId: likedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the interaction to unlike.
        explode: true
        in: query
        name: interactionid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a like
      x-accepts: application/json
  /likelist:
    get:
      operationId: likelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the interaction to unlike.
        explode: true
        in: query
        name: interactionid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the likes associated to a target
      x-accepts: application/json
  /likesave:
    post:
      operationId: likesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                interactionid:
                  description: The id of the interaction to unlike.
                  format: uuid
                  type: string
              required:
              - interactionid
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save a like
      x-contentType: application/json
      x-accepts: application/json
  /socialcontacts:
    get:
      operationId: socialcontacts
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Text to filter results.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: If true, a default photo will be returned in case the user does
          not have a photo. Otherwise, no photo will be returned.
        explode: true
        in: query
        name: showdefaultphoto
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the list of contacts in the network
      x-accepts: application/json
  /socialgrouplist:
    get:
      operationId: socialgrouplist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the groups the current user is in
      x-accepts: application/json
  /socialgroupsave:
    post:
      operationId: socialgroupsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: ID of the group to update. Leave blank to create new.
                  format: uuid
                  type: string
                name:
                  description: Name of the group to update/create.
                  type: string
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a new group
      x-contentType: application/json
      x-accepts: application/json
  /socialgroupdelete:
    get:
      operationId: socialgroupdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the group to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Deletes a group
      x-accepts: application/json
  /socialgroupaddmembers:
    get:
      operationId: socialgroupaddmembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the group to add members to.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Csv list of user Ids to add.
        explode: true
        in: query
        name: userids
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Adds new members to a group (which the user must own already)
      x-accepts: application/json
  /socialgrouplistmembers:
    get:
      operationId: socialgrouplistmembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the group to list members.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the members of a group
      x-accepts: application/json
  /socialgroupremovemembers:
    get:
      operationId: socialgroupremovemembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the group to remove members from.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Csv list of user Ids to remove.
        explode: true
        in: query
        name: userids
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Removes members from a group (which the user must own already)
      x-accepts: application/json
  /socialgroupremovemyself:
    get:
      operationId: socialgroupremovemyself
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the group to remove me from.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Removes myself from an existent group
      x-accepts: application/json
  /import:
    get:
      description: Allows the user to import data into AccuCampus via CSV or flat
        files either manually or automatically using the import utility.
      operationId: import
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The kind of data that is being uploaded.
        explode: true
        in: query
        name: importtype
        required: true
        schema:
          type: string
        style: form
      - description: Set 'file' as value to indicate that a file is being submitted
          in the body (instead of a JSON object).
        explode: true
        in: query
        name: upload
        required: true
        schema:
          type: string
        style: form
      - description: The local name of the uploaded file. For later reference.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: Import parameters, in a key-value pair JSON-serialized object.
          Eg {'parameter':'value'}.
        explode: true
        in: query
        name: parameters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Import data into AccuCampus
      x-accepts: application/json
  /importlisttypes:
    get:
      operationId: importlisttypes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists available import types
      x-accepts: application/json
  /eventget:
    get:
      description: Allows the user to view an individual course and its details.
      operationId: eventget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a course
      x-accepts: application/json
  /eventgetsessionsbydate:
    get:
      description: Allows the user to view a list of courses by date.
      operationId: eventgetsessionsbydate
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The location to filter the events.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The date to filter the events. Today will be used if this parameter
          is omitted.
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Type of event to list.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of courses by date
      x-accepts: application/json
  /eventlist:
    get:
      description: Allows the user to view the full list of courses.
      operationId: eventlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          type: string
        style: form
      - description: True to return only the event information and not the associated
          schedule, dept, etc. Defaults to false.
        explode: true
        in: query
        name: summaryonly
        required: false
        schema:
          type: boolean
        style: form
      - description: Id of the term to list the events. Null to list all events.
        explode: true
        in: query
        name: termid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of courses
      x-accepts: application/json
  /eventsave:
    post:
      description: Allows the user to create or edit a course.
      operationId: eventsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the event to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the event.
                  type: string
                codegroup:
                  description: Optional code to group events.
                  type: string
                code:
                  description: The unique code of the event.
                  type: string
                term:
                  description: The term of the event.
                  type: string
                department:
                  description: The department of the event.
                  type: string
                details:
                  description: The details of the event.
                  type: string
                recurringschedule:
                  description: The recurring schedule of the event, a JSON-formatted
                    array. Each item must contain an action (set/remove) and the schedule
                    properties, as returned by event.get.
                  type: string
                onetimeschedule:
                  description: The one-time schedule of the event, a JSON-formatted
                    array. Each item must contain an action (set/remove) and the schedule
                    properties, as returned by event.get.
                  type: string
              required:
              - code
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a course
      x-contentType: application/json
      x-accepts: application/json
  /eventdelete:
    get:
      description: Allows the user to delete an existing course.
      operationId: eventdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a course
      x-accepts: application/json
  /eventsearchgroup:
    get:
      operationId: eventsearchgroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Query to search event groups.
        explode: true
        in: query
        name: query
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Searches for the available event groups
      x-accepts: application/json
  /usergroupdelete:
    get:
      description: Allows the user to delete a group that they have permission to
        edit.
      operationId: usergroupdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the group to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a group
      x-accepts: application/json
  /usergroupget:
    get:
      description: Allows the user to view a user group and its details.
      operationId: usergroupget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user group to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a user group
      x-accepts: application/json
  /usergrouplist:
    get:
      description: Allows the user to view the list of groups that they have permission
        to view.
      operationId: usergrouplist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The type of the groups to return. Either 'user', 'dynamic' or
          any other type of group.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of user groups
      x-accepts: application/json
  /usergroupsave:
    post:
      description: Allows the user to create a new group or edit a group that they
        have permission to edit.
      operationId: usergroupsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the group to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the group.
                  type: string
                description:
                  description: The description of the group.
                  type: string
                isprivate:
                  description: Whether this group can be seen by others other than
                    the creator.
                  type: boolean
                viewroles:
                  description: The roles that can view the group, in JSON format.
                  type: string
                editroles:
                  description: The roles that can edit the group, in JSON format.
                  type: string
                scopes:
                  description: The scopes that have access to this group, in JSON
                    format.
                  type: string
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a group
      x-contentType: application/json
      x-accepts: application/json
  /usergroupaddmember:
    get:
      description: Allows the user to add a user to a group that they have permission
        to edit.
      operationId: usergroupaddmember
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the group.
        explode: true
        in: query
        name: groupid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add a user to a group
      x-accepts: application/json
  /usergroupgetmembers:
    get:
      description: Allows the user to view the list of users in a group that they
        have permission to view.
      operationId: usergroupgetmembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user group to get.
        explode: true
        in: query
        name: groupid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the members of a user group
      x-accepts: application/json
  /usergroupgetuser:
    get:
      description: Allows the user to view the groups an individual user is registered
        to, based on group and user permissions.
      operationId: usergroupgetuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to get his groups.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the groups which a user is registered to
      x-accepts: application/json
  /usergroupremovemember:
    get:
      description: Allows the user to remove a user from a group that they have permission
        to edit.
      operationId: usergroupremovemember
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the group.
        explode: true
        in: query
        name: groupid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a user from a group
      x-accepts: application/json
  /mediatypedelete:
    get:
      description: Allows the user to delete an existing media type.
      operationId: mediatypedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media type to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a media type
      x-accepts: application/json
  /mediatypeget:
    get:
      description: Allows the user to view a media type and its details.
      operationId: mediatypeget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media type to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a media type
      x-accepts: application/json
  /mediatypelist:
    get:
      description: Allows the user to view the list of all media types.
      operationId: mediatypelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of media types
      x-accepts: application/json
  /mediatypesave:
    post:
      description: Allows the user to create or edit a media type.
      operationId: mediatypesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the mediaType save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the mediaType.
                  type: string
                checkoutperiodbasis:
                  description: The checkout period basis (0 = hours, 1 = days, 2 =
                    weeks).
                  format: int32
                  type: integer
                checkoutperiodduration:
                  description: Specifies the duration of the default checkout period
                    given the basis.
                  format: int32
                  type: integer
                maxcheckindate:
                  description: Specifies the maximum date when all the media items
                    of this type must be returned.
                  format: date-time
                  type: string
              required:
              - checkoutperiodbasis
              - checkoutperiodduration
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a media type
      x-contentType: application/json
      x-accepts: application/json
  /mediadelete:
    get:
      description: Allows the user to delete an existing media item.
      operationId: mediadelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a media item
      x-accepts: application/json
  /mediaget:
    get:
      description: Allows the user to view an individual media item and its details.
      operationId: mediaget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a media item
      x-accepts: application/json
  /mediagetbycode:
    get:
      description: Allows the user to search for media items by their unique code.
      operationId: mediagetbycode
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The code of the media item to get.
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: The location where to look for the media item.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search media item by unique code
      x-accepts: application/json
  /medialist:
    get:
      description: Allows the user to view the list of all media items tied to locations
        in which the user is scoped.
      operationId: medialist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Used to filter the media items by their checkout status (0 =
          CheckedIn, 1 = CheckedOut, Unspecified = All).
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Used to filter the media items that are checked-out by a specific
          user.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of media items
      x-accepts: application/json
  /mediasave:
    post:
      description: Allows the user to create or edit a media item.
      operationId: mediasave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the media item save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                code:
                  description: The code of the media item.
                  type: string
                title:
                  description: The title of the media item.
                  type: string
                mediatype:
                  description: The type of the media item.
                  format: uuid
                  type: string
                location:
                  description: The location of the media item.
                  format: uuid
                  type: string
                checkoutperiodbasis:
                  description: The checkout period basis (0 = hours, 1 = days, 2 =
                    weeks).
                  format: int32
                  type: integer
                checkoutperiodduration:
                  description: Specifies the duration of the checkout period given
                    the basis.
                  format: int32
                  type: integer
                staff:
                  description: The staff of the media item.
                  format: uuid
                  type: string
                shelf:
                  description: The shelf of the media item.
                  type: string
                notes:
                  description: The notes of the media item.
                  type: string
                active:
                  description: Specifies whether the media item is active or not.
                  type: boolean
              required:
              - active
              - checkoutperiodbasis
              - checkoutperiodduration
              - mediatype
              - title
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a media item
      x-contentType: application/json
      x-accepts: application/json
  /mediacheckout:
    get:
      description: Allows the user to check out a media item.
      operationId: mediacheckout
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item to checkout.
        explode: true
        in: query
        name: media
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the user that is checking the item out.
        explode: true
        in: query
        name: user
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the staff member related to the checkout.
        explode: true
        in: query
        name: staff
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event related to the checkout.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The checkout date.
        explode: true
        in: query
        name: checkoutdate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The date when the checkout is due.
        explode: true
        in: query
        name: duedate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The notes of the checkout.
        explode: true
        in: query
        name: notes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check out media item
      x-accepts: application/json
  /mediacheckin:
    get:
      description: Allows the user to check in a media item.
      operationId: mediacheckin
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item to checkin.
        explode: true
        in: query
        name: media
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The checkout date.
        explode: true
        in: query
        name: checkindate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The notes of the checkout.
        explode: true
        in: query
        name: notes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check in media item
      x-accepts: application/json
  /mediagetcheckout:
    get:
      description: Allows the user to view a media item's checkout information.
      operationId: mediagetcheckout
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item whose checkout information has to be
          retrieved.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a media item checkout information
      x-accepts: application/json
  /mediagetcheckoutlog:
    get:
      description: Allows the user to view a media item's checkout history.
      operationId: mediagetcheckoutlog
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the media item whose checkout information has to be
          retrieved.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a media checkout log
      x-accepts: application/json
  /mediacheckoutlist:
    get:
      description: Allows the user to view a list of all past checkouts
      operationId: mediacheckoutlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Used to filter the checkouts of a specific media item.
        explode: true
        in: query
        name: media
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Used to filter the checkouts made by a specific user.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of past media checkouts
      x-accepts: application/json
  /mediadeletecheckoutlog:
    get:
      description: Allows the user to delete a media item's checkout log.
      operationId: mediadeletecheckoutlog
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the checkout log to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a media checkout log
      x-accepts: application/json
  /qrlabelsprint:
    get:
      description: Allows the user to generate a printable PDF of QR labels containing
        user Card Numbers to be emailed to users and used as attendance tracking for
        events.
      operationId: qrlabelsprint
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user whose label needs to be printed.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the group whose members' labels need to be printed.
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Print and email QR labels
      x-accepts: application/json
  /serviceget:
    get:
      description: Allows the user to view an individual service and its details.
      operationId: serviceget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a service
      x-accepts: application/json
  /servicelist:
    get:
      description: Allows the user to view the full list of existing services.
      operationId: servicelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of services
      x-accepts: application/json
  /servicedelete:
    get:
      description: Allows the user to delete a service from the existing list.
      operationId: servicedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a service
      x-accepts: application/json
  /servicesave:
    post:
      description: Allows the user to create or edit a service.
      operationId: servicesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the service save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the service.
                  type: string
                type:
                  description: The type of the service.
                  type: string
                order:
                  description: The order of the service.
                  format: int32
                  type: integer
                globallyavailable:
                  description: Whether the service is available for all the locations.
                  type: boolean
                description:
                  description: The description of the service.
                  type: string
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a service
      x-contentType: application/json
      x-accepts: application/json
  /serviceassignmentaddservice:
    get:
      description: Allows the user to enable a service in a location to which they
        are scoped.
      operationId: serviceassignmentaddservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to add.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location.
        explode: true
        in: query
        name: locationid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Enable a service in a specific location
      x-accepts: application/json
  /serviceassignmentgetlocation:
    get:
      description: Allows the user to view a list of services available in a location
        to which they are scoped.
      operationId: serviceassignmentgetlocation
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to get.
        explode: true
        in: query
        name: locationid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies whether the services available globally must be returned
          or not.
        explode: true
        in: query
        name: includegloballyavailable
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters the name of the services to return.
        explode: true
        in: query
        name: namefilter
        required: false
        schema:
          type: boolean
        style: form
      - description: The max number of services to return.
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of services enabled for a specific location
      x-accepts: application/json
  /serviceassignmentgetservice:
    get:
      description: Allows the user to view a list of locations in which a service
        is available.
      operationId: serviceassignmentgetservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to get its locations.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of locations where a service is available
      x-accepts: application/json
  /serviceassignmentremoveservice:
    get:
      description: Allows the user to disable a service from a location to which they
        are scoped.
      operationId: serviceassignmentremoveservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to remove.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location to remove the service from.
        explode: true
        in: query
        name: locationid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a service from a location
      x-accepts: application/json
  /actionassignmentdelete:
    get:
      description: Allows a user to remove an action item from a user's action plan.
      operationId: actionassignmentdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action assignment to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove an action item from an action plan
      x-accepts: application/json
  /actionassignmentget:
    get:
      description: Allows the user to view an individual action item and its details,
        minus all the action item's updates.
      operationId: actionassignmentget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action assignment to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of an action item assigned to a user
      x-accepts: application/json
  /actionassignmentlist:
    get:
      description: Allows the user to view the list of all action items for a specified
        user.
      operationId: actionassignmentlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The assignee's id to filter the assignments.
        explode: true
        in: query
        name: assignee
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The status to filter the assignments.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of action items in a user's plan
      x-accepts: application/json
  /actionassignmentlistmine:
    get:
      operationId: actionassignmentlistmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The status to filter the assignments.
        explode: true
        in: query
        name: status
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List public action assignments assigned to the logged user
      x-accepts: application/json
  /actionassignmentlisthistory:
    get:
      description: Allows the user to view an individual action plan and its details,
        including all the action plan's updates.
      operationId: actionassignmentlisthistory
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The action assignment's id whose history the user wants to get.
        explode: true
        in: query
        name: actionassignment
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the history of an action item assigned to a user
      x-accepts: application/json
  /actionassignmentlistpublichistory:
    get:
      operationId: actionassignmentlistpublichistory
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The action assignment's id whose history the user wants to get.
        explode: true
        in: query
        name: actionassignment
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List public action assignment history
      x-accepts: application/json
  /actionassignmentsave:
    post:
      description: Allows the user to edit or assign an action item to a user
      operationId: actionassignmentsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                assignee:
                  description: The assignee of the item.
                  format: uuid
                  type: string
                group:
                  description: The group to assing the item.
                  format: uuid
                  type: string
                item:
                  description: The action item to assign.
                  type: string
                event:
                  description: The event of the assignment.
                  type: string
                datedue:
                  description: The date when the action assignment is due.
                  format: date-time
                  type: string
                dateexpired:
                  description: The date when the action assignment is expired.
                  format: date-time
                  type: string
                followers:
                  description: A JSON array containing the ids of the users that are
                    followers of this action item
                  type: boolean
                notifyassignee:
                  description: Specifies if the item's assignee must be notified of
                    it.
                  type: boolean
                notes:
                  description: The assignment's notes.
                  type: string
                autocomplete:
                  description: Specifies if the assignment can be completed automatically
                    or not.
                  type: boolean
                completed:
                  description: Specifies if the assignment is completed or not.
                  type: boolean
              required:
              - completed
              - datedue
              - item
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add an action item to a user's action plan
      x-contentType: application/json
      x-accepts: application/json
  /actionassignmentsavehistory:
    post:
      description: Allows the user to update or mark an action item as complete.
      operationId: actionassignmentsavehistory
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                actionassignment:
                  description: The action assignment's id whose follow up the user
                    wants to save.
                  format: uuid
                  type: string
                datedue:
                  description: The date when the action assignment is due.
                  format: date-time
                  type: string
                dateexpired:
                  description: The date when the action assignment is expired.
                  format: date-time
                  type: string
                followers:
                  description: A JSON array containing the ids of the users that are
                    followers of this action item
                  type: string
                notifyassignee:
                  description: Specifies if the item's assignee must be notified of
                    it.
                  type: boolean
                notes:
                  description: The assignment's follow up notes.
                  type: string
                autocomplete:
                  description: Specifies if the assignment can be completed automatically
                    or not.
                  type: boolean
                completed:
                  description: Specifies if the assignment was completed or not.
                  type: string
              required:
              - actionassignment
              - completed
              - datedue
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Update an action item assigned to a user
      x-contentType: application/json
      x-accepts: application/json
  /actionassignmentmarkcomplete:
    get:
      description: Allows the user to bulk complete action items.
      operationId: actionassignmentmarkcomplete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The assignee of the item.
        explode: true
        in: query
        name: assignee
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The group to assing the item.
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The action item to assign.
        explode: true
        in: query
        name: item
        required: true
        schema:
          type: string
        style: form
      - description: The assignment's notes.
        explode: true
        in: query
        name: notes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Bulk complete action items
      x-accepts: application/json
  /actionitemdelete:
    get:
      description: Allows the user to delete an action item.
      operationId: actionitemdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action item to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an action item
      x-accepts: application/json
  /actionitemget:
    get:
      description: Allows the user to view an individual action item and its details.
      operationId: actionitemget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action item to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of an action item
      x-accepts: application/json
  /actionitemlist:
    get:
      description: Allows the user to view a list of action items
      operationId: actionitemlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of action items
      x-accepts: application/json
  /actionitemsave:
    post:
      description: Allows the user to edit an action item.
      operationId: actionitemsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the action item to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                type:
                  description: The id of the action type of the item to save.
                  format: uuid
                  type: string
                code:
                  description: The code of the action item.
                  type: string
                name:
                  description: The name of the action item.
                  type: string
                description:
                  description: The description of the action item.
                  type: string
                durationbasis:
                  description: Specifies the duration basis of the action item (0
                    = Minutes, 1 = Hours, 2 = Days, 3 = Weeks).
                  format: int32
                  type: integer
                duration:
                  description: The default duration value of the action item.
                  format: int32
                  type: integer
                expirationbasis:
                  description: Specifies the expiration basis of the action item (0
                    = Minutes, 1 = Hours, 2 = Days, 3 = Weeks).
                  format: int32
                  type: integer
                expiration:
                  description: The default expiration value of the action item.
                  format: int32
                  type: integer
                service:
                  description: The id of the service of the item to save.
                  format: uuid
                  type: string
                eventbased:
                  description: Specifies if the item is event based.
                  type: boolean
                multipleassignment:
                  description: Specifies if the item can me assigned multiple times
                    to the same user.
                  type: boolean
                followers:
                  description: A JSON array containing the ids of the users that are
                    followers of this action item
                  type: boolean
                notifyassignee:
                  description: Specifies if the item's assignee must be notified of
                    it.
                  type: boolean
                isrestricted:
                  description: Whether the access to this action item is restricted.
                  type: boolean
                viewroles:
                  description: The roles that can view the action item, in JSON format.
                  type: string
                editroles:
                  description: The roles that can edit the action item, in JSON format.
                  type: string
                scopes:
                  description: The scopes that have access to this action item, in
                    JSON format.
                  type: string
              required:
              - code
              - duration
              - durationbasis
              - name
              - token
              - type
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an action item
      x-contentType: application/json
      x-accepts: application/json
  /actionpackdelete:
    get:
      description: Allows the user to delete an action item pack.
      operationId: actionpackdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action pack to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an action item pack
      x-accepts: application/json
  /actionpackget:
    get:
      description: Allows the user to view an individual action pack and its details.
      operationId: actionpackget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action pack to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of an action item pack
      x-accepts: application/json
  /actionpacklist:
    get:
      description: Allows the user to view the full list of action item packs.
      operationId: actionpacklist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of action item packs
      x-accepts: application/json
  /actionpacksave:
    post:
      description: Allows the user to edit an action item pack.
      operationId: actionpacksave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the action pack to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                code:
                  description: The code of the action pack.
                  type: string
                name:
                  description: The name of the action pack.
                  type: string
                description:
                  description: The description of the action pack.
                  type: string
                items:
                  description: A JSON array containing the ids of the action items
                    that belong to this pack
                  type: boolean
              required:
              - code
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an action item pack
      x-contentType: application/json
      x-accepts: application/json
  /actionpackassign:
    get:
      description: Allows the user to assign an action pack to a user or group of
        users.
      operationId: actionpackassign
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action pack to assign.
        explode: true
        in: query
        name: pack
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The assignee of the pack.
        explode: true
        in: query
        name: assignee
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The group to assign the pack.
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: A JSON array containing the action items' data needed to assign
          them to the assignee (Id, Event, DateDue, DateExpired, NotifyAssigne).
        explode: true
        in: query
        name: itemsdata
        required: true
        schema:
          type: boolean
        style: form
      - description: The assignment's notes.
        explode: true
        in: query
        name: notes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Assign an action item pack to a user
      x-accepts: application/json
  /actiontypedelete:
    get:
      description: Allows the user to delete an action item type.
      operationId: actiontypedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action type to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an action item type
      x-accepts: application/json
  /actiontypeget:
    get:
      description: Allows the user to view an individual action item type and its
        details.
      operationId: actiontypeget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the action type to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of an action item type
      x-accepts: application/json
  /actiontypelist:
    get:
      description: Allows the user to view the full list of action item types.
      operationId: actiontypelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of action item types
      x-accepts: application/json
  /actiontypesave:
    post:
      description: Allows the user to dit an action item type.
      operationId: actiontypesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the action type to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the action type.
                  type: string
                description:
                  description: The description of the action type.
                  type: string
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an action item type
      x-contentType: application/json
      x-accepts: application/json
  /tagsearch:
    get:
      description: Allows the user to search for tags.
      operationId: tagsearch
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The query to search tags. Use group:<group> to search in a specific
          group (mandatory).
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Specifies whether an option to create a new tag should be retrieved.
        explode: true
        in: query
        name: allowcreatingnew
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search for tags in the account
      x-accepts: application/json
  /tagget:
    get:
      description: Allows the user to click on and view the settings for a tag.
      operationId: tagget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the tag to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a specified tag
      x-accepts: application/json
  /tagsave:
    post:
      description: Allows the user to create or edit a tag.
      operationId: tagsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the tag save (leave empty to create a new
                    one).
                  format: uuid
                  type: string
                group:
                  description: The group id of the tag.
                  type: string
                name:
                  description: The name of the tag.
                  type: string
                description:
                  description: The description of the tag.
                  type: string
                requestedby:
                  description: The information regarding who requested this tag and
                    who should use it.
                  type: string
                viewroles:
                  description: The roles that can view the answers, in JSON format.
                  type: string
                editroles:
                  description: The roles that can edit the answers, in JSON format.
                  type: string
                scopes:
                  description: The scopes that have access to this questionnaire,
                    in JSON format.
                  type: string
              required:
              - group
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a tag
      x-contentType: application/json
      x-accepts: application/json
  /taglistgroups:
    get:
      description: Allows the user to view the list of user roles that can be tagged,
        according to that tag's settings.
      operationId: taglistgroups
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of entities that can be tagged
      x-accepts: application/json
  /taglist:
    get:
      description: Allows the user to view the list of tags.
      operationId: taglist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The group of the tags to return.
        explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of tags
      x-accepts: application/json
  /tagdelete:
    get:
      description: Allows the user to delete an existing tag.
      operationId: tagdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the tag to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a tag
      x-accepts: application/json
  /attendancelogdelete:
    get:
      description: Allows the user to delete an existing attendance log.
      operationId: attendancelogdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an attendance log
      x-accepts: application/json
  /attendancelogget:
    get:
      description: Allows the user to view an individual attendance log and its details.
      operationId: attendancelogget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of an attendance log
      x-accepts: application/json
  /attendanceloglist:
    get:
      description: Allows the user to view the list of all attendance logs in the
        location or locations in which the user is scoped.
      operationId: attendanceloglist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: 'Filter the logs, valid values are: invalid, not-signed-in, not-signed-out,
          stayed-less-than-required, out-of-event, valid.'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The user ID of the user to get the logs.
        explode: true
        in: query
        name: userid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of attendance logs
      x-accepts: application/json
  /attendanceloglistmine:
    get:
      operationId: attendanceloglistmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: 'Filter the logs, valid values are: invalid, not-signed-in, not-signed-out,
          stayed-less-than-required, out-of-event, valid.'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the attendance logs of the current user
      x-accepts: application/json
  /attendancelogsave:
    post:
      description: Allows the user to create or edit an attendance log.
      operationId: attendancelogsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the room to save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                cardnumber:
                  description: 'The card # of the user (used when the user is unknown).'
                  format: uuid
                  type: string
                user:
                  description: The id of the user, or a CSV list of ids if creating
                    new logs.
                  type: string
                location:
                  description: The id of the location where the user signed in.
                  format: uuid
                  type: string
                event:
                  description: The id of the event the user signed in to.
                  format: uuid
                  type: string
                useeventschedule:
                  description: Specifies whether the event schedule should be used
                    to set the log status.
                  type: boolean
                notes:
                  description: The notes of the log.
                  type: string
                publicnotes:
                  description: Specifies whether the notes are public to the user
                    or should only be seen by staff or admins
                  type: boolean
                logdetails:
                  description: The log details in JSON format
                  format: uuid
                  type: string
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an attendance log
      x-contentType: application/json
      x-accepts: application/json
  /attendancelogwhosin:
    get:
      description: Allows the user to view the Who's In page and view all users who
        are logged into locations in which the user is scoped.
      operationId: attendancelogwhosin
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The id of the location to search for users that are in.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event to search for users that are in.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Field to sort by. Either first-name, last-name or sign-in-time.
        explode: true
        in: query
        name: sorting
        required: false
        schema:
          type: string
        style: form
      - description: The comma-separated list of ids of the roles to search for users
          that are in.
        explode: true
        in: query
        name: roles
        required: false
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 'A JSON array containing the extension filters (i.e [{name: ''nametofilter'',
          value: ''valuetofilter''}]).'
        explode: true
        in: query
        name: extensions
        required: false
        schema:
          type: string
        style: form
      - description: True to export the results as CSV
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View who's in a location
      x-accepts: application/json
  /attendancelogsignout:
    get:
      description: Allows the user to sign out am attendance log from the Who's In
        page.
      operationId: attendancelogsignout
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log to sign-out.
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location to filter the users to sign out.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event to filter the users to sign out.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies the date and time when the specified logs have to be
          signed out.
        explode: true
        in: query
        name: datetime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sign out an attendance log
      x-accepts: application/json
  /attendanceloggetchangehistory:
    get:
      description: Allows the user to view the swipes of an individual attendance
        logs (sign ins and sign outs).
      operationId: attendanceloggetchangehistory
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of an attendance log's swipe history
      x-accepts: application/json
  /swipeget:
    get:
      description: Allows the user to view an individual attendance swipe.
      operationId: swipeget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the swipe to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a swipe
      x-accepts: application/json
  /swipelist:
    get:
      description: Allows the user to view a list of all swipes for the location or
        locations in which the user is scoped.
      operationId: swipelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of swipes
      x-accepts: application/json
  /swipesave:
    post:
      description: Allows the user to save an attendance swipe, which will also save
        the attendance log if the information in the swipe is enough.
      operationId: swipesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                time:
                  description: The date and time of the swipe.
                  format: date-time
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                    If not specified then it's inferred from existing logs.
                  format: int32
                  type: integer
                cardnumber:
                  description: The number of the swipped card.
                  type: string
                location:
                  description: The id of the location whose swipe has to be saved.
                  format: uuid
                  type: string
                event:
                  description: The id of the event whose swipe has to be saved.
                  format: uuid
                  type: string
                client:
                  description: The unique id of the client whose swipe has to be saved.
                  type: string
                clientname:
                  description: The name of the client whose swipe has to be saved.
                  type: string
                metadata:
                  description: The swipe's metadata in JSON format.
                  type: string
                photosize:
                  description: The swiping user's photo size.
                  format: int32
                  type: integer
              required:
              - cardnumber
              - client
              - time
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a swipe, and if possible, save the related attendance
        log
      x-contentType: application/json
      x-accepts: application/json
  /swipedelete:
    get:
      description: Allows the user to delete an existing attendance swipe.
      operationId: swipedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the swipe to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a swipe
      x-accepts: application/json
  /attendancelogcommentdelete:
    get:
      operationId: attendancelogcommentdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log comment to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a comment on an attendance log
      x-accepts: application/json
  /attendancelogcommentget:
    get:
      operationId: attendancelogcommentget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the comment to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a comment on an attendance log
      x-accepts: application/json
  /attendancelogcommentlist:
    get:
      operationId: attendancelogcommentlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the attendance log whose comments have to be retrieved.
        explode: true
        in: query
        name: attendancelog
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the comments on a specific attendance log
      x-accepts: application/json
  /attendancelogcommentsave:
    post:
      operationId: attendancelogcommentsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the comment to edit (leave empty to create
                    a new one)
                  format: uuid
                  type: string
                attendancelog:
                  description: The id of the attendance log that has to be commented.
                  format: uuid
                  type: string
                comments:
                  description: The comments that have to be saved.
                  type: string
                public:
                  description: Specifies whether this comment is public to the user
                    or should only be seen by staff or admins
                  type: boolean
              required:
              - comments
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save a comment on an attendance log
      x-contentType: application/json
      x-accepts: application/json
  /usergrouprefresh:
    get:
      description: Allows the user to refresh a dynamic group that they have permission
        to edit.
      operationId: usergrouprefresh
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the group to refresh.
        explode: true
        in: query
        name: group
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Refresh the dynamic group
      x-accepts: application/json
  /usergrouptagmembers:
    get:
      description: Allows the user to assign tags to the users of a group that they
        have permission to edit.
      operationId: usergrouptagmembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the group to save whose members have to be tagged.
        explode: true
        in: query
        name: group
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The tags to assign to the members of the specified group, in
          JSON format.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Assign tags to the members of a specified group
      x-accepts: application/json
  /usergroupuntagmembers:
    get:
      description: Allows the user to unassign tags to the users of a group that they
        have permission to edit.
      operationId: usergroupuntagmembers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the group to save whose members have to be untagged.
        explode: true
        in: query
        name: group
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The tags to unassign from the members of the specified group,
          in JSON format.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Unassign tags from the members of a specified group
      x-accepts: application/json
  /ratingget:
    get:
      operationId: ratingget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The entity type to get the rating.
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: List of ids to get the ratings.
        explode: true
        in: query
        name: entityids
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get rating for one or more entities
      x-accepts: application/json
  /ratingrate:
    get:
      operationId: ratingrate
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The entity type to rate.
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: Id of the entity to rate.
        explode: true
        in: query
        name: entityid
        required: true
        schema:
          type: string
        style: form
      - description: Value from 0 to 100 with the rating.
        explode: true
        in: query
        name: value
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Whether to post as annonymous.
        explode: true
        in: query
        name: annonymous
        required: true
        schema:
          type: boolean
        style: form
      - description: Comment associated with this review. Comment can be updated later
          on another request too.
        explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      - description: Whether to update the comments. Defaults to true.
        explode: true
        in: query
        name: updatecomment
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Rates one entity
      x-accepts: application/json
  /ratinggetall:
    get:
      operationId: ratinggetall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The entity type to get the rating.
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: Id of the entity to get the ratings.
        explode: true
        in: query
        name: entityid
        required: true
        schema:
          type: string
        style: form
      - description: True to show most recent first, otherwise most helpful first.
        explode: true
        in: query
        name: mostrecentfirst
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the full ratings and comments for a specific entity
      x-accepts: application/json
  /ratinggetcomments:
    get:
      operationId: ratinggetcomments
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the rating to get all comments.
        explode: true
        in: query
        name: ratingid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets all the comments for a rating
      x-accepts: application/json
  /ratingpostcomment:
    get:
      operationId: ratingpostcomment
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the rating to post the comment.
        explode: true
        in: query
        name: ratingid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Text of the comment to post.
        explode: true
        in: query
        name: comment
        required: true
        schema:
          type: string
        style: form
      - description: True to post the comment annonymously.
        explode: true
        in: query
        name: annonymous
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Posts a comments for in a rating
      x-accepts: application/json
  /ratingvote:
    get:
      operationId: ratingvote
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the rating to vote on.
        explode: true
        in: query
        name: ratingid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: 1 to vote up, -1 to vote down.
        explode: true
        in: query
        name: vote
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Votes up or down a rating
      x-accepts: application/json
  /ratingflag:
    get:
      operationId: ratingflag
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The rating to flag.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Comment why should this should be removed.
        explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Flags one rating for moderation
      x-accepts: application/json
  /ratingflagcomment:
    get:
      operationId: ratingflagcomment
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The comment to flag.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Comment why should this should be removed.
        explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Flags one comment for moderation
      x-accepts: application/json
  /ratinggetpendingmoderation:
    get:
      description: Allows the user to view the list of pending ratings and comments.
      operationId: ratinggetpendingmoderation
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Shows a list of the ratings and comments that are pending for moderation
      x-accepts: application/json
  /ratingmoderate:
    get:
      description: Allows the user to approve or reject a comment or rating.
      operationId: ratingmoderate
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Either 'rating' or 'comment' depending on what you want to moderate.
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: Id of the rating or comment, as specified in type.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: True to approve, false to reject.
        explode: true
        in: query
        name: approve
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Allows the user to accept or reject a comment
      x-accepts: application/json
  /ratinggetpending:
    get:
      operationId: ratinggetpending
      parameters:
      - description: The ID of the group of pending ratings to get.
        explode: true
        in: query
        name: getgroup
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Rate this before returning.
        explode: true
        in: query
        name: rateid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The value used to rate the item specified in rateid.
        explode: true
        in: query
        name: rateval
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets info of pre-saved and pre-approved ratings
      x-accepts: application/json
  /ratingratepending:
    get:
      operationId: ratingratepending
      parameters:
      - description: The ID of the group of with pre-approved ratings.
        explode: true
        in: query
        name: group
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Rate this before returning.
        explode: true
        in: query
        name: rateid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Value from 0 to 100 with the rating.
        explode: true
        in: query
        name: value
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Whether to post as annonymous.
        explode: true
        in: query
        name: annonymous
        required: true
        schema:
          type: boolean
        style: form
      - description: Comment associated with this review. Comment can be updated later
          on another request too.
        explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      - description: Whether to update the comments. Defaults to true.
        explode: true
        in: query
        name: updatecomment
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Rates a pre-saved and pre-approved entity
      x-accepts: application/json
  /reportquery:
    get:
      description: Allows the user to run reports with the exception of attendance
        analytics reports.
      operationId: reportquery
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the report to execute
        explode: true
        in: query
        name: reportname
        required: true
        schema:
          type: string
        style: form
      - description: 'A pipe separated list of the parameters. Example: key1=value1|key2=value2|key3=value3'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Query and load a specified report
      x-accepts: application/json
  /reportlist:
    get:
      description: Allows the user to view the complete list of available, canned
        reports.
      operationId: reportlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of available reports
      x-accepts: application/json
  /reportprepare:
    get:
      description: Allows the user to run reports, in background, with the exception
        of attendance analytics reports.
      operationId: reportprepare
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the report to execute
        explode: true
        in: query
        name: reportname
        required: true
        schema:
          type: string
        style: form
      - description: 'A pipe separated list of the parameters. Example: key1=value1|key2=value2|key3=value3'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The format of the resulting report. Json, pdf, csv, ...
        explode: true
        in: query
        name: repformat
        required: false
        schema:
          type: string
        style: form
      - description: If specified, the result is used to fill the group with the given
          ID
        explode: true
        in: query
        name: fillgroupid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: How to group the records. In the format 'col1+col2|col3+col4
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the group to check (and refresh) before processing
          the report.
        explode: true
        in: query
        name: refreshgroup
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The user friendly text of the applied filters.
        explode: true
        in: query
        name: filtertext
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Queries and loads the specified report, in background.
      x-accepts: application/json
  /memorizedreportlist:
    get:
      description: Allows the user to view the list of all memorized reports that
        they have created.
      operationId: memorizedreportlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: If specified filters the memorized reports by custom name.
        explode: true
        in: query
        name: customname
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of all his memorized reports
      x-accepts: application/json
  /memorizedreportget:
    get:
      description: Allows the user to view an individual memorized report and its
        details.
      operationId: memorizedreportget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the report configuration to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a memorized report
      x-accepts: application/json
  /memorizedreportsave:
    post:
      description: Allows the user to create or edit a memorized report for themselves.
      operationId: memorizedreportsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the report settings to save (leave empty
                    to create a new one).
                  format: uuid
                  type: string
                internalname:
                  description: The internal name of the report.
                  type: string
                name:
                  description: The name of the report.
                  type: string
                customname:
                  description: The custom name of the report.
                  type: string
                customdescription:
                  description: The custom name of the report.
                  type: string
                url:
                  description: The url of the report.
                  type: string
                format:
                  description: The default format of the report.
                  type: string
                params:
                  description: 'A pipe separated list of the parameters. Example:
                    key1=value1|key2=value2|key3=value3.'
                  type: string
                filters:
                  description: A JSON containing the selected filters.
                  type: string
                filtertext:
                  description: The user friendly text of the applied filters.
                  type: string
                groupby:
                  description: How to group the records. In the format 'col1+col2|col3+col4
                  type: string
              required:
              - customname
              - format
              - internalname
              - name
              - token
              - url
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a memorized report
      x-contentType: application/json
      x-accepts: application/json
  /memorizedreportdelete:
    get:
      description: Allows the user to delete a memorized report that they have created.
      operationId: memorizedreportdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the report settings to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete memorized report
      x-accepts: application/json
  /reportscheduledelete:
    get:
      description: Allows the user to delete a scheduled report that they created.
      operationId: reportscheduledelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the report schedule to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a report schedule
      x-accepts: application/json
  /reportscheduleget:
    get:
      description: Allows the user to view the list of reports that they scheduled.
      operationId: reportscheduleget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get a report schedule
      x-accepts: application/json
  /reportschedulelist:
    get:
      description: Allows the user to view a list of the scheduled reports.
      operationId: reportschedulelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of the scheduled reports
      x-accepts: application/json
  /reportschedulesave:
    post:
      description: Allows the user to create or edit a scheduled report.
      operationId: reportschedulesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the schedule save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the schedule.
                  type: string
                details:
                  description: The details of the schedule.
                  type: string
                startdate:
                  description: The start date of the schedule.
                  format: date-time
                  type: string
                enddate:
                  description: The end date of the schedule.
                  type: string
                time:
                  description: The time of the schedule.
                  type: string
                frequency:
                  description: The frequency of the schedule.
                  type: string
                active:
                  description: Specifies whether the schedule is active or not.
                  type: boolean
                reportids:
                  description: A comma separated list containing the ids of the memorized
                    reports to be scheduled.
                  type: string
                daterangepreset:
                  description: The date range preset for this schedule.
                  type: string
                daterangestart:
                  description: The start of the custom date range.
                  format: date-time
                  type: string
                daterangeend:
                  description: The end of the custom date range.
                  format: date-time
                  type: string
                sendtome:
                  description: Specifies wheter the reports should be sent to the
                    current user or not.
                  type: boolean
                sendtoaddress:
                  description: The e-mail address to send the generated reports.
                  type: string
                recipientids:
                  description: A comma separated list containing the ids of the user
                    who should receive the generated reports.
                  type: string
                fromname:
                  description: The sender name for the e-mail.
                  type: string
                replyto:
                  description: The reply to address for the e-mail.
                  type: string
                attachmentpassword:
                  description: The attachments password for the e-mail.
                  type: string
                subject:
                  description: The subject for the e-mail.
                  type: string
                body:
                  description: The body for the e-mail.
                  type: string
              required:
              - active
              - frequency
              - name
              - reportids
              - sendtome
              - time
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a report schedule
      x-contentType: application/json
      x-accepts: application/json
  /reporttagresults:
    get:
      description: Allows the user to use a report to assign or unassign tags.
      operationId: reporttagresults
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the report to execute
        explode: true
        in: query
        name: reportname
        required: true
        schema:
          type: string
        style: form
      - description: Specify whether the specified tags have to be assigned or unassigned.
        explode: true
        in: query
        name: assign
        required: true
        schema:
          type: boolean
        style: form
      - description: The tags to assign (or unassign) to the resulting users in the
          report, in JSON format.
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      - description: 'A pipe separated list of the parameters. Example: key1=value1|key2=value2|key3=value3'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Queries and loads a report in background and assigns (or unassigns)
        the specified tags to (from) the resulting users.
      x-accepts: application/json
  /seminarsave:
    post:
      description: Allows the user to create or edit a event.
      operationId: seminarsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the event to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the event.
                  type: string
                codegroup:
                  description: Optional code to group events.
                  type: string
                code:
                  description: The unique code of the event.
                  type: string
                term:
                  description: The term of the event.
                  type: string
                department:
                  description: The department of the event.
                  type: string
                details:
                  description: The details of the event.
                  type: string
                recurringschedule:
                  description: The recurring schedule of the event, a JSON-formatted
                    array. Each item must contain an action (set/remove) and the schedule
                    properties, as returned by event.get.
                  type: string
                onetimeschedule:
                  description: The one-time schedule of the event, a JSON-formatted
                    array. Each item must contain an action (set/remove) and the schedule
                    properties, as returned by event.get.
                  type: string
              required:
              - code
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a event
      x-contentType: application/json
      x-accepts: application/json
  /seminarget:
    get:
      description: Allows the user to view a event and its details.
      operationId: seminarget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the seminar to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a event
      x-accepts: application/json
  /seminarlist:
    get:
      description: Allows the user to view the full list of events in the past, present,
        and future.
      operationId: seminarlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          type: string
        style: form
      - description: True to return only the event information and not the associated
          schedule, dept, etc. Defaults to false.
        explode: true
        in: query
        name: summaryonly
        required: false
        schema:
          type: boolean
        style: form
      - description: Id of the term to list the events. Null to list all events.
        explode: true
        in: query
        name: termid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of events
      x-accepts: application/json
  /seminardelete:
    get:
      description: Allows the user to delete an existing event.
      operationId: seminardelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the seminar to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an event
      x-accepts: application/json
  /stationlist:
    get:
      description: Allows the user to view the list of sign-in stations, limited to
        the stations in the locations to which they are scoped.
      operationId: stationlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of sign-in stations
      x-accepts: application/json
  /stationdelete:
    get:
      description: Allows the user to delete a sign-in station from the list of existing
        sign-in stations that they can view based on their scope.
      operationId: stationdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the sign-in station to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a sign-in station
      x-accepts: application/json
  /stationget:
    get:
      description: Allows the user to view an individual sign-in station and its details.
      operationId: stationget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a sign-in station
      x-accepts: application/json
  /stationgetinfo:
    get:
      operationId: stationgetinfo
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event, to override the one by schedule.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets a the info to display in the sign-in station by it's ID.
      x-accepts: application/json
  /stationsave:
    post:
      description: Allows the user to create, edit, or install a sign-in station based
        in an area to which they are scoped.
      operationId: stationsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the sign-in station to save (leave empty
                    to create a new one).
                  format: uuid
                  type: string
                name:
                  description: The friendly name of the sign-in station.
                  type: string
                mode:
                  description: The mode of the sign-in station.
                  type: string
                title:
                  description: Title to display in the station.
                  type: string
                instructions:
                  description: Instructions to display in the station.
                  type: string
                passcode:
                  description: The passcode used to change settings in the station,
                    empty text to disable security.
                  type: string
                location:
                  description: Id of the location Title to display in the station.
                  format: uuid
                  type: string
                showids:
                  description: Whether to show the visitor ids in the sign-in station.
                  type: boolean
                shownames:
                  description: Whether to show the visitor names in the sign-in station.
                  type: boolean
                showphotos:
                  description: Whether to show the visitor photos in the sign-in station.
                  type: boolean
                infotimeout:
                  description: Specifies how much time the success or error message
                    is shown after a swipe.
                  format: int32
                  type: integer
                photopixelwidth:
                  description: Specifies the pixel width of the photos in the sign-in
                    station.
                  format: int32
                  type: integer
                allowcreatingvisitors:
                  description: Whether to allow creating visitors from the sign-in
                    station.
                  type: boolean
              required:
              - mode
              - name
              - passcode
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a sign-in station
      x-contentType: application/json
      x-accepts: application/json
  /stationunlock:
    get:
      operationId: stationunlock
      parameters:
      - description: The id of the sign-in station to unlock.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The passcode to unlock the station.
        explode: true
        in: query
        name: passcode
        required: true
        schema:
          type: string
        style: form
      - description: The authentication method. Valid values are 'token' and 'cookie'.
        explode: true
        in: query
        name: method
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Unlocks the sign-in station.
      x-accepts: application/json
  /stationgetlicense:
    get:
      operationId: stationgetlicense
      parameters:
      - description: The id of the sign-in station whose account's license has to
          be retrieved.
        explode: true
        in: query
        name: station
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the current license information
      x-accepts: application/json
  /stationgetcurrentterms:
    get:
      operationId: stationgetcurrentterms
      parameters:
      - description: The id of the sign-in station whose account's current terms have
          to be retrieved.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get all the current terms
      x-accepts: application/json
  /swipesaveanonym:
    post:
      operationId: swipesaveanonym
      requestBody:
        content:
          application/json:
            schema:
              properties:
                station:
                  description: The id of the sign-in station.
                  format: uuid
                  type: string
                client:
                  description: The id of the client where this swipe is being generated.
                  type: string
                time:
                  description: The date and time of the swipe. Now is considered if
                    omitted.
                  format: date-time
                  type: string
                user:
                  description: The user's card number.
                  type: string
                event:
                  description: The id of the event whose swipe has to be saved.
                  format: uuid
                  type: string
                location:
                  description: The id of the location where the swipe has to be saved.
                  format: uuid
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                  format: int32
                  type: integer
              required:
              - station
              - user
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Creates a new swipe from a sign-in station, and if possible, creates
        the attendance log
      x-contentType: application/json
      x-accepts: application/json
  /notificationgetforstation:
    get:
      operationId: notificationgetforstation
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets all public (in station) notifications for the specific user
      x-accepts: application/json
  /userprofilelist:
    get:
      description: Allows the user to view the full list of profiles that they have
        permission to view.
      operationId: userprofilelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the list of user profiles
      x-accepts: application/json
  /userprofileget:
    get:
      description: Allows the user to view individual user profiles and their details,
        provided they have permission to view that profile.
      operationId: userprofileget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the profile question set.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a specific user profile
      x-accepts: application/json
  /userprofilesave:
    post:
      description: Allows the user to create or edit a user profile.
      operationId: userprofilesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the profile question set.
                  format: uuid
                  type: string
                name:
                  description: The name of the profile.
                  type: string
                questions:
                  description: JSON serialized questions.
                  type: string
                canviewown:
                  description: Whether the user can view it's own profile.
                  type: boolean
                caneditown:
                  description: Whether the user can edit it's own profile.
                  type: boolean
                viewroles:
                  description: The roles that can view the answers, in JSON format.
                  type: string
                editroles:
                  description: The roles that can edit the answers, in JSON format.
                  type: string
                appliestoroles:
                  description: The roles this profile questionnaire can be used for,
                    in JSON format.
                  type: string
                scopes:
                  description: The scopes that have access to this questionnaire,
                    in JSON format.
                  type: string
              required:
              - name
              - questions
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit user profile questions
      x-contentType: application/json
      x-accepts: application/json
  /userprofiledelete:
    get:
      description: Allows the user to delete a profile from the list of profiles that
        they have permission to edit.
      operationId: userprofiledelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user profile to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a user profile
      x-accepts: application/json
  /userprofilelistquestions:
    get:
      description: Allows the user to view the list of questions in a profile that
        they have permission to view.
      operationId: userprofilelistquestions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the list of all the available user questions
      x-accepts: application/json
  /userprofilegetallview:
    get:
      description: Allows the user to view a profile for a user, provided they have
        permission to view that user and profile.
      operationId: userprofilegetallview
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to view, or empty for current user.
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Shows the profile for a specific (or current) user, based on each profile
        questionnaire questions.
      x-accepts: application/json
  /userprofilesaveanswers:
    post:
      description: Allows the user to edit a profile for a user, provided they have
        permission to edit that user and profile.
      operationId: userprofilesaveanswers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                userid:
                  description: The id of the user to update, or empty for current
                    user.
                  format: uuid
                  type: string
                answers:
                  description: The json object containing the answers, in the format
                    of {key:value, ...}
                  type: string
              required:
              - answers
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves the profile for a specific (or current) user. Additional security
        applies on a per profile basis.
      x-contentType: application/json
      x-accepts: application/json
  /userprofilepreparestats:
    get:
      description: Allows the user to view the demographic statistics of a user group.
      operationId: userprofilepreparestats
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the group, specified as 'group=...'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the statistics of a user group
      x-accepts: application/json
  /advroleget:
    get:
      description: Allows the user to view a role and its details.
      operationId: advroleget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a role
      x-accepts: application/json
  /advrolelist:
    get:
      operationId: advrolelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: True to include the policies, defaults to false.
        explode: true
        in: query
        name: includepolicies
        required: false
        schema:
          type: boolean
        style: form
      - description: True to include the internal roles too.
        explode: true
        in: query
        name: includeinternal
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by name of the role.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the roles for the current account
      x-accepts: application/json
  /advroledelete:
    get:
      description: Allows the user to delete a role from the list of available roles.
      operationId: advroledelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a role
      x-accepts: application/json
  /advrolesave:
    post:
      description: Allows the user to create or edit a role's permissions.
      operationId: advrolesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the role to save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the role.
                  type: string
                description:
                  description: The description of the role, for admin use.
                  type: string
                policies:
                  description: The policies for the role.
                  type: string
                viewroles:
                  description: CSV list of the roles this role can view.
                  type: string
                editroles:
                  description: CSV list of the roles this role can edit.
                  type: string
              required:
              - description
              - editroles
              - name
              - policies
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a role
      x-contentType: application/json
      x-accepts: application/json
  /advrolelisttemplates:
    get:
      description: Allows the user to view the full list of available role templates.
      operationId: advrolelisttemplates
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of role templates
      x-accepts: application/json
  /advrolelistmaps:
    get:
      operationId: advrolelistmaps
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the role to list the maps.
        explode: true
        in: query
        name: roleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the maps a roles is mapped to
      x-accepts: application/json
  /advrolelistrolesmapped:
    get:
      operationId: advrolelistrolesmapped
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: List only the roles in the specified map.
        explode: true
        in: query
        name: map
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the roles mappings
      x-accepts: application/json
  /advrolesavemapping:
    post:
      description: Allows the user to add a role to a mapped category on the 'Role
        Mapping' page.
      operationId: advrolesavemapping
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                map:
                  description: The map name to save the role.
                  type: string
                roleid:
                  description: The id of the role.
                  format: uuid
                  type: string
              required:
              - map
              - roleid
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a role mapping
      x-contentType: application/json
      x-accepts: application/json
  /advroledeletemapping:
    get:
      description: Allows the user to delete a role from its mapped categories on
        the 'Role Mapping' page.
      operationId: advroledeletemapping
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The map name to save the role.
        explode: true
        in: query
        name: map
        required: true
        schema:
          type: string
        style: form
      - description: The id of the role.
        explode: true
        in: query
        name: roleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a role mapping
      x-accepts: application/json
  /advrolecheckperm:
    get:
      operationId: advrolecheckperm
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the role ids to check
        explode: true
        in: query
        name: roles
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the permissions to check
        explode: true
        in: query
        name: permissions
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Checks the permissions are assigned for the given roles
      x-accepts: application/json
  /advroleaddmissing:
    get:
      operationId: advroleaddmissing
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the role ids to check
        explode: true
        in: query
        name: roles
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the permissions to check
        explode: true
        in: query
        name: permissions
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Adds the missing permissions to a role. Requires access to advrole.save
      x-accepts: application/json
  /advrolesuserlist:
    get:
      operationId: advrolesuserlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The id of the role to filter users by, or empty to return all
          users.
        explode: true
        in: query
        name: roleid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: If is 1 then only the users without a card are returned, otherwise
          all users are returned.
        explode: true
        in: query
        name: onlywithoutcard
        required: false
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List users. Alias to user.list, use that one instead.
      x-accepts: application/json
  /advroleuserupgrade:
    get:
      description: Allow the user to add a role to another user, given that he has
        access to view that other user and edit people with that new role.
      operationId: advroleuserupgrade
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Id of the user to upgrade
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Id of the role to add
        explode: true
        in: query
        name: roleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Upgrade a user to another role (requires permission to edit those roles)
      x-accepts: application/json
  /securityassessuser:
    get:
      operationId: securityassessuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: User ID to list the effective permissions.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Returns the list of permissions for a specific user
      x-accepts: application/json
  /securityassessrole:
    get:
      operationId: securityassessrole
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Role ID to list the effective permissions.
        explode: true
        in: query
        name: roleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Returns the list of permissions for a specific role
      x-accepts: application/json
  /securityassesspermission:
    get:
      operationId: securityassesspermission
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Name of the action or command to get the roles.
        explode: true
        in: query
        name: commandname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Returns the list of users for a specific permission
      x-accepts: application/json
  /securityassessscope:
    get:
      operationId: securityassessscope
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Location ID to list the users with that scope.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Returns the list of users for a specific user
      x-accepts: application/json
  /reportpermissionsbyuser:
    get:
      description: Lists all the users in the system including their corresponding
        permissions.
      operationId: reportpermissionsbyuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: 'A pipe separated list of the parameters. Example: key1=value1|key2=value2|key3=value3'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Permissions by user report
      x-accepts: application/json
  /reportattanalyticsprepare:
    get:
      description: Allows the user to query and load attendance analytics reports.
      operationId: reportattanalyticsprepare
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the report to execute
        explode: true
        in: query
        name: reportname
        required: true
        schema:
          type: string
        style: form
      - description: 'A pipe separated list of the parameters. Example: key1=value1|key2=value2|key3=value3'
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the group to check (and refresh) before processing
          the report.
        explode: true
        in: query
        name: refreshgroup
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Query and load an attendance analytics report
      x-accepts: application/json
  /computerlabgetcomputer:
    get:
      description: Allows the user to search and view an individual computer and its
        details.
      operationId: computerlabgetcomputer
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique device id of the computer to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a computer
      x-accepts: application/json
  /computerlablistcomputers:
    get:
      description: Allows the user to view the list of all computers.
      operationId: computerlablistcomputers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The id of the location whose computers have to be returned.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: If true, only free computers will be returned.
        explode: true
        in: query
        name: freeonly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of computers
      x-accepts: application/json
  /computerlabsavecomputer:
    post:
      description: Allows the user to create or edit a computer.
      operationId: computerlabsavecomputer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the computer save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the computer.
                  type: string
                location:
                  description: The id of the location where the computer is.
                  format: uuid
                  type: string
                macaddress:
                  description: The mac address of the computer.
                  type: string
                ipaddress:
                  description: The ip address of the computer.
                  type: string
                details:
                  description: The details of the computer.
                  type: string
              required:
              - location
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a computer
      x-contentType: application/json
      x-accepts: application/json
  /computerlabdeletecomputer:
    get:
      description: Allows the user to delete an existing computer.
      operationId: computerlabdeletecomputer
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The unique device id of the computer to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a computer
      x-accepts: application/json
  /computerlabliststations:
    get:
      description: Allows the user to view the list of sign-in stations that are available
        for computer labs.
      operationId: computerlabliststations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of sign-in stations available for computer labs.
      x-accepts: application/json
  /computerlabissignedin:
    get:
      operationId: computerlabissignedin
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets whether a user is signed-in or not.
      x-accepts: application/json
  /computerlabsaveswipe:
    post:
      operationId: computerlabsaveswipe
      requestBody:
        content:
          application/json:
            schema:
              properties:
                station:
                  description: The id of the sign-in station.
                  format: uuid
                  type: string
                computer:
                  description: The id of the computer where the user is swiping.
                  format: uuid
                  type: string
                location:
                  description: The id of the location where the swipe has to be saved.
                  format: uuid
                  type: string
                user:
                  description: The user's card number.
                  type: string
                time:
                  description: The date and time of the swipe. Now is considered if
                    omitted.
                  format: date-time
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                  format: int32
                  type: integer
                event:
                  description: The id of the event whose swipe has to be saved.
                  format: uuid
                  type: string
                usage:
                  description: A JSON array containing the applications used during
                    the session. Objects in array must have the following properties
                    Application, StartTime and EndTime.
                  type: string
              required:
              - computer
              - location
              - station
              - user
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save a new swipe from a computer in a computer lab.
      x-contentType: application/json
      x-accepts: application/json
  /computerlablistlabs:
    get:
      description: Allows the user to view the list of all labs.
      operationId: computerlablistlabs
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of the locations that use the Computer Lab add-on
      x-accepts: application/json
  /computerlabgetsettings:
    get:
      description: Loads the settings for a computer lab.
      operationId: computerlabgetsettings
      parameters:
      - description: The id of the computer lab/location.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Loads the settings for a computer lab
      x-accepts: application/json
  /computerlabsavesettings:
    post:
      description: Saves the settings for a computer lab.
      operationId: computerlabsavesettings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the computer lab/location.
                  format: uuid
                  type: string
                logoutautomatically:
                  description: Whether to log out automatically if screen saver is
                    off.
                  type: boolean
                logoutminutesinactivity:
                  description: Minutes after students are signed out if auto log-out
                    is enabled.
                  format: int32
                  type: integer
                notallowsigninmultiplestations:
                  description: Whether to prevent users from logging in in multiple
                    stations.
                  type: boolean
                trackapplicationsused:
                  description: Whether to track applications used during the session.
                  type: boolean
                warnifminutesexceed:
                  description: 'Warn if '
                  format: int32
                  type: integer
              required:
              - id
              - logoutautomatically
              - notallowsigninmultiplestations
              - token
              - trackapplicationsused
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves the settings for a computer lab
      x-contentType: application/json
      x-accepts: application/json
  /deadendrecordinglist:
    get:
      description: Allows the user to view the list of dead ends, provided dead end
        recording is enabled for the account.
      operationId: deadendrecordinglist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the recorded dead ends, if enabled
      x-accepts: application/json
  /deadendrecordinglistcomments:
    get:
      description: Allows the user to view the comments made on dead end sessions.
      operationId: deadendrecordinglistcomments
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The hierarchy key of the record to get the feedback.
        explode: true
        in: query
        name: hierarchykey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the comments for a specific dead end
      x-accepts: application/json
  /deadendrecordingdelete:
    get:
      description: Allows the user to delete a dead end record group.
      operationId: deadendrecordingdelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The hierarchy key of the record to delete.
        explode: true
        in: query
        name: hierarchykey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Deletes a dead-end record group
      x-accepts: application/json
  /deadendrecordingsave:
    post:
      operationId: deadendrecordingsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                station:
                  description: The id of the sign-in station to get.
                  format: uuid
                  type: string
                comment:
                  description: User comment.
                  type: string
                locationid:
                  description: The id of the location.
                  format: uuid
                  type: string
                locationname:
                  description: The name of the location.
                  type: string
                services:
                  description: JSON array of Id, Name, containing the list of services
                    selected
                  type: string
                eventid:
                  description: The id of the event selected.
                  format: uuid
                  type: string
                eventname:
                  description: The name of the event selected.
                  type: string
                staffid:
                  description: The id of the staff member selected.
                  format: uuid
                  type: string
                staffname:
                  description: The name of the staff member selected.
                  type: string
              required:
              - station
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Saves a dead-end record
      x-contentType: application/json
      x-accepts: application/json
  /eventreggetusers:
    get:
      description: Allows the user to view all users registered for an individual
        course.
      operationId: eventreggetusers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The event id to list users.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list to get.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View course registration
      x-accepts: application/json
  /eventregadduser:
    get:
      description: Allows the user to register a user to a course.
      operationId: eventregadduser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register a user to a course for attendance
      x-accepts: application/json
  /eventregaddme:
    get:
      description: Allows the user to make themselves available for individual courses.
      operationId: eventregaddme
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register current user to a course
      x-accepts: application/json
  /eventregremoveuser:
    get:
      description: Allows the user to remove a user from a course's registration.
      operationId: eventregremoveuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a user from a course
      x-accepts: application/json
  /eventregremoveme:
    get:
      description: Allows the user to remove themselves from registration to a course.
      operationId: eventregremoveme
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Unregister current user from a course
      x-accepts: application/json
  /eventreggetevents:
    get:
      description: Allows the user to view all courses a given user is registered
        to, provided they have permission to view that user.
      operationId: eventreggetevents
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The user id to list events.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      - description: The term id to list events.
        explode: true
        in: query
        name: termid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The value used to filter the events by name.
        explode: true
        in: query
        name: namefilter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View course registration by user
      x-accepts: application/json
  /eventreggetmyevents:
    get:
      operationId: eventreggetmyevents
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      - description: The term id to list events.
        explode: true
        in: query
        name: termid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The value used to filter the events by name.
        explode: true
        in: query
        name: namefilter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the event registrations of the current user
      x-accepts: application/json
  /eventregaddusertoall:
    get:
      description: Allows the user to make a staff member available to assist with
        all courses.
      operationId: eventregaddusertoall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register a user to assist with all courses
      x-accepts: application/json
  /eventregaddmetoall:
    get:
      description: Allows the user to make themselves available for all courses.
      operationId: eventregaddmetoall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register current user to all courses
      x-accepts: application/json
  /eventregremoveuserfromall:
    get:
      description: Allows the user to remove a staff member from availability to all
        courses.
      operationId: eventregremoveuserfromall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a user from the registration to all courses
      x-accepts: application/json
  /eventregremovemefromall:
    get:
      description: Allows the user to remove themselves from availability to all courses.
      operationId: eventregremovemefromall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove current user from the registration to all courses
      x-accepts: application/json
  /eventreggetuserstoall:
    get:
      description: Allows the user to view all staff members available for all courses.
      operationId: eventreggetuserstoall
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list to get.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the users that are registered to all courses
      x-accepts: application/json
  /eventreggetusersfromgroup:
    get:
      description: Allows the user the get the staff members registered to a specific
        course group
      operationId: eventreggetusersfromgroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The code group to list users.
        explode: true
        in: query
        name: codegroup
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list to get.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the registrations for a course group
      x-accepts: application/json
  /eventregaddusertogroup:
    get:
      description: Allows the user to make a staff member available for a course group.
      operationId: eventregaddusertogroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The code used to group events.
        explode: true
        in: query
        name: codegroup
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register a user to an course group
      x-accepts: application/json
  /eventregaddmetogroup:
    get:
      description: Allows the user to make themselves available for a course group.
      operationId: eventregaddmetogroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The code used to group events.
        explode: true
        in: query
        name: codegroup
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user has to be registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register current user to a course group
      x-accepts: application/json
  /eventregremoveuserfromgroup:
    get:
      description: Allows the user to remove a staff member from availability to a
        course group.
      operationId: eventregremoveuserfromgroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The code group of the events/courses.
        explode: true
        in: query
        name: codegroup
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a user from a course group
      x-accepts: application/json
  /eventregremovemefromgroup:
    get:
      description: Allows the user to remove themselves from availability to a course
        group.
      operationId: eventregremovemefromgroup
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The code group of the events/courses.
        explode: true
        in: query
        name: codegroup
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove current user from a course group
      x-accepts: application/json
  /eventreggetgroups:
    get:
      description: Allows the user to view the course groups a staff member is available
        for.
      operationId: eventreggetgroups
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The user id to list events.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the course group registrations of a user
      x-accepts: application/json
  /eventreggetmygroups:
    get:
      description: Allows the user to view all his registrations to course groups.
      operationId: eventreggetmygroups
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The name of the list where the user is registered.
        explode: true
        in: query
        name: listname
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all current user registrations to course groups
      x-accepts: application/json
  /eventlistregistered:
    get:
      description: Allows the user to view the courses they are registered to.
      operationId: eventlistregistered
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          type: string
        style: form
      - description: True to return only the event information and not the associated
          schedule, dept, etc. Defaults to false.
        explode: true
        in: query
        name: summaryonly
        required: false
        schema:
          type: boolean
        style: form
      - description: Id of the term to list the events. Null to list all events.
        explode: true
        in: query
        name: termid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of courses I am registered to
      x-accepts: application/json
  /sessionget:
    get:
      description: Allows the user to view a session in order to take attendance.
      operationId: sessionget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the session to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a session
      x-accepts: application/json
  /sessionbulkupdate:
    get:
      description: Allows the user to bulk update event sessions by setting multiple
        attendees as present, absent, tardy, etc.
      operationId: sessionbulkupdate
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to bulk update.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: A JSON-formatted array, with all the sessions to update, create
          or delete. Each item must contain an action (set/remove) and the session
          properties.
        explode: true
        in: query
        name: sessions
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Bulk update event sessions
      x-accepts: application/json
  /sessiongetschedule:
    get:
      operationId: sessiongetschedule
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The day to return. It will also return the whole week for that
          day.
        explode: true
        in: query
        name: day
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the attendee to get the schedule.
        explode: true
        in: query
        name: attendee
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location to get the schedule.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the instructor to get the schedule.
        explode: true
        in: query
        name: instructor
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the schedule for a location, instructor or attendees
      x-accepts: application/json
  /sessionlist:
    get:
      operationId: sessionlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date to filter the sessions
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date to filter the sessions.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets all future sessions of the current semester
      x-accepts: application/json
  /sessionattendanceloglistevent:
    get:
      description: Allows the user to view the attendance information for an entire
        class
      operationId: sessionattendanceloglistevent
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event whose attendance has to be returned.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the attendance information of an entire class
      x-accepts: application/json
  /sessionattendanceloglistsummary:
    get:
      description: Allows the user to view the attendance summary for a given class
        and/or attendee.
      operationId: sessionattendanceloglistsummary
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event whose attendance has to be returned.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the attendee whose attendance has to be returned.
        explode: true
        in: query
        name: attendeeid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the group whose attendance has to be returned.
        explode: true
        in: query
        name: groupid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start date to filter (beginning of time by default).
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: The end date to filter (today by default).
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the attendance summary for a class and/or a attendee
      x-accepts: application/json
  /sessionattendancelogmylistsummary:
    get:
      description: Allows the user to view their own attendance summary.
      operationId: sessionattendancelogmylistsummary
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event whose attendance has to be returned.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start date to filter (beginning of time by default).
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: The end date to filter (today by default).
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View my attendance summary
      x-accepts: application/json
  /sessionattendancelogaddnote:
    get:
      description: Allows the user to add a note to a class attendance log.
      operationId: sessionattendancelogaddnote
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The text of the note to add.
        explode: true
        in: query
        name: text
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add a note to a class attendance log
      x-accepts: application/json
  /sessionattendancelogget:
    get:
      description: Allows the user to view an individual class attendance log and
        its details.
      operationId: sessionattendancelogget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the attendance log to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 400.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a class attendance log
      x-accepts: application/json
  /sessionattendanceloggetuser:
    get:
      description: Allows the user to view the attendance for a specified student.
      operationId: sessionattendanceloggetuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The id of the attendee to get statistic for.
        explode: true
        in: query
        name: attendee
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event whose attendee statistics have to be returned.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the class session attendance information for a specific user
      x-accepts: application/json
  /sessionattendanceloglist:
    get:
      description: Allows the user to view the full list of logs from a specified
        session
      operationId: sessionattendanceloglist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the session whose attendees logs have to be returned.
        explode: true
        in: query
        name: session
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View attendance logs of the specified session
      x-accepts: application/json
  /sessionattendancelogsave:
    post:
      description: Allows the user to create or edit a class attendance log.
      operationId: sessionattendancelogsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the att log to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                date:
                  description: The sign-in date and time in ISO format, if not specified
                    the session date and time will be used.
                  format: date-time
                  type: string
                session:
                  description: The id of the session where the user signed in.
                  format: uuid
                  type: string
                user:
                  description: The id of the attendee. If null then all the event
                    session will be updated.
                  format: uuid
                  type: string
                status:
                  description: The attendance status of the attendee in this session.
                  type: string
                notes:
                  description: The text of the note to add.
                  type: string
                totalminutes:
                  description: The total time, in minutes, the attendees was in.
                  format: int32
                  type: integer
                logdetails:
                  description: A JSON-serialized array of details, containing Id,
                    Time and Type.
                  type: string
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a class attendance log
      x-contentType: application/json
      x-accepts: application/json
  /sessionattendancelogsaveswipe:
    post:
      description: Allows the user to create or edit a class attendance log swipe,
        which are the details of time in or out.
      operationId: sessionattendancelogsaveswipe
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the att log to update.
                  format: uuid
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                  format: int32
                  type: integer
              required:
              - id
              - type
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a class attendance log swipe
      x-contentType: application/json
      x-accepts: application/json
  /sessionswipeget:
    get:
      description: Allows the user to view an individual class attendance swipe.
      operationId: sessionswipeget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the swipe to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a class attendance swipe
      x-accepts: application/json
  /sessionswipelistunresolved:
    get:
      description: Allows the user to view all unresolved swipes.
      operationId: sessionswipelistunresolved
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of unresolved swipes
      x-accepts: application/json
  /sessionswiperesolve:
    get:
      description: Allows the user to resolve an unresolved swipe, which would result
        in the creation of an attendance log.
      operationId: sessionswiperesolve
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the swipe to resolve.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the session whose swipe has to be saved.
        explode: true
        in: query
        name: session
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the user who signed-in.
        explode: true
        in: query
        name: user
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Resolve a swipe and create the corresponding attendance log
      x-accepts: application/json
  /sessionswipesave:
    post:
      description: Allows the user to create a new swipe, which would usually result
        in an attendance log.
      operationId: sessionswipesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                time:
                  description: The date and time of the swipe. Now is considered if
                    omitted.
                  format: date-time
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                  format: int32
                  type: integer
                cardnumber:
                  description: The number of the swipped card, used if the id was
                    not specified.
                  type: string
                session:
                  description: The id of the session whose swipe has to be saved.
                  format: uuid
                  type: string
                location:
                  description: The id of the location whose swipe has to be saved.
                  format: uuid
                  type: string
                client:
                  description: The unique id of the client whose swipe has to be saved.
                  type: string
                clientname:
                  description: The name of the client whose swipe has to be saved.
                  type: string
                metadata:
                  description: The swipe's metadata in JSON format.
                  type: string
                photosize:
                  description: The swiping user's photo size.
                  format: int32
                  type: integer
              required:
              - client
              - token
              - type
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Creates a new swipe, and if possible, creates the attendance log
      x-contentType: application/json
      x-accepts: application/json
  /sessionswipedelete:
    get:
      description: Allows the user to delete an existing class attendance swipe.
      operationId: sessionswipedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the session swipe to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a session swipe
      x-accepts: application/json
  /eventchecksessions:
    get:
      description: Allows the user to edit event sessions.
      operationId: eventchecksessions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to check.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: True to automatically fix the invalid sessions.
        explode: true
        in: query
        name: autorepair
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Edit an event's sessions according to their schedule
      x-accepts: application/json
  /sessionreglistsessions:
    get:
      description: Allows the user to view all the sessions available for a recurring
        event.
      operationId: sessionreglistsessions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The event id to list sessions.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date of the session to find.
        explode: true
        in: query
        name: sessiondate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: List the sessions available for a specific event
      x-accepts: application/json
  /sessionreglistupcoming:
    get:
      description: Allows the user to view the full list of upcoming events.
      operationId: sessionreglistupcoming
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Only sessions in the week of the specified date will be returned.
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of upcoming event sessions
      x-accepts: application/json
  /sessionreglistupcomingevent:
    get:
      description: Allows the user to view the upcoming recurring sessions of a specified
        event.
      operationId: sessionreglistupcomingevent
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Start date to filter the returned sessions.
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the event whose sessions will be returned
        explode: true
        in: query
        name: event
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of upcoming sessions of a particular event
      x-accepts: application/json
  /sessionreggetusers:
    get:
      description: Allows the user to view the registration for a specified event
        session.
      operationId: sessionreggetusers
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The event id to list sessions.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date of the session to find.
        explode: true
        in: query
        name: sessiondate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the registrations for a specific session
      x-accepts: application/json
  /sessionregadduser:
    get:
      description: Allows the user to register another user for an upcoming event.
      operationId: sessionregadduser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time when the session starts.
        explode: true
        in: query
        name: sessiondate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register users for events
      x-accepts: application/json
  /sessionregaddcurrentuser:
    get:
      description: Allows the user to register themselves for an event.
      operationId: sessionregaddcurrentuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time when the session starts.
        explode: true
        in: query
        name: sessiondate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Register current user to an event session
      x-accepts: application/json
  /sessionregremoveuser:
    get:
      description: Allows the user to un-register another user from an event.
      operationId: sessionregremoveuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time when the session starts.
        explode: true
        in: query
        name: sessiondate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Removes a user from an event session
      x-accepts: application/json
  /sessionregremovecurrentuser:
    get:
      description: Allows the user to un-register themselves from an event.
      operationId: sessionregremovecurrentuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event.
        explode: true
        in: query
        name: eventid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time when the session starts.
        explode: true
        in: query
        name: sessiondate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Unregister current user from an event session
      x-accepts: application/json
  /sessionreggetsessions:
    get:
      description: Allows the user to view the session registrations for a specified
        user, provided they have the ability to view that user.
      operationId: sessionreggetsessions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The user id to list sessions.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists the registrations for a specific user
      x-accepts: application/json
  /sessionreggetmysessions:
    get:
      operationId: sessionreggetmysessions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Start date to filter the sessions.
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the sessions the logged user is registered to
      x-accepts: application/json
  /sessionreggetsettings:
    get:
      description: Allows the user to view a event's session registration settings.
      operationId: sessionreggetsettings
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location to save settings.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event to save settings.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time when the session starts.
        explode: true
        in: query
        name: sessiondate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: True to get the location/event/session specific settings without
          looking for the more global settings.
        explode: true
        in: query
        name: noinherit
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the settings for session registration
      x-accepts: application/json
  /sessionregsavesettings:
    post:
      description: Allows the user to save the settings for an event.
      operationId: sessionregsavesettings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                locationid:
                  description: The id of the location to save settings.
                  format: uuid
                  type: string
                eventid:
                  description: The id of the event to save settings.
                  format: uuid
                  type: string
                sessiondate:
                  description: The date and time when the session starts.
                  format: date-time
                  type: string
                enabled:
                  description: Whether the registration is enabled or not.
                  type: boolean
                capacity:
                  description: The capacity of the class.
                  format: int32
                  type: integer
                trainerid:
                  description: The trainer ID.
                  format: uuid
                  type: string
                showupcomingdays:
                  description: '# of days to show upcoming sessions'
                  format: int32
                  type: integer
                registernolessdurationbasis:
                  description: Specifies the time unit of measurement to restrict
                    the period when attendees can register to sessions (no less than
                    0 = Minutes, 1 = Hours, 2 = Days, 3 = Weeks).
                  format: int32
                  type: integer
                registernolessduration:
                  description: Specifies the duration of the period when attendees
                    can register to sessions (no less than the specified magnitude).
                  format: int32
                  type: integer
                registernomoredurationbasis:
                  description: Specifies the time unit of measurement to restrict
                    the period when attendees can register to sessions (no more than
                    0 = Minutes, 1 = Hours, 2 = Days, 3 = Weeks).
                  format: int32
                  type: integer
                registernomoreduration:
                  description: Specifies the duration of the period when attendees
                    can register to sessions (no more than the specified magnitude).
                  format: int32
                  type: integer
                unregisternolessdurationbasis:
                  description: Specifies the time unit of measurement to restrict
                    the period when attendees can unregister from sessions (no less
                    than 0 = Minutes, 1 = Hours, 2 = Days, 3 = Weeks).
                  format: int32
                  type: integer
                unregisternolessduration:
                  description: Specifies the duration of the period when attendees
                    can unregister from sessions (no less than the specified magnitude).
                  format: int32
                  type: integer
                remindhours:
                  description: Specifies the hours before the event when the reminder
                    is sent.
                  format: int32
                  type: integer
              required:
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save the settings for an event's session registration
      x-contentType: application/json
      x-accepts: application/json
  /staffavailgetusersforservice:
    get:
      description: Allows the user to view all staff members who are available for
        a service.
      operationId: staffavailgetusersforservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The service id to list users.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of staff members that are available for a specific service
      x-accepts: application/json
  /staffavailaddusertoservice:
    get:
      description: Allows the user to make a staff member available for a service.
      operationId: staffavailaddusertoservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the service.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Associate a staff member to a service
      x-accepts: application/json
  /staffavailaddmetoservice:
    get:
      description: Allows the user to associate themselves to a service, provided
        they have a staff role.
      operationId: staffavailaddmetoservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Associate current user to a service
      x-accepts: application/json
  /staffavailremoveuserfromservice:
    get:
      description: Allows the user to remove a staff member's service availability.
      operationId: staffavailremoveuserfromservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the service.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a staff member from a service
      x-accepts: application/json
  /staffavailremovemefromservice:
    get:
      description: Allows the user to disassociate themselves from a service, provided
        they have a staff role.
      operationId: staffavailremovemefromservice
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove current user from a service
      x-accepts: application/json
  /staffavailgetservices:
    get:
      description: Allows the user to view the list of services that a staff member
        is available for.
      operationId: staffavailgetservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The user id to list services.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of services that a staff member is available for
      x-accepts: application/json
  /staffavailgetmyservices:
    get:
      description: Allows the user to view a list of services that they are associated
        with.
      operationId: staffavailgetmyservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the services the current user is available for
      x-accepts: application/json
  /staffavaillisttypes:
    get:
      operationId: staffavaillisttypes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the availability types
      x-accepts: application/json
  /staffavailsetavailability:
    get:
      description: Allows the user to set a staff member as available for walk ins,
        appointments, or both.
      operationId: staffavailsetavailability
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user whose specific availability has to be set.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Specific availability to set.
        explode: true
        in: query
        name: availablefor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Make a staff member available for a specific availability type
      x-accepts: application/json
  /staffavailsetmyavailability:
    get:
      description: Allows the user to make themselves available for walk ins, appointments,
        or both.
      operationId: staffavailsetmyavailability
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Specific availability to set.
        explode: true
        in: query
        name: availablefor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Change current user's availability type
      x-accepts: application/json
  /staffavailaddusertoallservices:
    get:
      description: Allows the user to make a staff member available for all services.
      operationId: staffavailaddusertoallservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to add.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Associate a staff member to all services
      x-accepts: application/json
  /staffavailaddmetoallservices:
    get:
      description: Allows the user to associate themselves to all services, provided
        they have a staff role.
      operationId: staffavailaddmetoallservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Associate current user to all services
      x-accepts: application/json
  /staffavailremoveuserfromallservices:
    get:
      description: Allows the user to remove a staff member's availability to all
        services.
      operationId: staffavailremoveuserfromallservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to remove.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Removes a staff member from the registration to all services
      x-accepts: application/json
  /staffavailremovemefromallservices:
    get:
      description: Allows the user to disassociate themselves from all services, provided
        they have a staff role.
      operationId: staffavailremovemefromallservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove current user from all services
      x-accepts: application/json
  /schedulegetstaff:
    get:
      description: Allows the user to view the schedule shifts for user roles that
        the user has permission to access.
      operationId: schedulegetstaff
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to get info.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of schedule information of a specified person
      x-accepts: application/json
  /schedulegetstaffmine:
    get:
      description: Allows the user to view their own schedule.
      operationId: schedulegetstaffmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View current user's schedule information
      x-accepts: application/json
  /schedulemyofftimes:
    get:
      description: Allows the user to view their own schedule exceptions.
      operationId: schedulemyofftimes
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: If true the deleted offtimes are also returned.
        explode: true
        in: query
        name: includedeleted
        required: false
        schema:
          type: boolean
        style: form
      - description: If true then only upcoming offtimes are returned.
        explode: true
        in: query
        name: onlyupcoming
        required: false
        schema:
          type: boolean
        style: form
      - description: If specified, only offtimes modified after the specified date
          will be returned.
        explode: true
        in: query
        name: modifiedafter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View current user's schedule exceptions
      x-accepts: application/json
  /scheduleget:
    get:
      description: Allows the user to view the details of schedule shifts for any
        user role that the user has permission to view.
      operationId: scheduleget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule.
        explode: true
        in: query
        name: scheduleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of a specific schedule slot
      x-accepts: application/json
  /schedulegetmine:
    get:
      description: Allows the user to view the details of their own schedule shifts.
      operationId: schedulegetmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule.
        explode: true
        in: query
        name: scheduleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a specific schedule block, for current user
      x-accepts: application/json
  /schedulesave:
    post:
      description: Allows the user to create or edit a schedule slot of another user.
      operationId: schedulesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                scheduleid:
                  description: The id of the schedule.
                  format: uuid
                  type: string
                userid:
                  description: The id of the user which schedule belongs to.
                  format: uuid
                  type: string
                dayofweek:
                  description: The day of the week, for regular schedules.
                  format: int32
                  type: integer
                start:
                  description: Start date and time.
                  format: date-time
                  type: string
                end:
                  description: End date and time.
                  format: date-time
                  type: string
                locationid:
                  description: The id of the location where the user will be.
                  format: uuid
                  type: string
                isavailable:
                  description: Whether the user will be available.
                  type: boolean
                availablefor:
                  description: Specifies what the user is available for.
                  type: string
                maxattendees:
                  description: The max number of attendees, if available.
                  format: int32
                  type: integer
                allowoverlapping:
                  description: Specifies whether the creation of overlapping schedule
                    blocks is allowed
                  type: boolean
              required:
              - end
              - isavailable
              - start
              - token
              - userid
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a schedule slot
      x-contentType: application/json
      x-accepts: application/json
  /schedulesavemine:
    post:
      description: Allows the user to create or edit a schedule shift in their own
        availability.
      operationId: schedulesavemine
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                scheduleid:
                  description: The id of the schedule.
                  format: uuid
                  type: string
                dayofweek:
                  description: The day of the week, for regular schedules.
                  format: int32
                  type: integer
                start:
                  description: Start date and time.
                  format: date-time
                  type: string
                end:
                  description: End date and time.
                  format: date-time
                  type: string
                locationid:
                  description: The id of the location where the user will be.
                  format: uuid
                  type: string
                isavailable:
                  description: Whether the user will be available.
                  type: boolean
                availablefor:
                  description: Specifies what the user is available for.
                  type: string
                maxattendees:
                  description: The max number of attendees, if available.
                  format: int32
                  type: integer
                allowoverlapping:
                  description: Specifies whether the creation of overlapping schedule
                    blocks is allowed
                  type: boolean
              required:
              - end
              - isavailable
              - start
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a block in current user's schedule
      x-contentType: application/json
      x-accepts: application/json
  /scheduleenable:
    get:
      description: Allows the user to enable or disable a schedule for another user.
      operationId: scheduleenable
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the user to enable or disable the schedule.
        explode: true
        in: query
        name: userid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: True to enable schedules, false to disable.
        explode: true
        in: query
        name: enable
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Enable or disable the schedule for a specific person
      x-accepts: application/json
  /scheduleenablemine:
    get:
      description: Allows the user to enable or disable a schedule for himself.
      operationId: scheduleenablemine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: True to enable schedules, false to disable.
        explode: true
        in: query
        name: enable
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Enable or disable current user's schedule
      x-accepts: application/json
  /scheduledelete:
    get:
      description: Allows the user to delete a schedule slot from another user.
      operationId: scheduledelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule.
        explode: true
        in: query
        name: scheduleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a schedule slot
      x-accepts: application/json
  /scheduledeletemine:
    get:
      description: Allows the user to delete a schedule block from their own availability.
      operationId: scheduledeletemine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule.
        explode: true
        in: query
        name: scheduleid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a specific block from a user's own schedule
      x-accepts: application/json
  /schedulefindslots:
    get:
      description: Allows users to search available slots when making appointments.
      operationId: schedulefindslots
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the staff to filter by.
        explode: true
        in: query
        name: staffid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: CSV list of the service Ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the service to filter by.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The specific availability type to filter by.
        explode: true
        in: query
        name: availablefor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search available schedule slots by service, event, date and/or staff
      x-accepts: application/json
  /schedulefindallstaffslots:
    get:
      description: Allows users to search available slots.
      operationId: schedulefindallstaffslots
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the staff to filter by.
        explode: true
        in: query
        name: staffid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: CSV list of the service Ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location to filter by.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: CSV list of the staff member role ids to filter by.
        explode: true
        in: query
        name: staffroleids
        required: false
        schema:
          type: string
        style: form
      - description: The specific availability type to filter by.
        explode: true
        in: query
        name: availablefor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search available schedule slots by service, event, date
      x-accepts: application/json
  /schedulefindstaffavail:
    get:
      description: Allows users to search available staff.
      operationId: schedulefindstaffavail
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the service ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the service to filter by.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: CSV list of the staff member role ids to filter by.
        explode: true
        in: query
        name: staffroleids
        required: false
        schema:
          type: string
        style: form
      - description: Filter slots by a specific availability type.
        explode: true
        in: query
        name: availablefor
        required: false
        schema:
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search available staff members slots by service, event, and/or date
      x-accepts: application/json
  /advancedstationgetinfo:
    get:
      operationId: advancedstationgetinfo
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the event (or session), to override the scheduled one.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the info to display in the sign-in station by it's ID.
      x-accepts: application/json
  /advancedstationgetlocations:
    get:
      operationId: advancedstationgetlocations
      parameters:
      - description: The id of the sign-in station whose locations have to be returned.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the locations available in a sign-in station.
      x-accepts: application/json
  /advancedstationgetroles:
    get:
      operationId: advancedstationgetroles
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies how the user is signing-in.
        explode: true
        in: query
        name: signinrole
        required: true
        schema:
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the user roles of the user trying to sign-in.
      x-accepts: application/json
  /advancedstationgetservices:
    get:
      operationId: advancedstationgetservices
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location the student picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the services available for a specific location.
      x-accepts: application/json
  /advancedstationgetevents:
    get:
      operationId: advancedstationgetevents
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location the student picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the courses available for a specific location and a specific student.
      x-accepts: application/json
  /advancedstationissignedin:
    get:
      operationId: advancedstationissignedin
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time of the swipe.
        explode: true
        in: query
        name: time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets whether a user is signed-in or not.
      x-accepts: application/json
  /advancedstationgetstaff:
    get:
      operationId: advancedstationgetstaff
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location the student picked.
        explode: true
        in: query
        name: locationid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The list of services selected by the user, in JSON format.
        explode: true
        in: query
        name: services
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the event selected.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the staff/tutors available for a specific location, course and
        service.
      x-accepts: application/json
  /advancedstationgetlogstaff:
    get:
      operationId: advancedstationgetlogstaff
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the attendance log to filter the staff members.
        explode: true
        in: query
        name: attendancelog
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the staff/tutors available filtered by the location, course and
        services of the given attendance log.
      x-accepts: application/json
  /advancedstationcheckuserrole:
    get:
      operationId: advancedstationcheckuserrole
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check whether the user is a staff member, an attendee or both.
      x-accepts: application/json
  /advancedstationcheckunknownuser:
    get:
      operationId: advancedstationcheckunknownuser
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check whether the user is known by the system.
      x-accepts: application/json
  /advancedstationcreateuser:
    get:
      operationId: advancedstationcreateuser
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user to create.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The first name of the user to create.
        explode: true
        in: query
        name: firstname
        required: true
        schema:
          type: string
        style: form
      - description: The middle name of the user to create.
        explode: true
        in: query
        name: middlename
        required: false
        schema:
          type: string
        style: form
      - description: The last name of the user to create.
        explode: true
        in: query
        name: lastname
        required: true
        schema:
          type: string
        style: form
      - description: The email of the user to create.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Creates a user via a sign-in station.
      x-accepts: application/json
  /stationgetlocationsettings:
    get:
      description: Allows the user to view the location settings of a sign-in station.
      operationId: stationgetlocationsettings
      parameters:
      - description: The id of the location whose station settings have to be returned.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the sign-in station settings of a specified location
      x-accepts: application/json
  /stationsavemine:
    post:
      description: Allows the user to create a class attendance sign-in station for
        a course for which they are available as staff.
      operationId: stationsavemine
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                mode:
                  description: The mode of the sign-in station.
                  type: string
                instructions:
                  description: Instructions to display in the station.
                  type: string
                passcode:
                  description: The passcode used to change settings in the station,
                    empty text to disable security.
                  type: string
                shownames:
                  description: Whether to show the visitor names in the sign-in station.
                  type: boolean
                showphotos:
                  description: Whether to show the visitor photos in the sign-in station.
                  type: boolean
              required:
              - mode
              - passcode
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a class attendance sign-in station for myself
      x-contentType: application/json
      x-accepts: application/json
  /sessionswipesaveanonym:
    post:
      operationId: sessionswipesaveanonym
      requestBody:
        content:
          application/json:
            schema:
              properties:
                station:
                  description: The id of the sign-in station.
                  format: uuid
                  type: string
                time:
                  description: The date and time of the swipe. Now is considered if
                    omitted.
                  format: date-time
                  type: string
                user:
                  description: The user's card number.
                  type: string
                event:
                  description: The id of the session whose swipe has to be saved.
                  format: uuid
                  type: string
                type:
                  description: Specifies the attendance type (0 = Sign-In, 1 = Sign-Out).
                  format: int32
                  type: integer
              required:
              - station
              - user
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Creates a new swipe from a sign-in station, and if possible, creates
        the attendance log
      x-contentType: application/json
      x-accepts: application/json
  /attendancelogliststaff:
    get:
      operationId: attendancelogliststaff
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: 'Filter the logs, valid values are: invalid, not-signed-in, not-signed-out,
          stayed-less-than-required, out-of-event, valid.'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Gets the attendance logs that the current user is involved in as staff
      x-accepts: application/json
  /appointmentget:
    get:
      description: Allows the user to view an individual appointment and its details.
      operationId: appointmentget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of an appointment
      x-accepts: application/json
  /appointmentgetcurrent:
    get:
      operationId: appointmentgetcurrent
      parameters:
      - description: The id of the sign-in station to get.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The card of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location where the user wants to sign-in.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the current appointments for the user that is about to sign-in
        via the specified sign-in station.
      x-accepts: application/json
  /appointmentlist:
    get:
      description: Allows the user to view all upcoming appointments for the location
        or locations they are scoped to.
      operationId: appointmentlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The start date of the period to filter the appointments.
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date of the period to filter the appointments.
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The attendee id to filter the appointments.
        explode: true
        in: query
        name: userid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of appointments
      x-accepts: application/json
  /appointmentcheckisvalid:
    get:
      operationId: appointmentcheckisvalid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to check.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies whether the check is for a new appointment or an existing
          one.
        explode: true
        in: query
        name: editing
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check if an appointment is valid or not
      x-accepts: application/json
  /appointmentsave:
    post:
      description: Allows the user to schedule an appointment within the rules of
        the location and the availability of staff members.
      operationId: appointmentsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the appointment to save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                term:
                  description: The id of the term when the appointment takes place.
                  format: uuid
                  type: string
                attendee:
                  description: The id of the attendee involved in the appointment.
                  format: uuid
                  type: string
                staff:
                  description: The id of the staff member involved in the appointment.
                  format: uuid
                  type: string
                location:
                  description: The id of the location where the appointment will take
                    place.
                  format: uuid
                  type: string
                start:
                  description: The appointment's start date & time.
                  format: date-time
                  type: string
                end:
                  description: The appointment's end date & time.
                  format: date-time
                  type: string
                event:
                  description: The id of the event of the appointment.
                  format: uuid
                  type: string
                services:
                  description: Comma-separated string containing the ids of the services
                    of the appointment.
                  type: string
                notes:
                  description: The notes of the appointment.
                  type: string
              required:
              - attendee
              - end
              - location
              - staff
              - start
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Schedule an appointment
      x-contentType: application/json
      x-accepts: application/json
  /appointmenteditanyway:
    get:
      description: Allows the user to edit an existing appointment even if it breaks
        the rules or settings of that location.
      operationId: appointmenteditanyway
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to edit.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the term when the appointment takes place.
        explode: true
        in: query
        name: term
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the attendee involved in the appointment.
        explode: true
        in: query
        name: attendee
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the staff member involved in the appointment.
        explode: true
        in: query
        name: staff
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location where the appointment will take place.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The appointment's start date & time.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The appointment's end date & time.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the event of the appointment.
        explode: true
        in: query
        name: event
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Comma-separated string containing the ids of the services of
          the appointment.
        explode: true
        in: query
        name: services
        required: false
        schema:
          type: string
        style: form
      - description: The notes of the appointment.
        explode: true
        in: query
        name: notes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Edit an appointment even if it breaks activated rules
      x-accepts: application/json
  /appointmentcancel:
    get:
      description: Allows the user to cancel an appointment.
      operationId: appointmentcancel
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to cancel.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Cancel an appointment
      x-accepts: application/json
  /appointmentvoid:
    get:
      description: Allows the user to void an appointment that has been marked as
        a no-show so that it does not count against the student's restrictions.
      operationId: appointmentvoid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to cancel.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Void an appointment
      x-accepts: application/json
  /appointmentrestore:
    get:
      description: Allows the user to restore a canceled appointment.
      operationId: appointmentrestore
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to restore.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Restore an appointment
      x-accepts: application/json
  /appointmentsetasvalid:
    get:
      description: Allows the user to schedule an appointment even if it breaks the
        rules or settings of that location or if it goes against the availability
        of the staff member.
      operationId: appointmentsetasvalid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to set as valid.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Schedule an appointment even if it breaks activated rules
      x-accepts: application/json
  /appointmentrestoreanyway:
    get:
      description: Allows the user to restore a canceled appointment even if that
        appointment breaks the rules or settings of that location.
      operationId: appointmentrestoreanyway
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to restore.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Restore an appointment even if it breaks activated rules
      x-accepts: application/json
  /appointmenteditpresence:
    get:
      description: Allows the user to edit the no-show status of an appointment by
        marking it as Voided, Restored, or as a Show.
      operationId: appointmenteditpresence
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to edit its presence.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Specifies whether the attendee was showed-up or not in the appointment.
        explode: true
        in: query
        name: showedup
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Edit the no-show status of an appointment
      x-accepts: application/json
  /appointmentsuggestlocations:
    get:
      description: Allows the user to view suggestions for the most popular locations
        in which to make appointments
      operationId: appointmentsuggestlocations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the locations with most appointments
      x-accepts: application/json
  /appointmentsuggestservices:
    get:
      description: Allows the user to view suggestions for the most popular services
        for which to make appointments.
      operationId: appointmentsuggestservices
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the services with most appointments
      x-accepts: application/json
  /appointmentfindstaff:
    get:
      description: Allows the user to view staff availability when creating an appointment.
      operationId: appointmentfindstaff
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: CSV list of the service ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The id of the service to filter by.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Finds staff available by service, date, event, etc
      x-accepts: application/json
  /appointmentfindslots:
    get:
      description: Allows the user to view available appointment slots when creating
        an appointment.
      operationId: appointmentfindslots
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the staff to filter by.
        explode: true
        in: query
        name: staffid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: CSV list of the service Ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the service to filter by.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Finds available slots filtered by service, date, staff, etc
      x-accepts: application/json
  /appointmentfindallstaffslots:
    get:
      description: Allows the user to view available appointment slots when creating
        an appointment.
      operationId: appointmentfindallstaffslots
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The start time of the range to look for slots.
        explode: true
        in: query
        name: starttime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end time of the range to look for slots.
        explode: true
        in: query
        name: endtime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: CSV list of the service Ids to filter by.
        explode: true
        in: query
        name: serviceids
        required: true
        schema:
          type: string
        style: form
      - description: The id of the event to filter by.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the service to filter by.
        explode: true
        in: query
        name: locationid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Finds all staff available slots filtered by service, date, etc
      x-accepts: application/json
  /appointmentgetlocations:
    get:
      description: Allows the user to search for appointment availability by location
        or service.
      operationId: appointmentgetlocations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to get its locations.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Find locations where a service is available
      x-accepts: application/json
  /appointmentlistupcoming:
    get:
      description: Allows the user to view all of their own upcoming appointments.
      operationId: appointmentlistupcoming
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: If specified, only appointments that start after the specified
          date will be returned.
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If specified, only appointments modified after the specified
          date will be returned.
        explode: true
        in: query
        name: modifiedafter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Search and view details of all my upcoming appointments
      x-accepts: application/json
  /appointmentlistmine:
    get:
      operationId: appointmentlistmine
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: If specified, only appointments that start after the specified
          date will be returned.
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: If specified, only appointments modified after the specified
          date will be returned.
        explode: true
        in: query
        name: modifiedafter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all my upcoming appointments
      x-accepts: application/json
  /appointmentrescheduleoutlook:
    get:
      description: Allows the user to reschedule, edit, or cancel appointments via
        MS Outlook if the user has the AccuCampus add-on installed on their Outlook.
      operationId: appointmentrescheduleoutlook
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the appointment to edit.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The appointment's start date & time.
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The appointment's end date & time.
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Reschedule an appointment from MS Outlook.
      x-accepts: application/json
  /scheduleintegrationsetid:
    get:
      operationId: scheduleintegrationsetid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the schedule block / appointment.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The 3rd party ID to set.
        explode: true
        in: query
        name: thirdpartyid
        required: true
        schema:
          type: string
        style: form
      - description: The 3rd party master ID to set (useful to handle recurring items).
        explode: true
        in: query
        name: thirdpartymasterid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Set a 3rd party ID on a specific schedule item
      x-accepts: application/json
  /scheduleintegrationsaveitem:
    post:
      operationId: scheduleintegrationsaveitem
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                thirdpartyid:
                  description: The third party id to search the schedule block / appointment.
                  type: string
                thirdpartymasterid:
                  description: The 3rd party master ID to set (useful to handle recurring
                    items).
                  type: string
                start:
                  description: The start date and time of the schedule item.
                  format: date-time
                  type: string
                end:
                  description: The end date and time of the schedule item.
                  format: date-time
                  type: string
              required:
              - end
              - start
              - thirdpartyid
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Save a schedule item looking up by a third party ID
      x-contentType: application/json
      x-accepts: application/json
  /scheduleintegrationgetitem:
    get:
      operationId: scheduleintegrationgetitem
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The third party id to search for the schedule item.
        explode: true
        in: query
        name: thirdpartyid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get a schedule item looking up by a third party ID
      x-accepts: application/json
  /scheduleintegrationdeleteitem:
    get:
      operationId: scheduleintegrationdeleteitem
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The third party id to search the schedule block / appointment.
        explode: true
        in: query
        name: thirdpartyid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a schedule item looking up by a third party ID
      x-accepts: application/json
  /scheduleintegrationdeleteitemsbymasterid:
    get:
      operationId: scheduleintegrationdeleteitemsbymasterid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The third party master id to search the schedule items.
        explode: true
        in: query
        name: thirdpartymasterid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete multiple schedule items looking up by a third party master ID
      x-accepts: application/json
  /attendancerestrictionget:
    get:
      description: Allows the user to view an individual attendance restriction and
        its details.
      operationId: attendancerestrictionget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the restriction to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of an attendance restriction
      x-accepts: application/json
  /attendancerestrictionlist:
    get:
      description: Allows the user to view the list of all attendance restrictions.
      operationId: attendancerestrictionlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of attendance restrictions
      x-accepts: application/json
  /attendancerestrictiondelete:
    get:
      description: Allows the user to delete an existing attendance restriction.
      operationId: attendancerestrictiondelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the restriction to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete an attendance restriction
      x-accepts: application/json
  /attendancerestrictionsave:
    post:
      description: Allows the user to create or edit an attendance restriction.
      operationId: attendancerestrictionsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the restriction save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the restriction.
                  type: string
                details:
                  description: The details of the restriction.
                  type: string
                basis:
                  description: The basis of the restriction (location, service or
                    staff).
                  type: string
                restrictedobjects:
                  description: A json array containing the ids of the objects to restrict.
                  type: string
                useristagged:
                  description: Specifies whether the restriction should be set for
                    users with or without the specified tag.
                  type: boolean
                show:
                  description: Specifies whether the restriction should show or hide
                    the specified objects.
                  type: boolean
                order:
                  description: Specifies the order of precedence of the restriction.
                  format: int32
                  type: integer
                tag:
                  description: The id of the tag to restrict
                  format: uuid
                  type: string
                locations:
                  description: A json array containing the ids of the location where
                    this restriction applies.
                  type: string
              required:
              - basis
              - name
              - restrictedobjects
              - show
              - tag
              - token
              - useristagged
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit an attendance restriction
      x-contentType: application/json
      x-accepts: application/json
  /beaconget:
    get:
      description: Allows the user to view an individual beacon profile and its details.
      operationId: beaconget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the beacon to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a beacon profile
      x-accepts: application/json
  /beaconlist:
    get:
      description: Allows the user to view the list of all beacon profiles without
        their basic details.
      operationId: beaconlist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of beacon profiles
      x-accepts: application/json
  /beaconsave:
    post:
      description: Allows the user to create or edit a beacon profile.
      operationId: beaconsave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the beacon save (leave empty to create a
                    new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the beacon profile.
                  type: string
                description:
                  description: The description of the beacon profile.
                  type: string
                usage:
                  description: The usage for the beacon profile.
                  format: int32
                  type: integer
                region:
                  description: The id that uniquely identifies the region for the
                    beacon profile.
                  format: uuid
                  type: string
                major:
                  description: The major value of the beacon profile.
                  format: int32
                  type: integer
                minor:
                  description: The minor value of the beacon profile.
                  format: int32
                  type: integer
                transmissionpower:
                  description: The transmission power of the beacon profile.
                  format: int32
                  type: integer
                broadcastinginterval:
                  description: The broadcasting interval of the beacon profile.
                  format: int32
                  type: integer
                password:
                  description: The password of the beacon profile.
                  type: string
                active:
                  description: The status of the beacon profile.
                  type: boolean
              required:
              - name
              - token
              - usage
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a beacon profile
      x-contentType: application/json
      x-accepts: application/json
  /beacondelete:
    get:
      description: Allows the user to delete an existing beacon profile.
      operationId: beacondelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the beacon to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a beacon profile
      x-accepts: application/json
  /beacongetuuid:
    get:
      operationId: beacongetuuid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View the identifier for the account's beacon region (for sign-in stations).
      x-accepts: application/json
  /beacondisable:
    get:
      description: Allows the user to enable or disable beacon usage account wide.
      operationId: beacondisable
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Disable beacon support account wide
      x-accepts: application/json
  /beaconsetuuid:
    get:
      description: Allows the user to set the identifier for the account's beacon
        regions for sign-in stations, generally not necessary as each sign-in station
        profile generates its own region.
      operationId: beaconsetuuid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The custom region UUID.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Set the identifier for the account's beacon region (for sign-in stations).
      x-accepts: application/json
  /beaconresetuuid:
    get:
      description: Allows the user to reset the identifier for the beacon region,
        generally not necessary.
      operationId: beaconresetuuid
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Generate or reset the identifier for the account's beacon region.
      x-accepts: application/json
  /beaconscanlocations:
    get:
      operationId: beaconscanlocations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: A JSON array containg the beacons data (region, minor and major)
          values.
        explode: true
        in: query
        name: beacons
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check if there's location available to sign-in / out.
      x-accepts: application/json
  /beacongetlocations:
    get:
      operationId: beacongetlocations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: A JSON array containg the beacons data (region, minor and major)
          values.
        explode: true
        in: query
        name: beacons
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the sign-in stations assigned to specific beacons.
      x-accepts: application/json
  /beacongetstationlocation:
    get:
      operationId: beacongetstationlocation
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the sign-in station whose location information has
          to be retrieved.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the location whose information has to be retrieved.
        explode: true
        in: query
        name: location
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Get the location settings in the specified sign-in station.
      x-accepts: application/json
  /beaconlistprofiles:
    get:
      description: Allows the user to view the list of all beacon profiles with their
        basic details.
      operationId: beaconlistprofiles
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of beacon profiles with their characteristics
      x-accepts: application/json
  /beaconsilentregions:
    get:
      operationId: beaconsilentregions
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the beacon regions defined for silent tracking
      x-accepts: application/json
  /beaconsilentsignin:
    get:
      operationId: beaconsilentsignin
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the region the user is in.
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sign-in silently from the location specified by a beacon
      x-accepts: application/json
  /beaconsilentsignout:
    get:
      operationId: beaconsilentsignout
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the region the user has left.
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sign-out silently from the location specified by a beacon
      x-accepts: application/json
  /compasscategorydelete:
    get:
      description: Allows the user to delete an existing compass category.
      operationId: compasscategorydelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the category to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a compass category
      x-accepts: application/json
  /compasscategoryget:
    get:
      description: Allows the user to view an indvidiaul compass category and its
        details.
      operationId: compasscategoryget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the category to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a compass category
      x-accepts: application/json
  /compasscategorylist:
    get:
      description: Allows the user to view the full list of compass categories.
      operationId: compasscategorylist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specified whether only categories with services are returned
          or all.
        explode: true
        in: query
        name: onlywithservices
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of compass categories
      x-accepts: application/json
  /compasscategorysave:
    post:
      description: Allows the user to create or edit a compass category.
      operationId: compasscategorysave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the category save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the category.
                  type: string
                description:
                  description: The description of the category.
                  type: string
                icon:
                  description: The icon name of the category.
                  type: string
                order:
                  description: The order of the service.
                  format: int32
                  type: integer
              required:
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a compass category
      x-contentType: application/json
      x-accepts: application/json
  /compassservicelist:
    get:
      operationId: compassservicelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the category to filter the services.
        explode: true
        in: query
        name: category
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the services added to the compass
      x-accepts: application/json
  /compassservicelistlocations:
    get:
      operationId: compassservicelistlocations
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the service to get its locations.
        explode: true
        in: query
        name: serviceid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View all the locations where a service added to the compass is available
      x-accepts: application/json
  /waitinglinedelete:
    get:
      description: Allows the user to delete an existing waiting line, provided it
        is in a location that the user is scoped to.
      operationId: waitinglinedelete
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the line to delete.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Delete a waiting line
      x-accepts: application/json
  /waitinglineget:
    get:
      description: Allows the user to view the details of a waiting line in a location
        to which they are scoped.
      operationId: waitinglineget
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the waiting line to get.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The size in pixels of the photo URLs returned. Defaults to 40.
          If the size specified is not available, a similar one will be returned.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View details of a waiting line
      x-accepts: application/json
  /waitinglinelist:
    get:
      description: Allows the user to view the list of waiting lines in locations
        to which they are scoped.
      operationId: waitinglinelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The first record to return.
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The max number of records to return.
        explode: true
        in: query
        name: count
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: View a list of waiting lines
      x-accepts: application/json
  /waitinglinesave:
    post:
      description: Allows the user to create or edit a waiting line in a location
        to which they are scoped.
      operationId: waitinglinesave
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  description: The authentication token.
                  type: string
                id:
                  description: The id of the waiting line save (leave empty to create
                    a new one).
                  format: uuid
                  type: string
                name:
                  description: The name of the waiting line.
                  type: string
                description:
                  description: The description of the waiting line.
                  type: string
                location:
                  description: The id of the location of the waiting line.
                  format: uuid
                  type: string
                service:
                  description: Specifies the id of the service which persons that
                    are waiting in this line have selected.
                  format: uuid
                  type: string
                event:
                  description: Specifies the id of the event which persons that are
                    waiting in this line have selected.
                  format: uuid
                  type: string
                staff:
                  description: Specifies the id of the staff member which persons
                    that are waiting in this line have selected.
                  format: uuid
                  type: string
                active:
                  description: Whether the line is enabled.
                  type: boolean
                virtual.enabled:
                  description: Whether to enable remote access.
                  type: boolean
                virtual.name:
                  description: The display name of the waiting line when joining remotely.
                  type: string
                virtual.joinmessage:
                  description: 'Message send '
                  type: string
                virtual.positionmessage:
                  description: Specifies the id of the staff member which persons
                    that are waiting in this line have selected.
                  type: string
                virtual.positionnumber:
                  description: Specifies the id of the staff member which persons
                    that are waiting in this line have selected.
                  format: int32
                  type: integer
                virtual.signedinmessage:
                  description: Specifies the id of the staff member which persons
                    that are waiting in this line have selected.
                  type: string
              required:
              - location
              - name
              - token
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Create or edit a waiting line
      x-contentType: application/json
      x-accepts: application/json
  /waitinglineisuserin:
    get:
      operationId: waitinglineisuserin
      parameters:
      - description: The id of the sign-in station.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time of the swipe.
        explode: true
        in: query
        name: time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The card number of the user.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: The id of the location the user picked.
        explode: true
        in: query
        name: location
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Check whether a user is in a waiting line, signed-in or is not in the
        area
      x-accepts: application/json
  /waitinglineadduser:
    get:
      operationId: waitinglineadduser
      parameters:
      - description: The id of the sign-in station.
        explode: true
        in: query
        name: station
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The location's id where the swipe must be saved.
        explode: true
        in: query
        name: locationid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The date and time of the swipe.
        explode: true
        in: query
        name: time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The user's card number.
        explode: true
        in: query
        name: user
        required: true
        schema:
          type: string
        style: form
      - description: Specifies if the sign-in is for an attendee or a staff member
        explode: true
        in: query
        name: signinrole
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the role the user has selected in order to sign-in
        explode: true
        in: query
        name: roleid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The services ids the user has selected.
        explode: true
        in: query
        name: services
        required: false
        schema:
          type: string
        style: form
      - description: The id of the event the user selected.
        explode: true
        in: query
        name: eventid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the staff member the user selected.
        explode: true
        in: query
        name: staff
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The swiping user's photo size.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Put user in a waiting line
      x-accepts: application/json
  /waitinglineremoveuser:
    get:
      description: Allows the user to remove a user from a waiting line, provided
        they have permission to access that waiting line.
      operationId: waitinglineremoveuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the waiting line whose item has to be removed.
        explode: true
        in: query
        name: waitingline
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The ID of the item that has to be removed.
        explode: true
        in: query
        name: itemid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove a user from a waiting line
      x-accepts: application/json
  /waitinglinesigninuser:
    get:
      description: Allows the user to sign a user in from a waiting line, provided
        they have permission to access that waiting line.
      operationId: waitinglinesigninuser
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: The id of the waiting line whose item needs to be signed-in.
        explode: true
        in: query
        name: waitingline
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The ID of the item that has to be signed-in.
        explode: true
        in: query
        name: itemid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The id of the staff member selected to sign-in.
        explode: true
        in: query
        name: staff
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The swiping user's photo size.
        explode: true
        in: query
        name: photosize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Sign a user in from a waiting line
      x-accepts: application/json
  /virtuallinelist:
    get:
      operationId: virtuallinelist
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Lists waiting lines that have remote access enabled
      x-accepts: application/json
  /virtuallineaddmyself:
    get:
      description: Allows the user to add themselves to a waiting line from the AccuCampus
        mobile app.
      operationId: virtuallineaddmyself
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: ID of the waiting line to join.
        explode: true
        in: query
        name: waitinglineid
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Add myself to a waiting line
      x-accepts: application/json
  /virtuallineremovemyself:
    get:
      description: Allows the user to remove themselves from a waiting line in the
        AccuCampus mobile app.
      operationId: virtuallineremovemyself
      parameters:
      - description: The authentication token.
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/schemas/ActionResult'
      summary: Remove myself from a waiting line
      x-accepts: application/json
components:
  schemas:
    ActionResult:
      description: Default action result
      properties:
        success:
          description: Specifies if the execution of the action was successful
          type: boolean
        results:
          description: Objects returned by the action
          items:
            properties:
              prop1:
                description: A result property...
                type: object
              prop2:
                description: Another result property...
                type: object
          type: array
        message:
          description: Message with context information about the response
          type: string
      type: object
    ErrorActionResult:
      description: Object returned when the action execution failed
      properties:
        success:
          description: Specifies if the execution of the action was successful
          type: boolean
        message:
          description: Message with context information about the response
          type: string
        error_flag:
          description: Error flag that describes the error in the execution
          type: string
        domain:
          description: Contains the domain of the account where the action was applied
            on
          type: string
        redirect_url:
          description: Contains the url to redirect to when an error is found during
            the execution of the action
          type: string
      type: object

