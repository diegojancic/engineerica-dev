/**
 * AccuCampus OpenAPI 3 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuCampusOpenApi3Documentation);
  }
}(this, function(expect, AccuCampusOpenApi3Documentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuCampusOpenApi3Documentation.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('actionassignmentdelete', function() {
      it('should call actionassignmentdelete successfully', function(done) {
        //uncomment below and update the code to test actionassignmentdelete
        //instance.actionassignmentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentget', function() {
      it('should call actionassignmentget successfully', function(done) {
        //uncomment below and update the code to test actionassignmentget
        //instance.actionassignmentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlist', function() {
      it('should call actionassignmentlist successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlist
        //instance.actionassignmentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlisthistory', function() {
      it('should call actionassignmentlisthistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlisthistory
        //instance.actionassignmentlisthistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlistmine', function() {
      it('should call actionassignmentlistmine successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlistmine
        //instance.actionassignmentlistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlistpublichistory', function() {
      it('should call actionassignmentlistpublichistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlistpublichistory
        //instance.actionassignmentlistpublichistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentmarkcomplete', function() {
      it('should call actionassignmentmarkcomplete successfully', function(done) {
        //uncomment below and update the code to test actionassignmentmarkcomplete
        //instance.actionassignmentmarkcomplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentsave', function() {
      it('should call actionassignmentsave successfully', function(done) {
        //uncomment below and update the code to test actionassignmentsave
        //instance.actionassignmentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentsavehistory', function() {
      it('should call actionassignmentsavehistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentsavehistory
        //instance.actionassignmentsavehistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemdelete', function() {
      it('should call actionitemdelete successfully', function(done) {
        //uncomment below and update the code to test actionitemdelete
        //instance.actionitemdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemget', function() {
      it('should call actionitemget successfully', function(done) {
        //uncomment below and update the code to test actionitemget
        //instance.actionitemget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemlist', function() {
      it('should call actionitemlist successfully', function(done) {
        //uncomment below and update the code to test actionitemlist
        //instance.actionitemlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemsave', function() {
      it('should call actionitemsave successfully', function(done) {
        //uncomment below and update the code to test actionitemsave
        //instance.actionitemsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionloglist', function() {
      it('should call actionloglist successfully', function(done) {
        //uncomment below and update the code to test actionloglist
        //instance.actionloglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackassign', function() {
      it('should call actionpackassign successfully', function(done) {
        //uncomment below and update the code to test actionpackassign
        //instance.actionpackassign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackdelete', function() {
      it('should call actionpackdelete successfully', function(done) {
        //uncomment below and update the code to test actionpackdelete
        //instance.actionpackdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackget', function() {
      it('should call actionpackget successfully', function(done) {
        //uncomment below and update the code to test actionpackget
        //instance.actionpackget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpacklist', function() {
      it('should call actionpacklist successfully', function(done) {
        //uncomment below and update the code to test actionpacklist
        //instance.actionpacklist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpacksave', function() {
      it('should call actionpacksave successfully', function(done) {
        //uncomment below and update the code to test actionpacksave
        //instance.actionpacksave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypedelete', function() {
      it('should call actiontypedelete successfully', function(done) {
        //uncomment below and update the code to test actiontypedelete
        //instance.actiontypedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypeget', function() {
      it('should call actiontypeget successfully', function(done) {
        //uncomment below and update the code to test actiontypeget
        //instance.actiontypeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypelist', function() {
      it('should call actiontypelist successfully', function(done) {
        //uncomment below and update the code to test actiontypelist
        //instance.actiontypelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypesave', function() {
      it('should call actiontypesave successfully', function(done) {
        //uncomment below and update the code to test actiontypesave
        //instance.actiontypesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerycheckexecution', function() {
      it('should call adhocquerycheckexecution successfully', function(done) {
        //uncomment below and update the code to test adhocquerycheckexecution
        //instance.adhocquerycheckexecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerydelete', function() {
      it('should call adhocquerydelete successfully', function(done) {
        //uncomment below and update the code to test adhocquerydelete
        //instance.adhocquerydelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocqueryexecute', function() {
      it('should call adhocqueryexecute successfully', function(done) {
        //uncomment below and update the code to test adhocqueryexecute
        //instance.adhocqueryexecute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocqueryget', function() {
      it('should call adhocqueryget successfully', function(done) {
        //uncomment below and update the code to test adhocqueryget
        //instance.adhocqueryget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerygetschema', function() {
      it('should call adhocquerygetschema successfully', function(done) {
        //uncomment below and update the code to test adhocquerygetschema
        //instance.adhocquerygetschema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerylist', function() {
      it('should call adhocquerylist successfully', function(done) {
        //uncomment below and update the code to test adhocquerylist
        //instance.adhocquerylist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerylistexecutions', function() {
      it('should call adhocquerylistexecutions successfully', function(done) {
        //uncomment below and update the code to test adhocquerylistexecutions
        //instance.adhocquerylistexecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerysave', function() {
      it('should call adhocquerysave successfully', function(done) {
        //uncomment below and update the code to test adhocquerysave
        //instance.adhocquerysave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocquerystopexecution', function() {
      it('should call adhocquerystopexecution successfully', function(done) {
        //uncomment below and update the code to test adhocquerystopexecution
        //instance.adhocquerystopexecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adhocreportsreqaccess', function() {
      it('should call adhocreportsreqaccess successfully', function(done) {
        //uncomment below and update the code to test adhocreportsreqaccess
        //instance.adhocreportsreqaccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationcheckunknownuser', function() {
      it('should call advancedstationcheckunknownuser successfully', function(done) {
        //uncomment below and update the code to test advancedstationcheckunknownuser
        //instance.advancedstationcheckunknownuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationcheckuserrole', function() {
      it('should call advancedstationcheckuserrole successfully', function(done) {
        //uncomment below and update the code to test advancedstationcheckuserrole
        //instance.advancedstationcheckuserrole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationcreateuser', function() {
      it('should call advancedstationcreateuser successfully', function(done) {
        //uncomment below and update the code to test advancedstationcreateuser
        //instance.advancedstationcreateuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetevents', function() {
      it('should call advancedstationgetevents successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetevents
        //instance.advancedstationgetevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetinfo', function() {
      it('should call advancedstationgetinfo successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetinfo
        //instance.advancedstationgetinfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetlocations', function() {
      it('should call advancedstationgetlocations successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetlocations
        //instance.advancedstationgetlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetlogstaff', function() {
      it('should call advancedstationgetlogstaff successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetlogstaff
        //instance.advancedstationgetlogstaff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetroles', function() {
      it('should call advancedstationgetroles successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetroles
        //instance.advancedstationgetroles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetservices', function() {
      it('should call advancedstationgetservices successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetservices
        //instance.advancedstationgetservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationgetstaff', function() {
      it('should call advancedstationgetstaff successfully', function(done) {
        //uncomment below and update the code to test advancedstationgetstaff
        //instance.advancedstationgetstaff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advancedstationissignedin', function() {
      it('should call advancedstationissignedin successfully', function(done) {
        //uncomment below and update the code to test advancedstationissignedin
        //instance.advancedstationissignedin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleaddmissing', function() {
      it('should call advroleaddmissing successfully', function(done) {
        //uncomment below and update the code to test advroleaddmissing
        //instance.advroleaddmissing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolecheckperm', function() {
      it('should call advrolecheckperm successfully', function(done) {
        //uncomment below and update the code to test advrolecheckperm
        //instance.advrolecheckperm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroledelete', function() {
      it('should call advroledelete successfully', function(done) {
        //uncomment below and update the code to test advroledelete
        //instance.advroledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroledeletemapping', function() {
      it('should call advroledeletemapping successfully', function(done) {
        //uncomment below and update the code to test advroledeletemapping
        //instance.advroledeletemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleget', function() {
      it('should call advroleget successfully', function(done) {
        //uncomment below and update the code to test advroleget
        //instance.advroleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelist', function() {
      it('should call advrolelist successfully', function(done) {
        //uncomment below and update the code to test advrolelist
        //instance.advrolelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelistmaps', function() {
      it('should call advrolelistmaps successfully', function(done) {
        //uncomment below and update the code to test advrolelistmaps
        //instance.advrolelistmaps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelistrolesmapped', function() {
      it('should call advrolelistrolesmapped successfully', function(done) {
        //uncomment below and update the code to test advrolelistrolesmapped
        //instance.advrolelistrolesmapped(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelisttemplates', function() {
      it('should call advrolelisttemplates successfully', function(done) {
        //uncomment below and update the code to test advrolelisttemplates
        //instance.advrolelisttemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesave', function() {
      it('should call advrolesave successfully', function(done) {
        //uncomment below and update the code to test advrolesave
        //instance.advrolesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesavemapping', function() {
      it('should call advrolesavemapping successfully', function(done) {
        //uncomment below and update the code to test advrolesavemapping
        //instance.advrolesavemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesuserlist', function() {
      it('should call advrolesuserlist successfully', function(done) {
        //uncomment below and update the code to test advrolesuserlist
        //instance.advrolesuserlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleuserupgrade', function() {
      it('should call advroleuserupgrade successfully', function(done) {
        //uncomment below and update the code to test advroleuserupgrade
        //instance.advroleuserupgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentcancel', function() {
      it('should call appointmentcancel successfully', function(done) {
        //uncomment below and update the code to test appointmentcancel
        //instance.appointmentcancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentcheckisvalid', function() {
      it('should call appointmentcheckisvalid successfully', function(done) {
        //uncomment below and update the code to test appointmentcheckisvalid
        //instance.appointmentcheckisvalid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmenteditanyway', function() {
      it('should call appointmenteditanyway successfully', function(done) {
        //uncomment below and update the code to test appointmenteditanyway
        //instance.appointmenteditanyway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmenteditpresence', function() {
      it('should call appointmenteditpresence successfully', function(done) {
        //uncomment below and update the code to test appointmenteditpresence
        //instance.appointmenteditpresence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentfindallstaffslots', function() {
      it('should call appointmentfindallstaffslots successfully', function(done) {
        //uncomment below and update the code to test appointmentfindallstaffslots
        //instance.appointmentfindallstaffslots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentfindslots', function() {
      it('should call appointmentfindslots successfully', function(done) {
        //uncomment below and update the code to test appointmentfindslots
        //instance.appointmentfindslots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentfindstaff', function() {
      it('should call appointmentfindstaff successfully', function(done) {
        //uncomment below and update the code to test appointmentfindstaff
        //instance.appointmentfindstaff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentget', function() {
      it('should call appointmentget successfully', function(done) {
        //uncomment below and update the code to test appointmentget
        //instance.appointmentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentgetcurrent', function() {
      it('should call appointmentgetcurrent successfully', function(done) {
        //uncomment below and update the code to test appointmentgetcurrent
        //instance.appointmentgetcurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentgetlocations', function() {
      it('should call appointmentgetlocations successfully', function(done) {
        //uncomment below and update the code to test appointmentgetlocations
        //instance.appointmentgetlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentlist', function() {
      it('should call appointmentlist successfully', function(done) {
        //uncomment below and update the code to test appointmentlist
        //instance.appointmentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentlistmine', function() {
      it('should call appointmentlistmine successfully', function(done) {
        //uncomment below and update the code to test appointmentlistmine
        //instance.appointmentlistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentlistupcoming', function() {
      it('should call appointmentlistupcoming successfully', function(done) {
        //uncomment below and update the code to test appointmentlistupcoming
        //instance.appointmentlistupcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentrescheduleoutlook', function() {
      it('should call appointmentrescheduleoutlook successfully', function(done) {
        //uncomment below and update the code to test appointmentrescheduleoutlook
        //instance.appointmentrescheduleoutlook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentrestore', function() {
      it('should call appointmentrestore successfully', function(done) {
        //uncomment below and update the code to test appointmentrestore
        //instance.appointmentrestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentrestoreanyway', function() {
      it('should call appointmentrestoreanyway successfully', function(done) {
        //uncomment below and update the code to test appointmentrestoreanyway
        //instance.appointmentrestoreanyway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentsave', function() {
      it('should call appointmentsave successfully', function(done) {
        //uncomment below and update the code to test appointmentsave
        //instance.appointmentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentsetasvalid', function() {
      it('should call appointmentsetasvalid successfully', function(done) {
        //uncomment below and update the code to test appointmentsetasvalid
        //instance.appointmentsetasvalid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentsuggestlocations', function() {
      it('should call appointmentsuggestlocations successfully', function(done) {
        //uncomment below and update the code to test appointmentsuggestlocations
        //instance.appointmentsuggestlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentsuggestservices', function() {
      it('should call appointmentsuggestservices successfully', function(done) {
        //uncomment below and update the code to test appointmentsuggestservices
        //instance.appointmentsuggestservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appointmentvoid', function() {
      it('should call appointmentvoid successfully', function(done) {
        //uncomment below and update the code to test appointmentvoid
        //instance.appointmentvoid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsharegetphone', function() {
      it('should call appsharegetphone successfully', function(done) {
        //uncomment below and update the code to test appsharegetphone
        //instance.appsharegetphone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsharesendtext', function() {
      it('should call appsharesendtext successfully', function(done) {
        //uncomment below and update the code to test appsharesendtext
        //instance.appsharesendtext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentdelete', function() {
      it('should call attendancelogcommentdelete successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentdelete
        //instance.attendancelogcommentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentget', function() {
      it('should call attendancelogcommentget successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentget
        //instance.attendancelogcommentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentlist', function() {
      it('should call attendancelogcommentlist successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentlist
        //instance.attendancelogcommentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentsave', function() {
      it('should call attendancelogcommentsave successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentsave
        //instance.attendancelogcommentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogdelete', function() {
      it('should call attendancelogdelete successfully', function(done) {
        //uncomment below and update the code to test attendancelogdelete
        //instance.attendancelogdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogget', function() {
      it('should call attendancelogget successfully', function(done) {
        //uncomment below and update the code to test attendancelogget
        //instance.attendancelogget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloggetchangehistory', function() {
      it('should call attendanceloggetchangehistory successfully', function(done) {
        //uncomment below and update the code to test attendanceloggetchangehistory
        //instance.attendanceloggetchangehistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloglist', function() {
      it('should call attendanceloglist successfully', function(done) {
        //uncomment below and update the code to test attendanceloglist
        //instance.attendanceloglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloglistmine', function() {
      it('should call attendanceloglistmine successfully', function(done) {
        //uncomment below and update the code to test attendanceloglistmine
        //instance.attendanceloglistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogliststaff', function() {
      it('should call attendancelogliststaff successfully', function(done) {
        //uncomment below and update the code to test attendancelogliststaff
        //instance.attendancelogliststaff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogsave', function() {
      it('should call attendancelogsave successfully', function(done) {
        //uncomment below and update the code to test attendancelogsave
        //instance.attendancelogsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogsignout', function() {
      it('should call attendancelogsignout successfully', function(done) {
        //uncomment below and update the code to test attendancelogsignout
        //instance.attendancelogsignout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogwhosin', function() {
      it('should call attendancelogwhosin successfully', function(done) {
        //uncomment below and update the code to test attendancelogwhosin
        //instance.attendancelogwhosin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancerestrictiondelete', function() {
      it('should call attendancerestrictiondelete successfully', function(done) {
        //uncomment below and update the code to test attendancerestrictiondelete
        //instance.attendancerestrictiondelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancerestrictionget', function() {
      it('should call attendancerestrictionget successfully', function(done) {
        //uncomment below and update the code to test attendancerestrictionget
        //instance.attendancerestrictionget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancerestrictionlist', function() {
      it('should call attendancerestrictionlist successfully', function(done) {
        //uncomment below and update the code to test attendancerestrictionlist
        //instance.attendancerestrictionlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancerestrictionsave', function() {
      it('should call attendancerestrictionsave successfully', function(done) {
        //uncomment below and update the code to test attendancerestrictionsave
        //instance.attendancerestrictionsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beacondelete', function() {
      it('should call beacondelete successfully', function(done) {
        //uncomment below and update the code to test beacondelete
        //instance.beacondelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beacondisable', function() {
      it('should call beacondisable successfully', function(done) {
        //uncomment below and update the code to test beacondisable
        //instance.beacondisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconget', function() {
      it('should call beaconget successfully', function(done) {
        //uncomment below and update the code to test beaconget
        //instance.beaconget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beacongetlocations', function() {
      it('should call beacongetlocations successfully', function(done) {
        //uncomment below and update the code to test beacongetlocations
        //instance.beacongetlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beacongetstationlocation', function() {
      it('should call beacongetstationlocation successfully', function(done) {
        //uncomment below and update the code to test beacongetstationlocation
        //instance.beacongetstationlocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beacongetuuid', function() {
      it('should call beacongetuuid successfully', function(done) {
        //uncomment below and update the code to test beacongetuuid
        //instance.beacongetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconlist', function() {
      it('should call beaconlist successfully', function(done) {
        //uncomment below and update the code to test beaconlist
        //instance.beaconlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconlistprofiles', function() {
      it('should call beaconlistprofiles successfully', function(done) {
        //uncomment below and update the code to test beaconlistprofiles
        //instance.beaconlistprofiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconresetuuid', function() {
      it('should call beaconresetuuid successfully', function(done) {
        //uncomment below and update the code to test beaconresetuuid
        //instance.beaconresetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconsave', function() {
      it('should call beaconsave successfully', function(done) {
        //uncomment below and update the code to test beaconsave
        //instance.beaconsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconscanlocations', function() {
      it('should call beaconscanlocations successfully', function(done) {
        //uncomment below and update the code to test beaconscanlocations
        //instance.beaconscanlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconsetuuid', function() {
      it('should call beaconsetuuid successfully', function(done) {
        //uncomment below and update the code to test beaconsetuuid
        //instance.beaconsetuuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconsilentregions', function() {
      it('should call beaconsilentregions successfully', function(done) {
        //uncomment below and update the code to test beaconsilentregions
        //instance.beaconsilentregions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconsilentsignin', function() {
      it('should call beaconsilentsignin successfully', function(done) {
        //uncomment below and update the code to test beaconsilentsignin
        //instance.beaconsilentsignin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('beaconsilentsignout', function() {
      it('should call beaconsilentsignout successfully', function(done) {
        //uncomment below and update the code to test beaconsilentsignout
        //instance.beaconsilentsignout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bgjobgetstatus', function() {
      it('should call bgjobgetstatus successfully', function(done) {
        //uncomment below and update the code to test bgjobgetstatus
        //instance.bgjobgetstatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callExport', function() {
      it('should call callExport successfully', function(done) {
        //uncomment below and update the code to test callExport
        //instance.callExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callImport', function() {
      it('should call callImport successfully', function(done) {
        //uncomment below and update the code to test callImport
        //instance.callImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('captchagetchallenge', function() {
      it('should call captchagetchallenge successfully', function(done) {
        //uncomment below and update the code to test captchagetchallenge
        //instance.captchagetchallenge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('captchagetimage', function() {
      it('should call captchagetimage successfully', function(done) {
        //uncomment below and update the code to test captchagetimage
        //instance.captchagetimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changelog', function() {
      it('should call changelog successfully', function(done) {
        //uncomment below and update the code to test changelog
        //instance.changelog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientget', function() {
      it('should call clientget successfully', function(done) {
        //uncomment below and update the code to test clientget
        //instance.clientget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientlist', function() {
      it('should call clientlist successfully', function(done) {
        //uncomment below and update the code to test clientlist
        //instance.clientlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientsave', function() {
      it('should call clientsave successfully', function(done) {
        //uncomment below and update the code to test clientsave
        //instance.clientsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientsendmessage', function() {
      it('should call clientsendmessage successfully', function(done) {
        //uncomment below and update the code to test clientsendmessage
        //instance.clientsendmessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('communityinvite', function() {
      it('should call communityinvite successfully', function(done) {
        //uncomment below and update the code to test communityinvite
        //instance.communityinvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('communityjoin', function() {
      it('should call communityjoin successfully', function(done) {
        //uncomment below and update the code to test communityjoin
        //instance.communityjoin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compasscategorydelete', function() {
      it('should call compasscategorydelete successfully', function(done) {
        //uncomment below and update the code to test compasscategorydelete
        //instance.compasscategorydelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compasscategoryget', function() {
      it('should call compasscategoryget successfully', function(done) {
        //uncomment below and update the code to test compasscategoryget
        //instance.compasscategoryget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compasscategorylist', function() {
      it('should call compasscategorylist successfully', function(done) {
        //uncomment below and update the code to test compasscategorylist
        //instance.compasscategorylist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compasscategorysave', function() {
      it('should call compasscategorysave successfully', function(done) {
        //uncomment below and update the code to test compasscategorysave
        //instance.compasscategorysave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compassservicelist', function() {
      it('should call compassservicelist successfully', function(done) {
        //uncomment below and update the code to test compassservicelist
        //instance.compassservicelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compassservicelistlocations', function() {
      it('should call compassservicelistlocations successfully', function(done) {
        //uncomment below and update the code to test compassservicelistlocations
        //instance.compassservicelistlocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabdeletecomputer', function() {
      it('should call computerlabdeletecomputer successfully', function(done) {
        //uncomment below and update the code to test computerlabdeletecomputer
        //instance.computerlabdeletecomputer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabgetcomputer', function() {
      it('should call computerlabgetcomputer successfully', function(done) {
        //uncomment below and update the code to test computerlabgetcomputer
        //instance.computerlabgetcomputer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabgetsettings', function() {
      it('should call computerlabgetsettings successfully', function(done) {
        //uncomment below and update the code to test computerlabgetsettings
        //instance.computerlabgetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabissignedin', function() {
      it('should call computerlabissignedin successfully', function(done) {
        //uncomment below and update the code to test computerlabissignedin
        //instance.computerlabissignedin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlablistcomputers', function() {
      it('should call computerlablistcomputers successfully', function(done) {
        //uncomment below and update the code to test computerlablistcomputers
        //instance.computerlablistcomputers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlablistlabs', function() {
      it('should call computerlablistlabs successfully', function(done) {
        //uncomment below and update the code to test computerlablistlabs
        //instance.computerlablistlabs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabliststations', function() {
      it('should call computerlabliststations successfully', function(done) {
        //uncomment below and update the code to test computerlabliststations
        //instance.computerlabliststations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabsavecomputer', function() {
      it('should call computerlabsavecomputer successfully', function(done) {
        //uncomment below and update the code to test computerlabsavecomputer
        //instance.computerlabsavecomputer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabsavesettings', function() {
      it('should call computerlabsavesettings successfully', function(done) {
        //uncomment below and update the code to test computerlabsavesettings
        //instance.computerlabsavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('computerlabsaveswipe', function() {
      it('should call computerlabsaveswipe successfully', function(done) {
        //uncomment below and update the code to test computerlabsaveswipe
        //instance.computerlabsaveswipe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deadendrecordingdelete', function() {
      it('should call deadendrecordingdelete successfully', function(done) {
        //uncomment below and update the code to test deadendrecordingdelete
        //instance.deadendrecordingdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deadendrecordinglist', function() {
      it('should call deadendrecordinglist successfully', function(done) {
        //uncomment below and update the code to test deadendrecordinglist
        //instance.deadendrecordinglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deadendrecordinglistcomments', function() {
      it('should call deadendrecordinglistcomments successfully', function(done) {
        //uncomment below and update the code to test deadendrecordinglistcomments
        //instance.deadendrecordinglistcomments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deadendrecordingsave', function() {
      it('should call deadendrecordingsave successfully', function(done) {
        //uncomment below and update the code to test deadendrecordingsave
        //instance.deadendrecordingsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentdelete', function() {
      it('should call departmentdelete successfully', function(done) {
        //uncomment below and update the code to test departmentdelete
        //instance.departmentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentget', function() {
      it('should call departmentget successfully', function(done) {
        //uncomment below and update the code to test departmentget
        //instance.departmentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentlist', function() {
      it('should call departmentlist successfully', function(done) {
        //uncomment below and update the code to test departmentlist
        //instance.departmentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentsave', function() {
      it('should call departmentsave successfully', function(done) {
        //uncomment below and update the code to test departmentsave
        //instance.departmentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('doc', function() {
      it('should call doc successfully', function(done) {
        //uncomment below and update the code to test doc
        //instance.doc(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('easyloginaddbgimage', function() {
      it('should call easyloginaddbgimage successfully', function(done) {
        //uncomment below and update the code to test easyloginaddbgimage
        //instance.easyloginaddbgimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventchecksessions', function() {
      it('should call eventchecksessions successfully', function(done) {
        //uncomment below and update the code to test eventchecksessions
        //instance.eventchecksessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventdelete', function() {
      it('should call eventdelete successfully', function(done) {
        //uncomment below and update the code to test eventdelete
        //instance.eventdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventget', function() {
      it('should call eventget successfully', function(done) {
        //uncomment below and update the code to test eventget
        //instance.eventget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventgetsessionsbydate', function() {
      it('should call eventgetsessionsbydate successfully', function(done) {
        //uncomment below and update the code to test eventgetsessionsbydate
        //instance.eventgetsessionsbydate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventlist', function() {
      it('should call eventlist successfully', function(done) {
        //uncomment below and update the code to test eventlist
        //instance.eventlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventlistregistered', function() {
      it('should call eventlistregistered successfully', function(done) {
        //uncomment below and update the code to test eventlistregistered
        //instance.eventlistregistered(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregaddme', function() {
      it('should call eventregaddme successfully', function(done) {
        //uncomment below and update the code to test eventregaddme
        //instance.eventregaddme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregaddmetoall', function() {
      it('should call eventregaddmetoall successfully', function(done) {
        //uncomment below and update the code to test eventregaddmetoall
        //instance.eventregaddmetoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregaddmetogroup', function() {
      it('should call eventregaddmetogroup successfully', function(done) {
        //uncomment below and update the code to test eventregaddmetogroup
        //instance.eventregaddmetogroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregadduser', function() {
      it('should call eventregadduser successfully', function(done) {
        //uncomment below and update the code to test eventregadduser
        //instance.eventregadduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregaddusertoall', function() {
      it('should call eventregaddusertoall successfully', function(done) {
        //uncomment below and update the code to test eventregaddusertoall
        //instance.eventregaddusertoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregaddusertogroup', function() {
      it('should call eventregaddusertogroup successfully', function(done) {
        //uncomment below and update the code to test eventregaddusertogroup
        //instance.eventregaddusertogroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetevents', function() {
      it('should call eventreggetevents successfully', function(done) {
        //uncomment below and update the code to test eventreggetevents
        //instance.eventreggetevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetgroups', function() {
      it('should call eventreggetgroups successfully', function(done) {
        //uncomment below and update the code to test eventreggetgroups
        //instance.eventreggetgroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetmyevents', function() {
      it('should call eventreggetmyevents successfully', function(done) {
        //uncomment below and update the code to test eventreggetmyevents
        //instance.eventreggetmyevents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetmygroups', function() {
      it('should call eventreggetmygroups successfully', function(done) {
        //uncomment below and update the code to test eventreggetmygroups
        //instance.eventreggetmygroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetusers', function() {
      it('should call eventreggetusers successfully', function(done) {
        //uncomment below and update the code to test eventreggetusers
        //instance.eventreggetusers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetusersfromgroup', function() {
      it('should call eventreggetusersfromgroup successfully', function(done) {
        //uncomment below and update the code to test eventreggetusersfromgroup
        //instance.eventreggetusersfromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventreggetuserstoall', function() {
      it('should call eventreggetuserstoall successfully', function(done) {
        //uncomment below and update the code to test eventreggetuserstoall
        //instance.eventreggetuserstoall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremoveme', function() {
      it('should call eventregremoveme successfully', function(done) {
        //uncomment below and update the code to test eventregremoveme
        //instance.eventregremoveme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremovemefromall', function() {
      it('should call eventregremovemefromall successfully', function(done) {
        //uncomment below and update the code to test eventregremovemefromall
        //instance.eventregremovemefromall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremovemefromgroup', function() {
      it('should call eventregremovemefromgroup successfully', function(done) {
        //uncomment below and update the code to test eventregremovemefromgroup
        //instance.eventregremovemefromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremoveuser', function() {
      it('should call eventregremoveuser successfully', function(done) {
        //uncomment below and update the code to test eventregremoveuser
        //instance.eventregremoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremoveuserfromall', function() {
      it('should call eventregremoveuserfromall successfully', function(done) {
        //uncomment below and update the code to test eventregremoveuserfromall
        //instance.eventregremoveuserfromall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventregremoveuserfromgroup', function() {
      it('should call eventregremoveuserfromgroup successfully', function(done) {
        //uncomment below and update the code to test eventregremoveuserfromgroup
        //instance.eventregremoveuserfromgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsave', function() {
      it('should call eventsave successfully', function(done) {
        //uncomment below and update the code to test eventsave
        //instance.eventsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsearchgroup', function() {
      it('should call eventsearchgroup successfully', function(done) {
        //uncomment below and update the code to test eventsearchgroup
        //instance.eventsearchgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportlisttypes', function() {
      it('should call exportlisttypes successfully', function(done) {
        //uncomment below and update the code to test exportlisttypes
        //instance.exportlisttypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featurelist', function() {
      it('should call featurelist successfully', function(done) {
        //uncomment below and update the code to test featurelist
        //instance.featurelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaylist', function() {
      it('should call holidaylist successfully', function(done) {
        //uncomment below and update the code to test holidaylist
        //instance.holidaylist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaysave', function() {
      it('should call holidaysave successfully', function(done) {
        //uncomment below and update the code to test holidaysave
        //instance.holidaysave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaysuggest', function() {
      it('should call holidaysuggest successfully', function(done) {
        //uncomment below and update the code to test holidaysuggest
        //instance.holidaysuggest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importlisttypes', function() {
      it('should call importlisttypes successfully', function(done) {
        //uncomment below and update the code to test importlisttypes
        //instance.importlisttypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('interactiondelete', function() {
      it('should call interactiondelete successfully', function(done) {
        //uncomment below and update the code to test interactiondelete
        //instance.interactiondelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('interactionfeed', function() {
      it('should call interactionfeed successfully', function(done) {
        //uncomment below and update the code to test interactionfeed
        //instance.interactionfeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('interactionget', function() {
      it('should call interactionget successfully', function(done) {
        //uncomment below and update the code to test interactionget
        //instance.interactionget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('interactionlistprivatesummary', function() {
      it('should call interactionlistprivatesummary successfully', function(done) {
        //uncomment below and update the code to test interactionlistprivatesummary
        //instance.interactionlistprivatesummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('interactionsave', function() {
      it('should call interactionsave successfully', function(done) {
        //uncomment below and update the code to test interactionsave
        //instance.interactionsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licenseacceptagreement', function() {
      it('should call licenseacceptagreement successfully', function(done) {
        //uncomment below and update the code to test licenseacceptagreement
        //instance.licenseacceptagreement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licensegetagreementstatus', function() {
      it('should call licensegetagreementstatus successfully', function(done) {
        //uncomment below and update the code to test licensegetagreementstatus
        //instance.licensegetagreementstatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licensegetcurrent', function() {
      it('should call licensegetcurrent successfully', function(done) {
        //uncomment below and update the code to test licensegetcurrent
        //instance.licensegetcurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licenserenew', function() {
      it('should call licenserenew successfully', function(done) {
        //uncomment below and update the code to test licenserenew
        //instance.licenserenew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('likedelete', function() {
      it('should call likedelete successfully', function(done) {
        //uncomment below and update the code to test likedelete
        //instance.likedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('likelist', function() {
      it('should call likelist successfully', function(done) {
        //uncomment below and update the code to test likelist
        //instance.likelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('likesave', function() {
      it('should call likesave successfully', function(done) {
        //uncomment below and update the code to test likesave
        //instance.likesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listtimezones', function() {
      it('should call listtimezones successfully', function(done) {
        //uncomment below and update the code to test listtimezones
        //instance.listtimezones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationdelete', function() {
      it('should call locationdelete successfully', function(done) {
        //uncomment below and update the code to test locationdelete
        //instance.locationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationget', function() {
      it('should call locationget successfully', function(done) {
        //uncomment below and update the code to test locationget
        //instance.locationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationlist', function() {
      it('should call locationlist successfully', function(done) {
        //uncomment below and update the code to test locationlist
        //instance.locationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsave', function() {
      it('should call locationsave successfully', function(done) {
        //uncomment below and update the code to test locationsave
        //instance.locationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('login', function() {
      it('should call login successfully', function(done) {
        //uncomment below and update the code to test login
        //instance.login(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logout', function() {
      it('should call logout successfully', function(done) {
        //uncomment below and update the code to test logout
        //instance.logout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediacheckin', function() {
      it('should call mediacheckin successfully', function(done) {
        //uncomment below and update the code to test mediacheckin
        //instance.mediacheckin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediacheckout', function() {
      it('should call mediacheckout successfully', function(done) {
        //uncomment below and update the code to test mediacheckout
        //instance.mediacheckout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediacheckoutlist', function() {
      it('should call mediacheckoutlist successfully', function(done) {
        //uncomment below and update the code to test mediacheckoutlist
        //instance.mediacheckoutlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediadelete', function() {
      it('should call mediadelete successfully', function(done) {
        //uncomment below and update the code to test mediadelete
        //instance.mediadelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediadeletecheckoutlog', function() {
      it('should call mediadeletecheckoutlog successfully', function(done) {
        //uncomment below and update the code to test mediadeletecheckoutlog
        //instance.mediadeletecheckoutlog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaget', function() {
      it('should call mediaget successfully', function(done) {
        //uncomment below and update the code to test mediaget
        //instance.mediaget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediagetbycode', function() {
      it('should call mediagetbycode successfully', function(done) {
        //uncomment below and update the code to test mediagetbycode
        //instance.mediagetbycode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediagetcheckout', function() {
      it('should call mediagetcheckout successfully', function(done) {
        //uncomment below and update the code to test mediagetcheckout
        //instance.mediagetcheckout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediagetcheckoutlog', function() {
      it('should call mediagetcheckoutlog successfully', function(done) {
        //uncomment below and update the code to test mediagetcheckoutlog
        //instance.mediagetcheckoutlog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('medialist', function() {
      it('should call medialist successfully', function(done) {
        //uncomment below and update the code to test medialist
        //instance.medialist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediasave', function() {
      it('should call mediasave successfully', function(done) {
        //uncomment below and update the code to test mediasave
        //instance.mediasave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediatypedelete', function() {
      it('should call mediatypedelete successfully', function(done) {
        //uncomment below and update the code to test mediatypedelete
        //instance.mediatypedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediatypeget', function() {
      it('should call mediatypeget successfully', function(done) {
        //uncomment below and update the code to test mediatypeget
        //instance.mediatypeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediatypelist', function() {
      it('should call mediatypelist successfully', function(done) {
        //uncomment below and update the code to test mediatypelist
        //instance.mediatypelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediatypesave', function() {
      it('should call mediatypesave successfully', function(done) {
        //uncomment below and update the code to test mediatypesave
        //instance.mediatypesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportdelete', function() {
      it('should call memorizedreportdelete successfully', function(done) {
        //uncomment below and update the code to test memorizedreportdelete
        //instance.memorizedreportdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportget', function() {
      it('should call memorizedreportget successfully', function(done) {
        //uncomment below and update the code to test memorizedreportget
        //instance.memorizedreportget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportlist', function() {
      it('should call memorizedreportlist successfully', function(done) {
        //uncomment below and update the code to test memorizedreportlist
        //instance.memorizedreportlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportsave', function() {
      it('should call memorizedreportsave successfully', function(done) {
        //uncomment below and update the code to test memorizedreportsave
        //instance.memorizedreportsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('menugetitems', function() {
      it('should call menugetitems successfully', function(done) {
        //uncomment below and update the code to test menugetitems
        //instance.menugetitems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myaccount', function() {
      it('should call myaccount successfully', function(done) {
        //uncomment below and update the code to test myaccount
        //instance.myaccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myianatimezone', function() {
      it('should call myianatimezone successfully', function(done) {
        //uncomment below and update the code to test myianatimezone
        //instance.myianatimezone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myprofile', function() {
      it('should call myprofile successfully', function(done) {
        //uncomment below and update the code to test myprofile
        //instance.myprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myrights', function() {
      it('should call myrights successfully', function(done) {
        //uncomment below and update the code to test myrights
        //instance.myrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mysaveprofile', function() {
      it('should call mysaveprofile successfully', function(done) {
        //uncomment below and update the code to test mysaveprofile
        //instance.mysaveprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationdelete', function() {
      it('should call notificationdelete successfully', function(done) {
        //uncomment below and update the code to test notificationdelete
        //instance.notificationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationget', function() {
      it('should call notificationget successfully', function(done) {
        //uncomment below and update the code to test notificationget
        //instance.notificationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationgetforstation', function() {
      it('should call notificationgetforstation successfully', function(done) {
        //uncomment below and update the code to test notificationgetforstation
        //instance.notificationgetforstation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationgetunreadcount', function() {
      it('should call notificationgetunreadcount successfully', function(done) {
        //uncomment below and update the code to test notificationgetunreadcount
        //instance.notificationgetunreadcount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationlist', function() {
      it('should call notificationlist successfully', function(done) {
        //uncomment below and update the code to test notificationlist
        //instance.notificationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationlistmine', function() {
      it('should call notificationlistmine successfully', function(done) {
        //uncomment below and update the code to test notificationlistmine
        //instance.notificationlistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationmarkasread', function() {
      it('should call notificationmarkasread successfully', function(done) {
        //uncomment below and update the code to test notificationmarkasread
        //instance.notificationmarkasread(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationmarkasunread', function() {
      it('should call notificationmarkasunread successfully', function(done) {
        //uncomment below and update the code to test notificationmarkasunread
        //instance.notificationmarkasunread(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsend', function() {
      it('should call notificationsend successfully', function(done) {
        //uncomment below and update the code to test notificationsend
        //instance.notificationsend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsendonscreen', function() {
      it('should call notificationsendonscreen successfully', function(done) {
        //uncomment below and update the code to test notificationsendonscreen
        //instance.notificationsendonscreen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicdelete', function() {
      it('should call notificationtopicdelete successfully', function(done) {
        //uncomment below and update the code to test notificationtopicdelete
        //instance.notificationtopicdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicget', function() {
      it('should call notificationtopicget successfully', function(done) {
        //uncomment below and update the code to test notificationtopicget
        //instance.notificationtopicget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopiclist', function() {
      it('should call notificationtopiclist successfully', function(done) {
        //uncomment below and update the code to test notificationtopiclist
        //instance.notificationtopiclist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopiclistsubscribe', function() {
      it('should call notificationtopiclistsubscribe successfully', function(done) {
        //uncomment below and update the code to test notificationtopiclistsubscribe
        //instance.notificationtopiclistsubscribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicsave', function() {
      it('should call notificationtopicsave successfully', function(done) {
        //uncomment below and update the code to test notificationtopicsave
        //instance.notificationtopicsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pushderegister', function() {
      it('should call pushderegister successfully', function(done) {
        //uncomment below and update the code to test pushderegister
        //instance.pushderegister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pushregister', function() {
      it('should call pushregister successfully', function(done) {
        //uncomment below and update the code to test pushregister
        //instance.pushregister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrlabelsprint', function() {
      it('should call qrlabelsprint successfully', function(done) {
        //uncomment below and update the code to test qrlabelsprint
        //instance.qrlabelsprint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrloginget', function() {
      it('should call qrloginget successfully', function(done) {
        //uncomment below and update the code to test qrloginget
        //instance.qrloginget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrloginlogin', function() {
      it('should call qrloginlogin successfully', function(done) {
        //uncomment below and update the code to test qrloginlogin
        //instance.qrloginlogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpaneldeletewidget', function() {
      it('should call quickpaneldeletewidget successfully', function(done) {
        //uncomment below and update the code to test quickpaneldeletewidget
        //instance.quickpaneldeletewidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelfetchwidget', function() {
      it('should call quickpanelfetchwidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelfetchwidget
        //instance.quickpanelfetchwidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelgetwidget', function() {
      it('should call quickpanelgetwidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelgetwidget
        //instance.quickpanelgetwidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelinit', function() {
      it('should call quickpanelinit successfully', function(done) {
        //uncomment below and update the code to test quickpanelinit
        //instance.quickpanelinit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanellistwidgets', function() {
      it('should call quickpanellistwidgets successfully', function(done) {
        //uncomment below and update the code to test quickpanellistwidgets
        //instance.quickpanellistwidgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanellistwidgettypes', function() {
      it('should call quickpanellistwidgettypes successfully', function(done) {
        //uncomment below and update the code to test quickpanellistwidgettypes
        //instance.quickpanellistwidgettypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelreorderwidgets', function() {
      it('should call quickpanelreorderwidgets successfully', function(done) {
        //uncomment below and update the code to test quickpanelreorderwidgets
        //instance.quickpanelreorderwidgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelsavewidget', function() {
      it('should call quickpanelsavewidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelsavewidget
        //instance.quickpanelsavewidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingflag', function() {
      it('should call ratingflag successfully', function(done) {
        //uncomment below and update the code to test ratingflag
        //instance.ratingflag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingflagcomment', function() {
      it('should call ratingflagcomment successfully', function(done) {
        //uncomment below and update the code to test ratingflagcomment
        //instance.ratingflagcomment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingget', function() {
      it('should call ratingget successfully', function(done) {
        //uncomment below and update the code to test ratingget
        //instance.ratingget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratinggetall', function() {
      it('should call ratinggetall successfully', function(done) {
        //uncomment below and update the code to test ratinggetall
        //instance.ratinggetall(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratinggetcomments', function() {
      it('should call ratinggetcomments successfully', function(done) {
        //uncomment below and update the code to test ratinggetcomments
        //instance.ratinggetcomments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratinggetpending', function() {
      it('should call ratinggetpending successfully', function(done) {
        //uncomment below and update the code to test ratinggetpending
        //instance.ratinggetpending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratinggetpendingmoderation', function() {
      it('should call ratinggetpendingmoderation successfully', function(done) {
        //uncomment below and update the code to test ratinggetpendingmoderation
        //instance.ratinggetpendingmoderation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingmoderate', function() {
      it('should call ratingmoderate successfully', function(done) {
        //uncomment below and update the code to test ratingmoderate
        //instance.ratingmoderate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingpostcomment', function() {
      it('should call ratingpostcomment successfully', function(done) {
        //uncomment below and update the code to test ratingpostcomment
        //instance.ratingpostcomment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingrate', function() {
      it('should call ratingrate successfully', function(done) {
        //uncomment below and update the code to test ratingrate
        //instance.ratingrate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingratepending', function() {
      it('should call ratingratepending successfully', function(done) {
        //uncomment below and update the code to test ratingratepending
        //instance.ratingratepending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ratingvote', function() {
      it('should call ratingvote successfully', function(done) {
        //uncomment below and update the code to test ratingvote
        //instance.ratingvote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportattanalyticsprepare', function() {
      it('should call reportattanalyticsprepare successfully', function(done) {
        //uncomment below and update the code to test reportattanalyticsprepare
        //instance.reportattanalyticsprepare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportlist', function() {
      it('should call reportlist successfully', function(done) {
        //uncomment below and update the code to test reportlist
        //instance.reportlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportpermissionsbyuser', function() {
      it('should call reportpermissionsbyuser successfully', function(done) {
        //uncomment below and update the code to test reportpermissionsbyuser
        //instance.reportpermissionsbyuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportprepare', function() {
      it('should call reportprepare successfully', function(done) {
        //uncomment below and update the code to test reportprepare
        //instance.reportprepare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportquery', function() {
      it('should call reportquery successfully', function(done) {
        //uncomment below and update the code to test reportquery
        //instance.reportquery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportscheduledelete', function() {
      it('should call reportscheduledelete successfully', function(done) {
        //uncomment below and update the code to test reportscheduledelete
        //instance.reportscheduledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportscheduleget', function() {
      it('should call reportscheduleget successfully', function(done) {
        //uncomment below and update the code to test reportscheduleget
        //instance.reportscheduleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportschedulelist', function() {
      it('should call reportschedulelist successfully', function(done) {
        //uncomment below and update the code to test reportschedulelist
        //instance.reportschedulelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportschedulesave', function() {
      it('should call reportschedulesave successfully', function(done) {
        //uncomment below and update the code to test reportschedulesave
        //instance.reportschedulesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reporttagresults', function() {
      it('should call reporttagresults successfully', function(done) {
        //uncomment below and update the code to test reporttagresults
        //instance.reporttagresults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelcheckanalysis', function() {
      it('should call riskmodelcheckanalysis successfully', function(done) {
        //uncomment below and update the code to test riskmodelcheckanalysis
        //instance.riskmodelcheckanalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodeldelete', function() {
      it('should call riskmodeldelete successfully', function(done) {
        //uncomment below and update the code to test riskmodeldelete
        //instance.riskmodeldelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelget', function() {
      it('should call riskmodelget successfully', function(done) {
        //uncomment below and update the code to test riskmodelget
        //instance.riskmodelget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelgetscore', function() {
      it('should call riskmodelgetscore successfully', function(done) {
        //uncomment below and update the code to test riskmodelgetscore
        //instance.riskmodelgetscore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodellist', function() {
      it('should call riskmodellist successfully', function(done) {
        //uncomment below and update the code to test riskmodellist
        //instance.riskmodellist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelpredict', function() {
      it('should call riskmodelpredict successfully', function(done) {
        //uncomment below and update the code to test riskmodelpredict
        //instance.riskmodelpredict(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelprocess', function() {
      it('should call riskmodelprocess successfully', function(done) {
        //uncomment below and update the code to test riskmodelprocess
        //instance.riskmodelprocess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelrefresh', function() {
      it('should call riskmodelrefresh successfully', function(done) {
        //uncomment below and update the code to test riskmodelrefresh
        //instance.riskmodelrefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodelsave', function() {
      it('should call riskmodelsave successfully', function(done) {
        //uncomment below and update the code to test riskmodelsave
        //instance.riskmodelsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('riskmodeltermprecedences', function() {
      it('should call riskmodeltermprecedences successfully', function(done) {
        //uncomment below and update the code to test riskmodeltermprecedences
        //instance.riskmodeltermprecedences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolelist', function() {
      it('should call rolelist successfully', function(done) {
        //uncomment below and update the code to test rolelist
        //instance.rolelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ruledelete', function() {
      it('should call ruledelete successfully', function(done) {
        //uncomment below and update the code to test ruledelete
        //instance.ruledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ruleget', function() {
      it('should call ruleget successfully', function(done) {
        //uncomment below and update the code to test ruleget
        //instance.ruleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulegeteventtype', function() {
      it('should call rulegeteventtype successfully', function(done) {
        //uncomment below and update the code to test rulegeteventtype
        //instance.rulegeteventtype(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelist', function() {
      it('should call rulelist successfully', function(done) {
        //uncomment below and update the code to test rulelist
        //instance.rulelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelistactions', function() {
      it('should call rulelistactions successfully', function(done) {
        //uncomment below and update the code to test rulelistactions
        //instance.rulelistactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelisteventtypes', function() {
      it('should call rulelisteventtypes successfully', function(done) {
        //uncomment below and update the code to test rulelisteventtypes
        //instance.rulelisteventtypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelisthttprequests', function() {
      it('should call rulelisthttprequests successfully', function(done) {
        //uncomment below and update the code to test rulelisthttprequests
        //instance.rulelisthttprequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulesave', function() {
      it('should call rulesave successfully', function(done) {
        //uncomment below and update the code to test rulesave
        //instance.rulesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduledelete', function() {
      it('should call scheduledelete successfully', function(done) {
        //uncomment below and update the code to test scheduledelete
        //instance.scheduledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduledeletemine', function() {
      it('should call scheduledeletemine successfully', function(done) {
        //uncomment below and update the code to test scheduledeletemine
        //instance.scheduledeletemine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleenable', function() {
      it('should call scheduleenable successfully', function(done) {
        //uncomment below and update the code to test scheduleenable
        //instance.scheduleenable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleenablemine', function() {
      it('should call scheduleenablemine successfully', function(done) {
        //uncomment below and update the code to test scheduleenablemine
        //instance.scheduleenablemine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulefindallstaffslots', function() {
      it('should call schedulefindallstaffslots successfully', function(done) {
        //uncomment below and update the code to test schedulefindallstaffslots
        //instance.schedulefindallstaffslots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulefindslots', function() {
      it('should call schedulefindslots successfully', function(done) {
        //uncomment below and update the code to test schedulefindslots
        //instance.schedulefindslots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulefindstaffavail', function() {
      it('should call schedulefindstaffavail successfully', function(done) {
        //uncomment below and update the code to test schedulefindstaffavail
        //instance.schedulefindstaffavail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleget', function() {
      it('should call scheduleget successfully', function(done) {
        //uncomment below and update the code to test scheduleget
        //instance.scheduleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulegetmine', function() {
      it('should call schedulegetmine successfully', function(done) {
        //uncomment below and update the code to test schedulegetmine
        //instance.schedulegetmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulegetstaff', function() {
      it('should call schedulegetstaff successfully', function(done) {
        //uncomment below and update the code to test schedulegetstaff
        //instance.schedulegetstaff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulegetstaffmine', function() {
      it('should call schedulegetstaffmine successfully', function(done) {
        //uncomment below and update the code to test schedulegetstaffmine
        //instance.schedulegetstaffmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleintegrationdeleteitem', function() {
      it('should call scheduleintegrationdeleteitem successfully', function(done) {
        //uncomment below and update the code to test scheduleintegrationdeleteitem
        //instance.scheduleintegrationdeleteitem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleintegrationdeleteitemsbymasterid', function() {
      it('should call scheduleintegrationdeleteitemsbymasterid successfully', function(done) {
        //uncomment below and update the code to test scheduleintegrationdeleteitemsbymasterid
        //instance.scheduleintegrationdeleteitemsbymasterid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleintegrationgetitem', function() {
      it('should call scheduleintegrationgetitem successfully', function(done) {
        //uncomment below and update the code to test scheduleintegrationgetitem
        //instance.scheduleintegrationgetitem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleintegrationsaveitem', function() {
      it('should call scheduleintegrationsaveitem successfully', function(done) {
        //uncomment below and update the code to test scheduleintegrationsaveitem
        //instance.scheduleintegrationsaveitem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scheduleintegrationsetid', function() {
      it('should call scheduleintegrationsetid successfully', function(done) {
        //uncomment below and update the code to test scheduleintegrationsetid
        //instance.scheduleintegrationsetid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulemyofftimes', function() {
      it('should call schedulemyofftimes successfully', function(done) {
        //uncomment below and update the code to test schedulemyofftimes
        //instance.schedulemyofftimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulesave', function() {
      it('should call schedulesave successfully', function(done) {
        //uncomment below and update the code to test schedulesave
        //instance.schedulesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulesavemine', function() {
      it('should call schedulesavemine successfully', function(done) {
        //uncomment below and update the code to test schedulesavemine
        //instance.schedulesavemine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('search', function() {
      it('should call search successfully', function(done) {
        //uncomment below and update the code to test search
        //instance.search(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchgetentities', function() {
      it('should call searchgetentities successfully', function(done) {
        //uncomment below and update the code to test searchgetentities
        //instance.searchgetentities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassesspermission', function() {
      it('should call securityassesspermission successfully', function(done) {
        //uncomment below and update the code to test securityassesspermission
        //instance.securityassesspermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessrole', function() {
      it('should call securityassessrole successfully', function(done) {
        //uncomment below and update the code to test securityassessrole
        //instance.securityassessrole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessscope', function() {
      it('should call securityassessscope successfully', function(done) {
        //uncomment below and update the code to test securityassessscope
        //instance.securityassessscope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessuser', function() {
      it('should call securityassessuser successfully', function(done) {
        //uncomment below and update the code to test securityassessuser
        //instance.securityassessuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seminardelete', function() {
      it('should call seminardelete successfully', function(done) {
        //uncomment below and update the code to test seminardelete
        //instance.seminardelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seminarget', function() {
      it('should call seminarget successfully', function(done) {
        //uncomment below and update the code to test seminarget
        //instance.seminarget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seminarlist', function() {
      it('should call seminarlist successfully', function(done) {
        //uncomment below and update the code to test seminarlist
        //instance.seminarlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('seminarsave', function() {
      it('should call seminarsave successfully', function(done) {
        //uncomment below and update the code to test seminarsave
        //instance.seminarsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceassignmentaddservice', function() {
      it('should call serviceassignmentaddservice successfully', function(done) {
        //uncomment below and update the code to test serviceassignmentaddservice
        //instance.serviceassignmentaddservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceassignmentgetlocation', function() {
      it('should call serviceassignmentgetlocation successfully', function(done) {
        //uncomment below and update the code to test serviceassignmentgetlocation
        //instance.serviceassignmentgetlocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceassignmentgetservice', function() {
      it('should call serviceassignmentgetservice successfully', function(done) {
        //uncomment below and update the code to test serviceassignmentgetservice
        //instance.serviceassignmentgetservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceassignmentremoveservice', function() {
      it('should call serviceassignmentremoveservice successfully', function(done) {
        //uncomment below and update the code to test serviceassignmentremoveservice
        //instance.serviceassignmentremoveservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicedelete', function() {
      it('should call servicedelete successfully', function(done) {
        //uncomment below and update the code to test servicedelete
        //instance.servicedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceget', function() {
      it('should call serviceget successfully', function(done) {
        //uncomment below and update the code to test serviceget
        //instance.serviceget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicelist', function() {
      it('should call servicelist successfully', function(done) {
        //uncomment below and update the code to test servicelist
        //instance.servicelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesave', function() {
      it('should call servicesave successfully', function(done) {
        //uncomment below and update the code to test servicesave
        //instance.servicesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendancelogaddnote', function() {
      it('should call sessionattendancelogaddnote successfully', function(done) {
        //uncomment below and update the code to test sessionattendancelogaddnote
        //instance.sessionattendancelogaddnote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendancelogget', function() {
      it('should call sessionattendancelogget successfully', function(done) {
        //uncomment below and update the code to test sessionattendancelogget
        //instance.sessionattendancelogget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendanceloggetuser', function() {
      it('should call sessionattendanceloggetuser successfully', function(done) {
        //uncomment below and update the code to test sessionattendanceloggetuser
        //instance.sessionattendanceloggetuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendanceloglist', function() {
      it('should call sessionattendanceloglist successfully', function(done) {
        //uncomment below and update the code to test sessionattendanceloglist
        //instance.sessionattendanceloglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendanceloglistevent', function() {
      it('should call sessionattendanceloglistevent successfully', function(done) {
        //uncomment below and update the code to test sessionattendanceloglistevent
        //instance.sessionattendanceloglistevent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendanceloglistsummary', function() {
      it('should call sessionattendanceloglistsummary successfully', function(done) {
        //uncomment below and update the code to test sessionattendanceloglistsummary
        //instance.sessionattendanceloglistsummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendancelogmylistsummary', function() {
      it('should call sessionattendancelogmylistsummary successfully', function(done) {
        //uncomment below and update the code to test sessionattendancelogmylistsummary
        //instance.sessionattendancelogmylistsummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendancelogsave', function() {
      it('should call sessionattendancelogsave successfully', function(done) {
        //uncomment below and update the code to test sessionattendancelogsave
        //instance.sessionattendancelogsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionattendancelogsaveswipe', function() {
      it('should call sessionattendancelogsaveswipe successfully', function(done) {
        //uncomment below and update the code to test sessionattendancelogsaveswipe
        //instance.sessionattendancelogsaveswipe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionbulkupdate', function() {
      it('should call sessionbulkupdate successfully', function(done) {
        //uncomment below and update the code to test sessionbulkupdate
        //instance.sessionbulkupdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionget', function() {
      it('should call sessionget successfully', function(done) {
        //uncomment below and update the code to test sessionget
        //instance.sessionget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessiongetschedule', function() {
      it('should call sessiongetschedule successfully', function(done) {
        //uncomment below and update the code to test sessiongetschedule
        //instance.sessiongetschedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionlist', function() {
      it('should call sessionlist successfully', function(done) {
        //uncomment below and update the code to test sessionlist
        //instance.sessionlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregaddcurrentuser', function() {
      it('should call sessionregaddcurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregaddcurrentuser
        //instance.sessionregaddcurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregadduser', function() {
      it('should call sessionregadduser successfully', function(done) {
        //uncomment below and update the code to test sessionregadduser
        //instance.sessionregadduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetmysessions', function() {
      it('should call sessionreggetmysessions successfully', function(done) {
        //uncomment below and update the code to test sessionreggetmysessions
        //instance.sessionreggetmysessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetsessions', function() {
      it('should call sessionreggetsessions successfully', function(done) {
        //uncomment below and update the code to test sessionreggetsessions
        //instance.sessionreggetsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetsettings', function() {
      it('should call sessionreggetsettings successfully', function(done) {
        //uncomment below and update the code to test sessionreggetsettings
        //instance.sessionreggetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetusers', function() {
      it('should call sessionreggetusers successfully', function(done) {
        //uncomment below and update the code to test sessionreggetusers
        //instance.sessionreggetusers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistsessions', function() {
      it('should call sessionreglistsessions successfully', function(done) {
        //uncomment below and update the code to test sessionreglistsessions
        //instance.sessionreglistsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistupcoming', function() {
      it('should call sessionreglistupcoming successfully', function(done) {
        //uncomment below and update the code to test sessionreglistupcoming
        //instance.sessionreglistupcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistupcomingevent', function() {
      it('should call sessionreglistupcomingevent successfully', function(done) {
        //uncomment below and update the code to test sessionreglistupcomingevent
        //instance.sessionreglistupcomingevent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregremovecurrentuser', function() {
      it('should call sessionregremovecurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregremovecurrentuser
        //instance.sessionregremovecurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregremoveuser', function() {
      it('should call sessionregremoveuser successfully', function(done) {
        //uncomment below and update the code to test sessionregremoveuser
        //instance.sessionregremoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregsavesettings', function() {
      it('should call sessionregsavesettings successfully', function(done) {
        //uncomment below and update the code to test sessionregsavesettings
        //instance.sessionregsavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswipedelete', function() {
      it('should call sessionswipedelete successfully', function(done) {
        //uncomment below and update the code to test sessionswipedelete
        //instance.sessionswipedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswipeget', function() {
      it('should call sessionswipeget successfully', function(done) {
        //uncomment below and update the code to test sessionswipeget
        //instance.sessionswipeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswipelistunresolved', function() {
      it('should call sessionswipelistunresolved successfully', function(done) {
        //uncomment below and update the code to test sessionswipelistunresolved
        //instance.sessionswipelistunresolved(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswiperesolve', function() {
      it('should call sessionswiperesolve successfully', function(done) {
        //uncomment below and update the code to test sessionswiperesolve
        //instance.sessionswiperesolve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswipesave', function() {
      it('should call sessionswipesave successfully', function(done) {
        //uncomment below and update the code to test sessionswipesave
        //instance.sessionswipesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionswipesaveanonym', function() {
      it('should call sessionswipesaveanonym successfully', function(done) {
        //uncomment below and update the code to test sessionswipesaveanonym
        //instance.sessionswipesaveanonym(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingaddlogo', function() {
      it('should call settingaddlogo successfully', function(done) {
        //uncomment below and update the code to test settingaddlogo
        //instance.settingaddlogo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingget', function() {
      it('should call settingget successfully', function(done) {
        //uncomment below and update the code to test settingget
        //instance.settingget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsave', function() {
      it('should call settingsave successfully', function(done) {
        //uncomment below and update the code to test settingsave
        //instance.settingsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingviewgeneral', function() {
      it('should call settingviewgeneral successfully', function(done) {
        //uncomment below and update the code to test settingviewgeneral
        //instance.settingviewgeneral(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialcontacts', function() {
      it('should call socialcontacts successfully', function(done) {
        //uncomment below and update the code to test socialcontacts
        //instance.socialcontacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgroupaddmembers', function() {
      it('should call socialgroupaddmembers successfully', function(done) {
        //uncomment below and update the code to test socialgroupaddmembers
        //instance.socialgroupaddmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgroupdelete', function() {
      it('should call socialgroupdelete successfully', function(done) {
        //uncomment below and update the code to test socialgroupdelete
        //instance.socialgroupdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgrouplist', function() {
      it('should call socialgrouplist successfully', function(done) {
        //uncomment below and update the code to test socialgrouplist
        //instance.socialgrouplist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgrouplistmembers', function() {
      it('should call socialgrouplistmembers successfully', function(done) {
        //uncomment below and update the code to test socialgrouplistmembers
        //instance.socialgrouplistmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgroupremovemembers', function() {
      it('should call socialgroupremovemembers successfully', function(done) {
        //uncomment below and update the code to test socialgroupremovemembers
        //instance.socialgroupremovemembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgroupremovemyself', function() {
      it('should call socialgroupremovemyself successfully', function(done) {
        //uncomment below and update the code to test socialgroupremovemyself
        //instance.socialgroupremovemyself(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('socialgroupsave', function() {
      it('should call socialgroupsave successfully', function(done) {
        //uncomment below and update the code to test socialgroupsave
        //instance.socialgroupsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssogeneratekey', function() {
      it('should call ssogeneratekey successfully', function(done) {
        //uncomment below and update the code to test ssogeneratekey
        //instance.ssogeneratekey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssogetsettings', function() {
      it('should call ssogetsettings successfully', function(done) {
        //uncomment below and update the code to test ssogetsettings
        //instance.ssogetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssoissuetoken', function() {
      it('should call ssoissuetoken successfully', function(done) {
        //uncomment below and update the code to test ssoissuetoken
        //instance.ssoissuetoken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssosavesettings', function() {
      it('should call ssosavesettings successfully', function(done) {
        //uncomment below and update the code to test ssosavesettings
        //instance.ssosavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailaddmetoallservices', function() {
      it('should call staffavailaddmetoallservices successfully', function(done) {
        //uncomment below and update the code to test staffavailaddmetoallservices
        //instance.staffavailaddmetoallservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailaddmetoservice', function() {
      it('should call staffavailaddmetoservice successfully', function(done) {
        //uncomment below and update the code to test staffavailaddmetoservice
        //instance.staffavailaddmetoservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailaddusertoallservices', function() {
      it('should call staffavailaddusertoallservices successfully', function(done) {
        //uncomment below and update the code to test staffavailaddusertoallservices
        //instance.staffavailaddusertoallservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailaddusertoservice', function() {
      it('should call staffavailaddusertoservice successfully', function(done) {
        //uncomment below and update the code to test staffavailaddusertoservice
        //instance.staffavailaddusertoservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailgetmyservices', function() {
      it('should call staffavailgetmyservices successfully', function(done) {
        //uncomment below and update the code to test staffavailgetmyservices
        //instance.staffavailgetmyservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailgetservices', function() {
      it('should call staffavailgetservices successfully', function(done) {
        //uncomment below and update the code to test staffavailgetservices
        //instance.staffavailgetservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailgetusersforservice', function() {
      it('should call staffavailgetusersforservice successfully', function(done) {
        //uncomment below and update the code to test staffavailgetusersforservice
        //instance.staffavailgetusersforservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavaillisttypes', function() {
      it('should call staffavaillisttypes successfully', function(done) {
        //uncomment below and update the code to test staffavaillisttypes
        //instance.staffavaillisttypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailremovemefromallservices', function() {
      it('should call staffavailremovemefromallservices successfully', function(done) {
        //uncomment below and update the code to test staffavailremovemefromallservices
        //instance.staffavailremovemefromallservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailremovemefromservice', function() {
      it('should call staffavailremovemefromservice successfully', function(done) {
        //uncomment below and update the code to test staffavailremovemefromservice
        //instance.staffavailremovemefromservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailremoveuserfromallservices', function() {
      it('should call staffavailremoveuserfromallservices successfully', function(done) {
        //uncomment below and update the code to test staffavailremoveuserfromallservices
        //instance.staffavailremoveuserfromallservices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailremoveuserfromservice', function() {
      it('should call staffavailremoveuserfromservice successfully', function(done) {
        //uncomment below and update the code to test staffavailremoveuserfromservice
        //instance.staffavailremoveuserfromservice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailsetavailability', function() {
      it('should call staffavailsetavailability successfully', function(done) {
        //uncomment below and update the code to test staffavailsetavailability
        //instance.staffavailsetavailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('staffavailsetmyavailability', function() {
      it('should call staffavailsetmyavailability successfully', function(done) {
        //uncomment below and update the code to test staffavailsetmyavailability
        //instance.staffavailsetmyavailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationdelete', function() {
      it('should call stationdelete successfully', function(done) {
        //uncomment below and update the code to test stationdelete
        //instance.stationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationget', function() {
      it('should call stationget successfully', function(done) {
        //uncomment below and update the code to test stationget
        //instance.stationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetcurrentterms', function() {
      it('should call stationgetcurrentterms successfully', function(done) {
        //uncomment below and update the code to test stationgetcurrentterms
        //instance.stationgetcurrentterms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetinfo', function() {
      it('should call stationgetinfo successfully', function(done) {
        //uncomment below and update the code to test stationgetinfo
        //instance.stationgetinfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetlicense', function() {
      it('should call stationgetlicense successfully', function(done) {
        //uncomment below and update the code to test stationgetlicense
        //instance.stationgetlicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetlocationsettings', function() {
      it('should call stationgetlocationsettings successfully', function(done) {
        //uncomment below and update the code to test stationgetlocationsettings
        //instance.stationgetlocationsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationlist', function() {
      it('should call stationlist successfully', function(done) {
        //uncomment below and update the code to test stationlist
        //instance.stationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationsave', function() {
      it('should call stationsave successfully', function(done) {
        //uncomment below and update the code to test stationsave
        //instance.stationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationsavemine', function() {
      it('should call stationsavemine successfully', function(done) {
        //uncomment below and update the code to test stationsavemine
        //instance.stationsavemine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationunlock', function() {
      it('should call stationunlock successfully', function(done) {
        //uncomment below and update the code to test stationunlock
        //instance.stationunlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipedelete', function() {
      it('should call swipedelete successfully', function(done) {
        //uncomment below and update the code to test swipedelete
        //instance.swipedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipeget', function() {
      it('should call swipeget successfully', function(done) {
        //uncomment below and update the code to test swipeget
        //instance.swipeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipelist', function() {
      it('should call swipelist successfully', function(done) {
        //uncomment below and update the code to test swipelist
        //instance.swipelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipesave', function() {
      it('should call swipesave successfully', function(done) {
        //uncomment below and update the code to test swipesave
        //instance.swipesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipesaveanonym', function() {
      it('should call swipesaveanonym successfully', function(done) {
        //uncomment below and update the code to test swipesaveanonym
        //instance.swipesaveanonym(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagdelete', function() {
      it('should call tagdelete successfully', function(done) {
        //uncomment below and update the code to test tagdelete
        //instance.tagdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagget', function() {
      it('should call tagget successfully', function(done) {
        //uncomment below and update the code to test tagget
        //instance.tagget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taglist', function() {
      it('should call taglist successfully', function(done) {
        //uncomment below and update the code to test taglist
        //instance.taglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taglistgroups', function() {
      it('should call taglistgroups successfully', function(done) {
        //uncomment below and update the code to test taglistgroups
        //instance.taglistgroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsave', function() {
      it('should call tagsave successfully', function(done) {
        //uncomment below and update the code to test tagsave
        //instance.tagsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsearch', function() {
      it('should call tagsearch successfully', function(done) {
        //uncomment below and update the code to test tagsearch
        //instance.tagsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateaddimage', function() {
      it('should call templateaddimage successfully', function(done) {
        //uncomment below and update the code to test templateaddimage
        //instance.templateaddimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatedelete', function() {
      it('should call templatedelete successfully', function(done) {
        //uncomment below and update the code to test templatedelete
        //instance.templatedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateemail', function() {
      it('should call templateemail successfully', function(done) {
        //uncomment below and update the code to test templateemail
        //instance.templateemail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templategenerate', function() {
      it('should call templategenerate successfully', function(done) {
        //uncomment below and update the code to test templategenerate
        //instance.templategenerate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateget', function() {
      it('should call templateget successfully', function(done) {
        //uncomment below and update the code to test templateget
        //instance.templateget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templategetgenerated', function() {
      it('should call templategetgenerated successfully', function(done) {
        //uncomment below and update the code to test templategetgenerated
        //instance.templategetgenerated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatelist', function() {
      it('should call templatelist successfully', function(done) {
        //uncomment below and update the code to test templatelist
        //instance.templatelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatelistsources', function() {
      it('should call templatelistsources successfully', function(done) {
        //uncomment below and update the code to test templatelistsources
        //instance.templatelistsources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesave', function() {
      it('should call templatesave successfully', function(done) {
        //uncomment below and update the code to test templatesave
        //instance.templatesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesavelayout', function() {
      it('should call templatesavelayout successfully', function(done) {
        //uncomment below and update the code to test templatesavelayout
        //instance.templatesavelayout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termdelete', function() {
      it('should call termdelete successfully', function(done) {
        //uncomment below and update the code to test termdelete
        //instance.termdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termget', function() {
      it('should call termget successfully', function(done) {
        //uncomment below and update the code to test termget
        //instance.termget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termlist', function() {
      it('should call termlist successfully', function(done) {
        //uncomment below and update the code to test termlist
        //instance.termlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termsave', function() {
      it('should call termsave successfully', function(done) {
        //uncomment below and update the code to test termsave
        //instance.termsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textcreditremaining', function() {
      it('should call textcreditremaining successfully', function(done) {
        //uncomment below and update the code to test textcreditremaining
        //instance.textcreditremaining(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('texttoimage', function() {
      it('should call texttoimage successfully', function(done) {
        //uncomment below and update the code to test texttoimage
        //instance.texttoimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationget', function() {
      it('should call translationget successfully', function(done) {
        //uncomment below and update the code to test translationget
        //instance.translationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationgetcachefile', function() {
      it('should call translationgetcachefile successfully', function(done) {
        //uncomment below and update the code to test translationgetcachefile
        //instance.translationgetcachefile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationlist', function() {
      it('should call translationlist successfully', function(done) {
        //uncomment below and update the code to test translationlist
        //instance.translationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationsave', function() {
      it('should call translationsave successfully', function(done) {
        //uncomment below and update the code to test translationsave
        //instance.translationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userchangepwd', function() {
      it('should call userchangepwd successfully', function(done) {
        //uncomment below and update the code to test userchangepwd
        //instance.userchangepwd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userchangepwdbyreq', function() {
      it('should call userchangepwdbyreq successfully', function(done) {
        //uncomment below and update the code to test userchangepwdbyreq
        //instance.userchangepwdbyreq(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userdelete', function() {
      it('should call userdelete successfully', function(done) {
        //uncomment below and update the code to test userdelete
        //instance.userdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userfindsimilar', function() {
      it('should call userfindsimilar successfully', function(done) {
        //uncomment below and update the code to test userfindsimilar
        //instance.userfindsimilar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userget', function() {
      it('should call userget successfully', function(done) {
        //uncomment below and update the code to test userget
        //instance.userget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergetbycard', function() {
      it('should call usergetbycard successfully', function(done) {
        //uncomment below and update the code to test usergetbycard
        //instance.usergetbycard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupaddmember', function() {
      it('should call usergroupaddmember successfully', function(done) {
        //uncomment below and update the code to test usergroupaddmember
        //instance.usergroupaddmember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupdelete', function() {
      it('should call usergroupdelete successfully', function(done) {
        //uncomment below and update the code to test usergroupdelete
        //instance.usergroupdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupget', function() {
      it('should call usergroupget successfully', function(done) {
        //uncomment below and update the code to test usergroupget
        //instance.usergroupget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupgetmembers', function() {
      it('should call usergroupgetmembers successfully', function(done) {
        //uncomment below and update the code to test usergroupgetmembers
        //instance.usergroupgetmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupgetuser', function() {
      it('should call usergroupgetuser successfully', function(done) {
        //uncomment below and update the code to test usergroupgetuser
        //instance.usergroupgetuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergrouplist', function() {
      it('should call usergrouplist successfully', function(done) {
        //uncomment below and update the code to test usergrouplist
        //instance.usergrouplist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergrouprefresh', function() {
      it('should call usergrouprefresh successfully', function(done) {
        //uncomment below and update the code to test usergrouprefresh
        //instance.usergrouprefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupremovemember', function() {
      it('should call usergroupremovemember successfully', function(done) {
        //uncomment below and update the code to test usergroupremovemember
        //instance.usergroupremovemember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupsave', function() {
      it('should call usergroupsave successfully', function(done) {
        //uncomment below and update the code to test usergroupsave
        //instance.usergroupsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergrouptagmembers', function() {
      it('should call usergrouptagmembers successfully', function(done) {
        //uncomment below and update the code to test usergrouptagmembers
        //instance.usergrouptagmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupuntagmembers', function() {
      it('should call usergroupuntagmembers successfully', function(done) {
        //uncomment below and update the code to test usergroupuntagmembers
        //instance.usergroupuntagmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userlist', function() {
      it('should call userlist successfully', function(done) {
        //uncomment below and update the code to test userlist
        //instance.userlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userloadphoto', function() {
      it('should call userloadphoto successfully', function(done) {
        //uncomment below and update the code to test userloadphoto
        //instance.userloadphoto(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usermovedata', function() {
      it('should call usermovedata successfully', function(done) {
        //uncomment below and update the code to test usermovedata
        //instance.usermovedata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofiledelete', function() {
      it('should call userprofiledelete successfully', function(done) {
        //uncomment below and update the code to test userprofiledelete
        //instance.userprofiledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofileget', function() {
      it('should call userprofileget successfully', function(done) {
        //uncomment below and update the code to test userprofileget
        //instance.userprofileget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilegetallview', function() {
      it('should call userprofilegetallview successfully', function(done) {
        //uncomment below and update the code to test userprofilegetallview
        //instance.userprofilegetallview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilelist', function() {
      it('should call userprofilelist successfully', function(done) {
        //uncomment below and update the code to test userprofilelist
        //instance.userprofilelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilelistquestions', function() {
      it('should call userprofilelistquestions successfully', function(done) {
        //uncomment below and update the code to test userprofilelistquestions
        //instance.userprofilelistquestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilepreparestats', function() {
      it('should call userprofilepreparestats successfully', function(done) {
        //uncomment below and update the code to test userprofilepreparestats
        //instance.userprofilepreparestats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilesave', function() {
      it('should call userprofilesave successfully', function(done) {
        //uncomment below and update the code to test userprofilesave
        //instance.userprofilesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userprofilesaveanswers', function() {
      it('should call userprofilesaveanswers successfully', function(done) {
        //uncomment below and update the code to test userprofilesaveanswers
        //instance.userprofilesaveanswers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userrequestpwdchange', function() {
      it('should call userrequestpwdchange successfully', function(done) {
        //uncomment below and update the code to test userrequestpwdchange
        //instance.userrequestpwdchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersave', function() {
      it('should call usersave successfully', function(done) {
        //uncomment below and update the code to test usersave
        //instance.usersave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersavepwdchange', function() {
      it('should call usersavepwdchange successfully', function(done) {
        //uncomment below and update the code to test usersavepwdchange
        //instance.usersavepwdchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingsget', function() {
      it('should call usersettingsget successfully', function(done) {
        //uncomment below and update the code to test usersettingsget
        //instance.usersettingsget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingsgetmultiple', function() {
      it('should call usersettingsgetmultiple successfully', function(done) {
        //uncomment below and update the code to test usersettingsgetmultiple
        //instance.usersettingsgetmultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingssave', function() {
      it('should call usersettingssave successfully', function(done) {
        //uncomment below and update the code to test usersettingssave
        //instance.usersettingssave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingssavemultiple', function() {
      it('should call usersettingssavemultiple successfully', function(done) {
        //uncomment below and update the code to test usersettingssavemultiple
        //instance.usersettingssavemultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('version', function() {
      it('should call version successfully', function(done) {
        //uncomment below and update the code to test version
        //instance.version(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtuallineaddmyself', function() {
      it('should call virtuallineaddmyself successfully', function(done) {
        //uncomment below and update the code to test virtuallineaddmyself
        //instance.virtuallineaddmyself(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtuallinelist', function() {
      it('should call virtuallinelist successfully', function(done) {
        //uncomment below and update the code to test virtuallinelist
        //instance.virtuallinelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('virtuallineremovemyself', function() {
      it('should call virtuallineremovemyself successfully', function(done) {
        //uncomment below and update the code to test virtuallineremovemyself
        //instance.virtuallineremovemyself(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglineadduser', function() {
      it('should call waitinglineadduser successfully', function(done) {
        //uncomment below and update the code to test waitinglineadduser
        //instance.waitinglineadduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglinedelete', function() {
      it('should call waitinglinedelete successfully', function(done) {
        //uncomment below and update the code to test waitinglinedelete
        //instance.waitinglinedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglineget', function() {
      it('should call waitinglineget successfully', function(done) {
        //uncomment below and update the code to test waitinglineget
        //instance.waitinglineget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglineisuserin', function() {
      it('should call waitinglineisuserin successfully', function(done) {
        //uncomment below and update the code to test waitinglineisuserin
        //instance.waitinglineisuserin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglinelist', function() {
      it('should call waitinglinelist successfully', function(done) {
        //uncomment below and update the code to test waitinglinelist
        //instance.waitinglinelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglineremoveuser', function() {
      it('should call waitinglineremoveuser successfully', function(done) {
        //uncomment below and update the code to test waitinglineremoveuser
        //instance.waitinglineremoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglinesave', function() {
      it('should call waitinglinesave successfully', function(done) {
        //uncomment below and update the code to test waitinglinesave
        //instance.waitinglinesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('waitinglinesigninuser', function() {
      it('should call waitinglinesigninuser successfully', function(done) {
        //uncomment below and update the code to test waitinglinesigninuser
        //instance.waitinglinesigninuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
