=begin
#AccuTraining OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SessionregApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SessionregApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SessionregApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SessionregApi' do
    it 'should create an instance of SessionregApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SessionregApi)
    end
  end

  # unit tests for sessionreg_addcurrentuser
  # Register current user to an event session
  # Allows the user to register themselves for an event.
  # @param eventid The id of the event.
  # @param sessiondate The date and time when the session starts.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_addcurrentuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_adduser
  # Register users for events
  # Allows the user to register another user for an upcoming event.
  # @param userid The id of the user to add.
  # @param eventid The id of the event.
  # @param sessiondate The date and time when the session starts.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_adduser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_getmysessions
  # View all the sessions the logged user is registered to
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :date Start date to filter the sessions.
  # @return [nil]
  describe 'sessionreg_getmysessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_getsessions
  # Lists the registrations for a specific user
  # Allows the user to view the session registrations for a specified user, provided they have the ability to view that user.
  # @param userid The user id to list sessions.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_getsessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_getsettings
  # Get the settings for session registration
  # Allows the user to view a event&#39;s session registration settings.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :locationid The id of the location to save settings.
  # @option opts [String] :eventid The id of the event to save settings.
  # @option opts [DateTime] :sessiondate The date and time when the session starts.
  # @option opts [Boolean] :noinherit True to get the location/event/session specific settings without looking for the more global settings.
  # @return [nil]
  describe 'sessionreg_getsettings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_getusers
  # Lists the registrations for a specific session
  # Allows the user to view the registration for a specified event session.
  # @param eventid The event id to list sessions.
  # @param sessiondate The date of the session to find.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_getusers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_listsessions
  # List the sessions available for a specific event
  # Allows the user to view all the sessions available for a recurring event.
  # @param eventid The event id to list sessions.
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :sessiondate The date of the session to find.
  # @return [nil]
  describe 'sessionreg_listsessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_listupcoming
  # View a list of upcoming event sessions
  # Allows the user to view the full list of upcoming events.
  # @param date Only sessions in the week of the specified date will be returned.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_listupcoming test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_listupcomingevent
  # View a list of upcoming sessions of a particular event
  # Allows the user to view the upcoming recurring sessions of a specified event.
  # @param date Start date to filter the returned sessions.
  # @param event The id of the event whose sessions will be returned
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_listupcomingevent test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_removecurrentuser
  # Unregister current user from an event session
  # Allows the user to un-register themselves from an event.
  # @param eventid The id of the event.
  # @param sessiondate The date and time when the session starts.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_removecurrentuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_removeuser
  # Removes a user from an event session
  # Allows the user to un-register another user from an event.
  # @param userid The id of the user to remove.
  # @param eventid The id of the event.
  # @param sessiondate The date and time when the session starts.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sessionreg_removeuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sessionreg_savesettings
  # Save the settings for an event&#39;s session registration
  # Allows the user to save the settings for an event.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'sessionreg_savesettings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
