=begin
#AccuTraining OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AdvroleApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdvroleApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AdvroleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdvroleApi' do
    it 'should create an instance of AdvroleApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AdvroleApi)
    end
  end

  # unit tests for advrole_addmissing
  # Adds the missing permissions to a role. Requires access to advrole.save
  # @param roles CSV list of the role ids to check
  # @param permissions CSV list of the permissions to check
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_addmissing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_checkperm
  # Checks the permissions are assigned for the given roles
  # @param roles CSV list of the role ids to check
  # @param permissions CSV list of the permissions to check
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_checkperm test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_delete
  # Delete a role
  # Allows the user to delete a role from the list of available roles.
  # @param id The id of the location to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'advrole_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_deletemapping
  # Delete a role mapping
  # Allows the user to delete a role from its mapped categories on the &#39;Role Mapping&#39; page.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'advrole_deletemapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_get
  # View details of a role
  # Allows the user to view a role and its details.
  # @param id The id of the location to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_list
  # Lists the roles for the current account
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :includepolicies True to include the policies, defaults to false.
  # @option opts [Boolean] :includeinternal True to include the internal roles too.
  # @option opts [String] :name Filter by name of the role.
  # @return [nil]
  describe 'advrole_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_listmaps
  # Lists the maps a roles is mapped to
  # @param roleid The id of the role to list the maps.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_listmaps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_listrolesmapped
  # Lists the roles mappings
  # @param [Hash] opts the optional parameters
  # @option opts [String] :map List only the roles in the specified map.
  # @return [nil]
  describe 'advrole_listrolesmapped test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_listtemplates
  # View a list of role templates
  # Allows the user to view the full list of available role templates.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_listtemplates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_save
  # Create or edit a role
  # Allows the user to create or edit a role&#39;s permissions.
  # @param id The id of the role to save (leave empty to create a new one).
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'advrole_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_savemapping
  # Saves a role mapping
  # Allows the user to add a role to a mapped category on the &#39;Role Mapping&#39; page.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'advrole_savemapping test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for advrole_userupgrade
  # Upgrade a user to another role (requires permission to edit those roles)
  # Allow the user to add a role to another user, given that he has access to view that other user and edit people with that new role.
  # @param userid Id of the user to upgrade
  # @param roleid Id of the role to add
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'advrole_userupgrade test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
