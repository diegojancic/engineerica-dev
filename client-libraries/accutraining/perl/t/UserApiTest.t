=begin comment

AccuTraining OpenAPI 3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::UserApi');

my $api = WWW::OpenAPIClient::UserApi->new();
isa_ok($api, 'WWW::OpenAPIClient::UserApi');

#
# user_changepwd test
#
{
    my $oldpass = undef; # replace NULL with a proper value
    my $newpass = undef; # replace NULL with a proper value
    my $result = $api->user_changepwd(oldpass => $oldpass, newpass => $newpass);
}

#
# user_changepwdbyreq test
#
{
    my $changereq = undef; # replace NULL with a proper value
    my $newpass = undef; # replace NULL with a proper value
    my $result = $api->user_changepwdbyreq(changereq => $changereq, newpass => $newpass);
}

#
# user_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->user_delete(id => $id, body => $body);
}

#
# user_findsimilar test
#
{
    my $currentid = undef; # replace NULL with a proper value
    my $phonenumber = undef; # replace NULL with a proper value
    my $cardnumber = undef; # replace NULL with a proper value
    my $result = $api->user_findsimilar(currentid => $currentid, phonenumber => $phonenumber, cardnumber => $cardnumber);
}

#
# user_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->user_get(id => $id, photosize => $photosize);
}

#
# user_getbycard test
#
{
    my $card = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->user_getbycard(card => $card, photosize => $photosize);
}

#
# user_list test
#
{
    my $from = undef; # replace NULL with a proper value
    my $count = undef; # replace NULL with a proper value
    my $roleid = undef; # replace NULL with a proper value
    my $onlywithoutcard = undef; # replace NULL with a proper value
    my $photosize = undef; # replace NULL with a proper value
    my $result = $api->user_list(from => $from, count => $count, roleid => $roleid, onlywithoutcard => $onlywithoutcard, photosize => $photosize);
}

#
# user_loadphoto test
#
{
    my $upload = undef; # replace NULL with a proper value
    my $filename = undef; # replace NULL with a proper value
    my $userid = undef; # replace NULL with a proper value
    my $automatch = undef; # replace NULL with a proper value
    my $result = $api->user_loadphoto(upload => $upload, filename => $filename, userid => $userid, automatch => $automatch);
}

#
# user_movedata test
#
{
    my $source = undef; # replace NULL with a proper value
    my $destination = undef; # replace NULL with a proper value
    my $result = $api->user_movedata(source => $source, destination => $destination);
}

#
# user_requestpwdchange test
#
{
    my $domain = undef; # replace NULL with a proper value
    my $email = undef; # replace NULL with a proper value
    my $result = $api->user_requestpwdchange(domain => $domain, email => $email);
}

#
# user_save test
#
{
    my $id = undef; # replace NULL with a proper value
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->user_save(id => $id, unknown_base_type => $unknown_base_type);
}

#
# user_savepwdchange test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->user_savepwdchange(unknown_base_type => $unknown_base_type);
}


1;
