=begin comment

AccuTraining OpenAPI 3

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::SessionregApi');

my $api = WWW::OpenAPIClient::SessionregApi->new();
isa_ok($api, 'WWW::OpenAPIClient::SessionregApi');

#
# sessionreg_addcurrentuser test
#
{
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_addcurrentuser(eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_adduser test
#
{
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_adduser(userid => $userid, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_getmysessions test
#
{
    my $date = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_getmysessions(date => $date);
}

#
# sessionreg_getsessions test
#
{
    my $userid = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_getsessions(userid => $userid);
}

#
# sessionreg_getsettings test
#
{
    my $locationid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $noinherit = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_getsettings(locationid => $locationid, eventid => $eventid, sessiondate => $sessiondate, noinherit => $noinherit);
}

#
# sessionreg_getusers test
#
{
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_getusers(eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_listsessions test
#
{
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_listsessions(eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_listupcoming test
#
{
    my $date = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_listupcoming(date => $date);
}

#
# sessionreg_listupcomingevent test
#
{
    my $date = undef; # replace NULL with a proper value
    my $event = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_listupcomingevent(date => $date, event => $event);
}

#
# sessionreg_removecurrentuser test
#
{
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_removecurrentuser(eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_removeuser test
#
{
    my $userid = undef; # replace NULL with a proper value
    my $eventid = undef; # replace NULL with a proper value
    my $sessiondate = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_removeuser(userid => $userid, eventid => $eventid, sessiondate => $sessiondate);
}

#
# sessionreg_savesettings test
#
{
    my $unknown_base_type = undef; # replace NULL with a proper value
    my $result = $api->sessionreg_savesettings(unknown_base_type => $unknown_base_type);
}


1;
