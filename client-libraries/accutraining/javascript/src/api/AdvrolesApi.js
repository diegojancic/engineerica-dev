/**
 * AccuTraining OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Advroles service.
* @module api/AdvrolesApi
* @version 1.0.0
*/
export default class AdvrolesApi {

    /**
    * Constructs a new AdvrolesApi. 
    * @alias module:api/AdvrolesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the advrolesUserlist operation.
     * @callback module:api/AdvrolesApi~advrolesUserlistCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List users. Alias to user.list, use that one instead.
     * @param {Number} from The first record to return.
     * @param {Number} count The max number of records to return.
     * @param {Object} opts Optional parameters
     * @param {String} opts.roleid The id of the role to filter users by, or empty to return all users.
     * @param {String} opts.onlywithoutcard If is 1 then only the users without a card are returned, otherwise all users are returned.
     * @param {Number} opts.photosize The size in pixels of the photo URLs returned. Defaults to 40. If the size specified is not available, a similar one will be returned.
     * @param {module:api/AdvrolesApi~advrolesUserlistCallback} callback The callback function, accepting three arguments: error, data, response
     */
    advrolesUserlist(from, count, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling advrolesUserlist");
      }
      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling advrolesUserlist");
      }

      let pathParams = {
      };
      let queryParams = {
        'from': from,
        'count': count,
        'roleid': opts['roleid'],
        'onlywithoutcard': opts['onlywithoutcard'],
        'photosize': opts['photosize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/advroles/userlist', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
