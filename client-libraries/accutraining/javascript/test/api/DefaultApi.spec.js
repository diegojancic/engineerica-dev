/**
 * AccuCampus OpenAPI 3 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuCampusOpenApi3Documentation);
  }
}(this, function(expect, AccuCampusOpenApi3Documentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuCampusOpenApi3Documentation.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('actionassignmentdelete', function() {
      it('should call actionassignmentdelete successfully', function(done) {
        //uncomment below and update the code to test actionassignmentdelete
        //instance.actionassignmentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentget', function() {
      it('should call actionassignmentget successfully', function(done) {
        //uncomment below and update the code to test actionassignmentget
        //instance.actionassignmentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlist', function() {
      it('should call actionassignmentlist successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlist
        //instance.actionassignmentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlisthistory', function() {
      it('should call actionassignmentlisthistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlisthistory
        //instance.actionassignmentlisthistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlistmine', function() {
      it('should call actionassignmentlistmine successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlistmine
        //instance.actionassignmentlistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentlistpublichistory', function() {
      it('should call actionassignmentlistpublichistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentlistpublichistory
        //instance.actionassignmentlistpublichistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentmarkcomplete', function() {
      it('should call actionassignmentmarkcomplete successfully', function(done) {
        //uncomment below and update the code to test actionassignmentmarkcomplete
        //instance.actionassignmentmarkcomplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentsave', function() {
      it('should call actionassignmentsave successfully', function(done) {
        //uncomment below and update the code to test actionassignmentsave
        //instance.actionassignmentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionassignmentsavehistory', function() {
      it('should call actionassignmentsavehistory successfully', function(done) {
        //uncomment below and update the code to test actionassignmentsavehistory
        //instance.actionassignmentsavehistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemdelete', function() {
      it('should call actionitemdelete successfully', function(done) {
        //uncomment below and update the code to test actionitemdelete
        //instance.actionitemdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemget', function() {
      it('should call actionitemget successfully', function(done) {
        //uncomment below and update the code to test actionitemget
        //instance.actionitemget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemlist', function() {
      it('should call actionitemlist successfully', function(done) {
        //uncomment below and update the code to test actionitemlist
        //instance.actionitemlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionitemsave', function() {
      it('should call actionitemsave successfully', function(done) {
        //uncomment below and update the code to test actionitemsave
        //instance.actionitemsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionloglist', function() {
      it('should call actionloglist successfully', function(done) {
        //uncomment below and update the code to test actionloglist
        //instance.actionloglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackassign', function() {
      it('should call actionpackassign successfully', function(done) {
        //uncomment below and update the code to test actionpackassign
        //instance.actionpackassign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackdelete', function() {
      it('should call actionpackdelete successfully', function(done) {
        //uncomment below and update the code to test actionpackdelete
        //instance.actionpackdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpackget', function() {
      it('should call actionpackget successfully', function(done) {
        //uncomment below and update the code to test actionpackget
        //instance.actionpackget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpacklist', function() {
      it('should call actionpacklist successfully', function(done) {
        //uncomment below and update the code to test actionpacklist
        //instance.actionpacklist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actionpacksave', function() {
      it('should call actionpacksave successfully', function(done) {
        //uncomment below and update the code to test actionpacksave
        //instance.actionpacksave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypedelete', function() {
      it('should call actiontypedelete successfully', function(done) {
        //uncomment below and update the code to test actiontypedelete
        //instance.actiontypedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypeget', function() {
      it('should call actiontypeget successfully', function(done) {
        //uncomment below and update the code to test actiontypeget
        //instance.actiontypeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypelist', function() {
      it('should call actiontypelist successfully', function(done) {
        //uncomment below and update the code to test actiontypelist
        //instance.actiontypelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('actiontypesave', function() {
      it('should call actiontypesave successfully', function(done) {
        //uncomment below and update the code to test actiontypesave
        //instance.actiontypesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleaddmissing', function() {
      it('should call advroleaddmissing successfully', function(done) {
        //uncomment below and update the code to test advroleaddmissing
        //instance.advroleaddmissing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolecheckperm', function() {
      it('should call advrolecheckperm successfully', function(done) {
        //uncomment below and update the code to test advrolecheckperm
        //instance.advrolecheckperm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroledelete', function() {
      it('should call advroledelete successfully', function(done) {
        //uncomment below and update the code to test advroledelete
        //instance.advroledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroledeletemapping', function() {
      it('should call advroledeletemapping successfully', function(done) {
        //uncomment below and update the code to test advroledeletemapping
        //instance.advroledeletemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleget', function() {
      it('should call advroleget successfully', function(done) {
        //uncomment below and update the code to test advroleget
        //instance.advroleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelist', function() {
      it('should call advrolelist successfully', function(done) {
        //uncomment below and update the code to test advrolelist
        //instance.advrolelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelistmaps', function() {
      it('should call advrolelistmaps successfully', function(done) {
        //uncomment below and update the code to test advrolelistmaps
        //instance.advrolelistmaps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelistrolesmapped', function() {
      it('should call advrolelistrolesmapped successfully', function(done) {
        //uncomment below and update the code to test advrolelistrolesmapped
        //instance.advrolelistrolesmapped(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolelisttemplates', function() {
      it('should call advrolelisttemplates successfully', function(done) {
        //uncomment below and update the code to test advrolelisttemplates
        //instance.advrolelisttemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesave', function() {
      it('should call advrolesave successfully', function(done) {
        //uncomment below and update the code to test advrolesave
        //instance.advrolesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesavemapping', function() {
      it('should call advrolesavemapping successfully', function(done) {
        //uncomment below and update the code to test advrolesavemapping
        //instance.advrolesavemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advrolesuserlist', function() {
      it('should call advrolesuserlist successfully', function(done) {
        //uncomment below and update the code to test advrolesuserlist
        //instance.advrolesuserlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleuserupgrade', function() {
      it('should call advroleuserupgrade successfully', function(done) {
        //uncomment below and update the code to test advroleuserupgrade
        //instance.advroleuserupgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsharegetphone', function() {
      it('should call appsharegetphone successfully', function(done) {
        //uncomment below and update the code to test appsharegetphone
        //instance.appsharegetphone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsharesendtext', function() {
      it('should call appsharesendtext successfully', function(done) {
        //uncomment below and update the code to test appsharesendtext
        //instance.appsharesendtext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentdelete', function() {
      it('should call attendancelogcommentdelete successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentdelete
        //instance.attendancelogcommentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentget', function() {
      it('should call attendancelogcommentget successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentget
        //instance.attendancelogcommentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentlist', function() {
      it('should call attendancelogcommentlist successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentlist
        //instance.attendancelogcommentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogcommentsave', function() {
      it('should call attendancelogcommentsave successfully', function(done) {
        //uncomment below and update the code to test attendancelogcommentsave
        //instance.attendancelogcommentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogdelete', function() {
      it('should call attendancelogdelete successfully', function(done) {
        //uncomment below and update the code to test attendancelogdelete
        //instance.attendancelogdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogget', function() {
      it('should call attendancelogget successfully', function(done) {
        //uncomment below and update the code to test attendancelogget
        //instance.attendancelogget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloggetchangehistory', function() {
      it('should call attendanceloggetchangehistory successfully', function(done) {
        //uncomment below and update the code to test attendanceloggetchangehistory
        //instance.attendanceloggetchangehistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloglist', function() {
      it('should call attendanceloglist successfully', function(done) {
        //uncomment below and update the code to test attendanceloglist
        //instance.attendanceloglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendanceloglistmine', function() {
      it('should call attendanceloglistmine successfully', function(done) {
        //uncomment below and update the code to test attendanceloglistmine
        //instance.attendanceloglistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogsave', function() {
      it('should call attendancelogsave successfully', function(done) {
        //uncomment below and update the code to test attendancelogsave
        //instance.attendancelogsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogsignout', function() {
      it('should call attendancelogsignout successfully', function(done) {
        //uncomment below and update the code to test attendancelogsignout
        //instance.attendancelogsignout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attendancelogwhosin', function() {
      it('should call attendancelogwhosin successfully', function(done) {
        //uncomment below and update the code to test attendancelogwhosin
        //instance.attendancelogwhosin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bgjobgetstatus', function() {
      it('should call bgjobgetstatus successfully', function(done) {
        //uncomment below and update the code to test bgjobgetstatus
        //instance.bgjobgetstatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callExport', function() {
      it('should call callExport successfully', function(done) {
        //uncomment below and update the code to test callExport
        //instance.callExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callImport', function() {
      it('should call callImport successfully', function(done) {
        //uncomment below and update the code to test callImport
        //instance.callImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('captchagetchallenge', function() {
      it('should call captchagetchallenge successfully', function(done) {
        //uncomment below and update the code to test captchagetchallenge
        //instance.captchagetchallenge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('captchagetimage', function() {
      it('should call captchagetimage successfully', function(done) {
        //uncomment below and update the code to test captchagetimage
        //instance.captchagetimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changelog', function() {
      it('should call changelog successfully', function(done) {
        //uncomment below and update the code to test changelog
        //instance.changelog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientget', function() {
      it('should call clientget successfully', function(done) {
        //uncomment below and update the code to test clientget
        //instance.clientget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientlist', function() {
      it('should call clientlist successfully', function(done) {
        //uncomment below and update the code to test clientlist
        //instance.clientlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientsave', function() {
      it('should call clientsave successfully', function(done) {
        //uncomment below and update the code to test clientsave
        //instance.clientsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clientsendmessage', function() {
      it('should call clientsendmessage successfully', function(done) {
        //uncomment below and update the code to test clientsendmessage
        //instance.clientsendmessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentdelete', function() {
      it('should call departmentdelete successfully', function(done) {
        //uncomment below and update the code to test departmentdelete
        //instance.departmentdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentget', function() {
      it('should call departmentget successfully', function(done) {
        //uncomment below and update the code to test departmentget
        //instance.departmentget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentlist', function() {
      it('should call departmentlist successfully', function(done) {
        //uncomment below and update the code to test departmentlist
        //instance.departmentlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('departmentsave', function() {
      it('should call departmentsave successfully', function(done) {
        //uncomment below and update the code to test departmentsave
        //instance.departmentsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('doc', function() {
      it('should call doc successfully', function(done) {
        //uncomment below and update the code to test doc
        //instance.doc(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('easyloginaddbgimage', function() {
      it('should call easyloginaddbgimage successfully', function(done) {
        //uncomment below and update the code to test easyloginaddbgimage
        //instance.easyloginaddbgimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventdelete', function() {
      it('should call eventdelete successfully', function(done) {
        //uncomment below and update the code to test eventdelete
        //instance.eventdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventget', function() {
      it('should call eventget successfully', function(done) {
        //uncomment below and update the code to test eventget
        //instance.eventget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventgetsessionsbydate', function() {
      it('should call eventgetsessionsbydate successfully', function(done) {
        //uncomment below and update the code to test eventgetsessionsbydate
        //instance.eventgetsessionsbydate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventlist', function() {
      it('should call eventlist successfully', function(done) {
        //uncomment below and update the code to test eventlist
        //instance.eventlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsave', function() {
      it('should call eventsave successfully', function(done) {
        //uncomment below and update the code to test eventsave
        //instance.eventsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsearchgroup', function() {
      it('should call eventsearchgroup successfully', function(done) {
        //uncomment below and update the code to test eventsearchgroup
        //instance.eventsearchgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportlisttypes', function() {
      it('should call exportlisttypes successfully', function(done) {
        //uncomment below and update the code to test exportlisttypes
        //instance.exportlisttypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('featurelist', function() {
      it('should call featurelist successfully', function(done) {
        //uncomment below and update the code to test featurelist
        //instance.featurelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaylist', function() {
      it('should call holidaylist successfully', function(done) {
        //uncomment below and update the code to test holidaylist
        //instance.holidaylist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaysave', function() {
      it('should call holidaysave successfully', function(done) {
        //uncomment below and update the code to test holidaysave
        //instance.holidaysave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('holidaysuggest', function() {
      it('should call holidaysuggest successfully', function(done) {
        //uncomment below and update the code to test holidaysuggest
        //instance.holidaysuggest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importlisttypes', function() {
      it('should call importlisttypes successfully', function(done) {
        //uncomment below and update the code to test importlisttypes
        //instance.importlisttypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licenseacceptagreement', function() {
      it('should call licenseacceptagreement successfully', function(done) {
        //uncomment below and update the code to test licenseacceptagreement
        //instance.licenseacceptagreement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licensegetagreementstatus', function() {
      it('should call licensegetagreementstatus successfully', function(done) {
        //uncomment below and update the code to test licensegetagreementstatus
        //instance.licensegetagreementstatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licensegetcurrent', function() {
      it('should call licensegetcurrent successfully', function(done) {
        //uncomment below and update the code to test licensegetcurrent
        //instance.licensegetcurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licenserenew', function() {
      it('should call licenserenew successfully', function(done) {
        //uncomment below and update the code to test licenserenew
        //instance.licenserenew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listtimezones', function() {
      it('should call listtimezones successfully', function(done) {
        //uncomment below and update the code to test listtimezones
        //instance.listtimezones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationdelete', function() {
      it('should call locationdelete successfully', function(done) {
        //uncomment below and update the code to test locationdelete
        //instance.locationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationget', function() {
      it('should call locationget successfully', function(done) {
        //uncomment below and update the code to test locationget
        //instance.locationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationlist', function() {
      it('should call locationlist successfully', function(done) {
        //uncomment below and update the code to test locationlist
        //instance.locationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsave', function() {
      it('should call locationsave successfully', function(done) {
        //uncomment below and update the code to test locationsave
        //instance.locationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('login', function() {
      it('should call login successfully', function(done) {
        //uncomment below and update the code to test login
        //instance.login(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logout', function() {
      it('should call logout successfully', function(done) {
        //uncomment below and update the code to test logout
        //instance.logout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportdelete', function() {
      it('should call memorizedreportdelete successfully', function(done) {
        //uncomment below and update the code to test memorizedreportdelete
        //instance.memorizedreportdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportget', function() {
      it('should call memorizedreportget successfully', function(done) {
        //uncomment below and update the code to test memorizedreportget
        //instance.memorizedreportget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportlist', function() {
      it('should call memorizedreportlist successfully', function(done) {
        //uncomment below and update the code to test memorizedreportlist
        //instance.memorizedreportlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('memorizedreportsave', function() {
      it('should call memorizedreportsave successfully', function(done) {
        //uncomment below and update the code to test memorizedreportsave
        //instance.memorizedreportsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('menugetitems', function() {
      it('should call menugetitems successfully', function(done) {
        //uncomment below and update the code to test menugetitems
        //instance.menugetitems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myaccount', function() {
      it('should call myaccount successfully', function(done) {
        //uncomment below and update the code to test myaccount
        //instance.myaccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myianatimezone', function() {
      it('should call myianatimezone successfully', function(done) {
        //uncomment below and update the code to test myianatimezone
        //instance.myianatimezone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myprofile', function() {
      it('should call myprofile successfully', function(done) {
        //uncomment below and update the code to test myprofile
        //instance.myprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('myrights', function() {
      it('should call myrights successfully', function(done) {
        //uncomment below and update the code to test myrights
        //instance.myrights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mysaveprofile', function() {
      it('should call mysaveprofile successfully', function(done) {
        //uncomment below and update the code to test mysaveprofile
        //instance.mysaveprofile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationdelete', function() {
      it('should call notificationdelete successfully', function(done) {
        //uncomment below and update the code to test notificationdelete
        //instance.notificationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationget', function() {
      it('should call notificationget successfully', function(done) {
        //uncomment below and update the code to test notificationget
        //instance.notificationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationgetforstation', function() {
      it('should call notificationgetforstation successfully', function(done) {
        //uncomment below and update the code to test notificationgetforstation
        //instance.notificationgetforstation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationgetunreadcount', function() {
      it('should call notificationgetunreadcount successfully', function(done) {
        //uncomment below and update the code to test notificationgetunreadcount
        //instance.notificationgetunreadcount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationlist', function() {
      it('should call notificationlist successfully', function(done) {
        //uncomment below and update the code to test notificationlist
        //instance.notificationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationlistmine', function() {
      it('should call notificationlistmine successfully', function(done) {
        //uncomment below and update the code to test notificationlistmine
        //instance.notificationlistmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationmarkasread', function() {
      it('should call notificationmarkasread successfully', function(done) {
        //uncomment below and update the code to test notificationmarkasread
        //instance.notificationmarkasread(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationmarkasunread', function() {
      it('should call notificationmarkasunread successfully', function(done) {
        //uncomment below and update the code to test notificationmarkasunread
        //instance.notificationmarkasunread(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsend', function() {
      it('should call notificationsend successfully', function(done) {
        //uncomment below and update the code to test notificationsend
        //instance.notificationsend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsendonscreen', function() {
      it('should call notificationsendonscreen successfully', function(done) {
        //uncomment below and update the code to test notificationsendonscreen
        //instance.notificationsendonscreen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicdelete', function() {
      it('should call notificationtopicdelete successfully', function(done) {
        //uncomment below and update the code to test notificationtopicdelete
        //instance.notificationtopicdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicget', function() {
      it('should call notificationtopicget successfully', function(done) {
        //uncomment below and update the code to test notificationtopicget
        //instance.notificationtopicget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopiclist', function() {
      it('should call notificationtopiclist successfully', function(done) {
        //uncomment below and update the code to test notificationtopiclist
        //instance.notificationtopiclist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopiclistsubscribe', function() {
      it('should call notificationtopiclistsubscribe successfully', function(done) {
        //uncomment below and update the code to test notificationtopiclistsubscribe
        //instance.notificationtopiclistsubscribe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationtopicsave', function() {
      it('should call notificationtopicsave successfully', function(done) {
        //uncomment below and update the code to test notificationtopicsave
        //instance.notificationtopicsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pushderegister', function() {
      it('should call pushderegister successfully', function(done) {
        //uncomment below and update the code to test pushderegister
        //instance.pushderegister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pushregister', function() {
      it('should call pushregister successfully', function(done) {
        //uncomment below and update the code to test pushregister
        //instance.pushregister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrlabelsprint', function() {
      it('should call qrlabelsprint successfully', function(done) {
        //uncomment below and update the code to test qrlabelsprint
        //instance.qrlabelsprint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrloginget', function() {
      it('should call qrloginget successfully', function(done) {
        //uncomment below and update the code to test qrloginget
        //instance.qrloginget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('qrloginlogin', function() {
      it('should call qrloginlogin successfully', function(done) {
        //uncomment below and update the code to test qrloginlogin
        //instance.qrloginlogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpaneldeletewidget', function() {
      it('should call quickpaneldeletewidget successfully', function(done) {
        //uncomment below and update the code to test quickpaneldeletewidget
        //instance.quickpaneldeletewidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelfetchwidget', function() {
      it('should call quickpanelfetchwidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelfetchwidget
        //instance.quickpanelfetchwidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelgetwidget', function() {
      it('should call quickpanelgetwidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelgetwidget
        //instance.quickpanelgetwidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelinit', function() {
      it('should call quickpanelinit successfully', function(done) {
        //uncomment below and update the code to test quickpanelinit
        //instance.quickpanelinit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanellistwidgets', function() {
      it('should call quickpanellistwidgets successfully', function(done) {
        //uncomment below and update the code to test quickpanellistwidgets
        //instance.quickpanellistwidgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanellistwidgettypes', function() {
      it('should call quickpanellistwidgettypes successfully', function(done) {
        //uncomment below and update the code to test quickpanellistwidgettypes
        //instance.quickpanellistwidgettypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelreorderwidgets', function() {
      it('should call quickpanelreorderwidgets successfully', function(done) {
        //uncomment below and update the code to test quickpanelreorderwidgets
        //instance.quickpanelreorderwidgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('quickpanelsavewidget', function() {
      it('should call quickpanelsavewidget successfully', function(done) {
        //uncomment below and update the code to test quickpanelsavewidget
        //instance.quickpanelsavewidget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportlist', function() {
      it('should call reportlist successfully', function(done) {
        //uncomment below and update the code to test reportlist
        //instance.reportlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportpermissionsbyuser', function() {
      it('should call reportpermissionsbyuser successfully', function(done) {
        //uncomment below and update the code to test reportpermissionsbyuser
        //instance.reportpermissionsbyuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportprepare', function() {
      it('should call reportprepare successfully', function(done) {
        //uncomment below and update the code to test reportprepare
        //instance.reportprepare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportquery', function() {
      it('should call reportquery successfully', function(done) {
        //uncomment below and update the code to test reportquery
        //instance.reportquery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rolelist', function() {
      it('should call rolelist successfully', function(done) {
        //uncomment below and update the code to test rolelist
        //instance.rolelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ruledelete', function() {
      it('should call ruledelete successfully', function(done) {
        //uncomment below and update the code to test ruledelete
        //instance.ruledelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ruleget', function() {
      it('should call ruleget successfully', function(done) {
        //uncomment below and update the code to test ruleget
        //instance.ruleget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulegeteventtype', function() {
      it('should call rulegeteventtype successfully', function(done) {
        //uncomment below and update the code to test rulegeteventtype
        //instance.rulegeteventtype(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelist', function() {
      it('should call rulelist successfully', function(done) {
        //uncomment below and update the code to test rulelist
        //instance.rulelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelistactions', function() {
      it('should call rulelistactions successfully', function(done) {
        //uncomment below and update the code to test rulelistactions
        //instance.rulelistactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelisteventtypes', function() {
      it('should call rulelisteventtypes successfully', function(done) {
        //uncomment below and update the code to test rulelisteventtypes
        //instance.rulelisteventtypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulelisthttprequests', function() {
      it('should call rulelisthttprequests successfully', function(done) {
        //uncomment below and update the code to test rulelisthttprequests
        //instance.rulelisthttprequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rulesave', function() {
      it('should call rulesave successfully', function(done) {
        //uncomment below and update the code to test rulesave
        //instance.rulesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('search', function() {
      it('should call search successfully', function(done) {
        //uncomment below and update the code to test search
        //instance.search(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchgetentities', function() {
      it('should call searchgetentities successfully', function(done) {
        //uncomment below and update the code to test searchgetentities
        //instance.searchgetentities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassesspermission', function() {
      it('should call securityassesspermission successfully', function(done) {
        //uncomment below and update the code to test securityassesspermission
        //instance.securityassesspermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessrole', function() {
      it('should call securityassessrole successfully', function(done) {
        //uncomment below and update the code to test securityassessrole
        //instance.securityassessrole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessscope', function() {
      it('should call securityassessscope successfully', function(done) {
        //uncomment below and update the code to test securityassessscope
        //instance.securityassessscope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityassessuser', function() {
      it('should call securityassessuser successfully', function(done) {
        //uncomment below and update the code to test securityassessuser
        //instance.securityassessuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregaddcurrentuser', function() {
      it('should call sessionregaddcurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregaddcurrentuser
        //instance.sessionregaddcurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregadduser', function() {
      it('should call sessionregadduser successfully', function(done) {
        //uncomment below and update the code to test sessionregadduser
        //instance.sessionregadduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetmysessions', function() {
      it('should call sessionreggetmysessions successfully', function(done) {
        //uncomment below and update the code to test sessionreggetmysessions
        //instance.sessionreggetmysessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetsessions', function() {
      it('should call sessionreggetsessions successfully', function(done) {
        //uncomment below and update the code to test sessionreggetsessions
        //instance.sessionreggetsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetsettings', function() {
      it('should call sessionreggetsettings successfully', function(done) {
        //uncomment below and update the code to test sessionreggetsettings
        //instance.sessionreggetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreggetusers', function() {
      it('should call sessionreggetusers successfully', function(done) {
        //uncomment below and update the code to test sessionreggetusers
        //instance.sessionreggetusers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistsessions', function() {
      it('should call sessionreglistsessions successfully', function(done) {
        //uncomment below and update the code to test sessionreglistsessions
        //instance.sessionreglistsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistupcoming', function() {
      it('should call sessionreglistupcoming successfully', function(done) {
        //uncomment below and update the code to test sessionreglistupcoming
        //instance.sessionreglistupcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionreglistupcomingevent', function() {
      it('should call sessionreglistupcomingevent successfully', function(done) {
        //uncomment below and update the code to test sessionreglistupcomingevent
        //instance.sessionreglistupcomingevent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregremovecurrentuser', function() {
      it('should call sessionregremovecurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregremovecurrentuser
        //instance.sessionregremovecurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregremoveuser', function() {
      it('should call sessionregremoveuser successfully', function(done) {
        //uncomment below and update the code to test sessionregremoveuser
        //instance.sessionregremoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregsavesettings', function() {
      it('should call sessionregsavesettings successfully', function(done) {
        //uncomment below and update the code to test sessionregsavesettings
        //instance.sessionregsavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingaddlogo', function() {
      it('should call settingaddlogo successfully', function(done) {
        //uncomment below and update the code to test settingaddlogo
        //instance.settingaddlogo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingget', function() {
      it('should call settingget successfully', function(done) {
        //uncomment below and update the code to test settingget
        //instance.settingget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingsave', function() {
      it('should call settingsave successfully', function(done) {
        //uncomment below and update the code to test settingsave
        //instance.settingsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('settingviewgeneral', function() {
      it('should call settingviewgeneral successfully', function(done) {
        //uncomment below and update the code to test settingviewgeneral
        //instance.settingviewgeneral(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssogeneratekey', function() {
      it('should call ssogeneratekey successfully', function(done) {
        //uncomment below and update the code to test ssogeneratekey
        //instance.ssogeneratekey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssogetsettings', function() {
      it('should call ssogetsettings successfully', function(done) {
        //uncomment below and update the code to test ssogetsettings
        //instance.ssogetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssoissuetoken', function() {
      it('should call ssoissuetoken successfully', function(done) {
        //uncomment below and update the code to test ssoissuetoken
        //instance.ssoissuetoken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ssosavesettings', function() {
      it('should call ssosavesettings successfully', function(done) {
        //uncomment below and update the code to test ssosavesettings
        //instance.ssosavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationdelete', function() {
      it('should call stationdelete successfully', function(done) {
        //uncomment below and update the code to test stationdelete
        //instance.stationdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationget', function() {
      it('should call stationget successfully', function(done) {
        //uncomment below and update the code to test stationget
        //instance.stationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetcurrentterms', function() {
      it('should call stationgetcurrentterms successfully', function(done) {
        //uncomment below and update the code to test stationgetcurrentterms
        //instance.stationgetcurrentterms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetinfo', function() {
      it('should call stationgetinfo successfully', function(done) {
        //uncomment below and update the code to test stationgetinfo
        //instance.stationgetinfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationgetlicense', function() {
      it('should call stationgetlicense successfully', function(done) {
        //uncomment below and update the code to test stationgetlicense
        //instance.stationgetlicense(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationlist', function() {
      it('should call stationlist successfully', function(done) {
        //uncomment below and update the code to test stationlist
        //instance.stationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationsave', function() {
      it('should call stationsave successfully', function(done) {
        //uncomment below and update the code to test stationsave
        //instance.stationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stationunlock', function() {
      it('should call stationunlock successfully', function(done) {
        //uncomment below and update the code to test stationunlock
        //instance.stationunlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipedelete', function() {
      it('should call swipedelete successfully', function(done) {
        //uncomment below and update the code to test swipedelete
        //instance.swipedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipeget', function() {
      it('should call swipeget successfully', function(done) {
        //uncomment below and update the code to test swipeget
        //instance.swipeget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipelist', function() {
      it('should call swipelist successfully', function(done) {
        //uncomment below and update the code to test swipelist
        //instance.swipelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipesave', function() {
      it('should call swipesave successfully', function(done) {
        //uncomment below and update the code to test swipesave
        //instance.swipesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('swipesaveanonym', function() {
      it('should call swipesaveanonym successfully', function(done) {
        //uncomment below and update the code to test swipesaveanonym
        //instance.swipesaveanonym(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagdelete', function() {
      it('should call tagdelete successfully', function(done) {
        //uncomment below and update the code to test tagdelete
        //instance.tagdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagget', function() {
      it('should call tagget successfully', function(done) {
        //uncomment below and update the code to test tagget
        //instance.tagget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taglist', function() {
      it('should call taglist successfully', function(done) {
        //uncomment below and update the code to test taglist
        //instance.taglist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('taglistgroups', function() {
      it('should call taglistgroups successfully', function(done) {
        //uncomment below and update the code to test taglistgroups
        //instance.taglistgroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsave', function() {
      it('should call tagsave successfully', function(done) {
        //uncomment below and update the code to test tagsave
        //instance.tagsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsearch', function() {
      it('should call tagsearch successfully', function(done) {
        //uncomment below and update the code to test tagsearch
        //instance.tagsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateaddimage', function() {
      it('should call templateaddimage successfully', function(done) {
        //uncomment below and update the code to test templateaddimage
        //instance.templateaddimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatedelete', function() {
      it('should call templatedelete successfully', function(done) {
        //uncomment below and update the code to test templatedelete
        //instance.templatedelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateemail', function() {
      it('should call templateemail successfully', function(done) {
        //uncomment below and update the code to test templateemail
        //instance.templateemail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templategenerate', function() {
      it('should call templategenerate successfully', function(done) {
        //uncomment below and update the code to test templategenerate
        //instance.templategenerate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templateget', function() {
      it('should call templateget successfully', function(done) {
        //uncomment below and update the code to test templateget
        //instance.templateget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templategetgenerated', function() {
      it('should call templategetgenerated successfully', function(done) {
        //uncomment below and update the code to test templategetgenerated
        //instance.templategetgenerated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatelist', function() {
      it('should call templatelist successfully', function(done) {
        //uncomment below and update the code to test templatelist
        //instance.templatelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatelistsources', function() {
      it('should call templatelistsources successfully', function(done) {
        //uncomment below and update the code to test templatelistsources
        //instance.templatelistsources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesave', function() {
      it('should call templatesave successfully', function(done) {
        //uncomment below and update the code to test templatesave
        //instance.templatesave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesavelayout', function() {
      it('should call templatesavelayout successfully', function(done) {
        //uncomment below and update the code to test templatesavelayout
        //instance.templatesavelayout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termdelete', function() {
      it('should call termdelete successfully', function(done) {
        //uncomment below and update the code to test termdelete
        //instance.termdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termget', function() {
      it('should call termget successfully', function(done) {
        //uncomment below and update the code to test termget
        //instance.termget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termlist', function() {
      it('should call termlist successfully', function(done) {
        //uncomment below and update the code to test termlist
        //instance.termlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('termsave', function() {
      it('should call termsave successfully', function(done) {
        //uncomment below and update the code to test termsave
        //instance.termsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('textcreditremaining', function() {
      it('should call textcreditremaining successfully', function(done) {
        //uncomment below and update the code to test textcreditremaining
        //instance.textcreditremaining(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('texttoimage', function() {
      it('should call texttoimage successfully', function(done) {
        //uncomment below and update the code to test texttoimage
        //instance.texttoimage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationget', function() {
      it('should call translationget successfully', function(done) {
        //uncomment below and update the code to test translationget
        //instance.translationget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationgetcachefile', function() {
      it('should call translationgetcachefile successfully', function(done) {
        //uncomment below and update the code to test translationgetcachefile
        //instance.translationgetcachefile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationlist', function() {
      it('should call translationlist successfully', function(done) {
        //uncomment below and update the code to test translationlist
        //instance.translationlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translationsave', function() {
      it('should call translationsave successfully', function(done) {
        //uncomment below and update the code to test translationsave
        //instance.translationsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userchangepwd', function() {
      it('should call userchangepwd successfully', function(done) {
        //uncomment below and update the code to test userchangepwd
        //instance.userchangepwd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userchangepwdbyreq', function() {
      it('should call userchangepwdbyreq successfully', function(done) {
        //uncomment below and update the code to test userchangepwdbyreq
        //instance.userchangepwdbyreq(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userdelete', function() {
      it('should call userdelete successfully', function(done) {
        //uncomment below and update the code to test userdelete
        //instance.userdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userfindsimilar', function() {
      it('should call userfindsimilar successfully', function(done) {
        //uncomment below and update the code to test userfindsimilar
        //instance.userfindsimilar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userget', function() {
      it('should call userget successfully', function(done) {
        //uncomment below and update the code to test userget
        //instance.userget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergetbycard', function() {
      it('should call usergetbycard successfully', function(done) {
        //uncomment below and update the code to test usergetbycard
        //instance.usergetbycard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupaddmember', function() {
      it('should call usergroupaddmember successfully', function(done) {
        //uncomment below and update the code to test usergroupaddmember
        //instance.usergroupaddmember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupdelete', function() {
      it('should call usergroupdelete successfully', function(done) {
        //uncomment below and update the code to test usergroupdelete
        //instance.usergroupdelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupget', function() {
      it('should call usergroupget successfully', function(done) {
        //uncomment below and update the code to test usergroupget
        //instance.usergroupget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupgetmembers', function() {
      it('should call usergroupgetmembers successfully', function(done) {
        //uncomment below and update the code to test usergroupgetmembers
        //instance.usergroupgetmembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupgetuser', function() {
      it('should call usergroupgetuser successfully', function(done) {
        //uncomment below and update the code to test usergroupgetuser
        //instance.usergroupgetuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergrouplist', function() {
      it('should call usergrouplist successfully', function(done) {
        //uncomment below and update the code to test usergrouplist
        //instance.usergrouplist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergrouprefresh', function() {
      it('should call usergrouprefresh successfully', function(done) {
        //uncomment below and update the code to test usergrouprefresh
        //instance.usergrouprefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupremovemember', function() {
      it('should call usergroupremovemember successfully', function(done) {
        //uncomment below and update the code to test usergroupremovemember
        //instance.usergroupremovemember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usergroupsave', function() {
      it('should call usergroupsave successfully', function(done) {
        //uncomment below and update the code to test usergroupsave
        //instance.usergroupsave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userlist', function() {
      it('should call userlist successfully', function(done) {
        //uncomment below and update the code to test userlist
        //instance.userlist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userloadphoto', function() {
      it('should call userloadphoto successfully', function(done) {
        //uncomment below and update the code to test userloadphoto
        //instance.userloadphoto(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usermovedata', function() {
      it('should call usermovedata successfully', function(done) {
        //uncomment below and update the code to test usermovedata
        //instance.usermovedata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userrequestpwdchange', function() {
      it('should call userrequestpwdchange successfully', function(done) {
        //uncomment below and update the code to test userrequestpwdchange
        //instance.userrequestpwdchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersave', function() {
      it('should call usersave successfully', function(done) {
        //uncomment below and update the code to test usersave
        //instance.usersave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersavepwdchange', function() {
      it('should call usersavepwdchange successfully', function(done) {
        //uncomment below and update the code to test usersavepwdchange
        //instance.usersavepwdchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingsget', function() {
      it('should call usersettingsget successfully', function(done) {
        //uncomment below and update the code to test usersettingsget
        //instance.usersettingsget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingsgetmultiple', function() {
      it('should call usersettingsgetmultiple successfully', function(done) {
        //uncomment below and update the code to test usersettingsgetmultiple
        //instance.usersettingsgetmultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingssave', function() {
      it('should call usersettingssave successfully', function(done) {
        //uncomment below and update the code to test usersettingssave
        //instance.usersettingssave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersettingssavemultiple', function() {
      it('should call usersettingssavemultiple successfully', function(done) {
        //uncomment below and update the code to test usersettingssavemultiple
        //instance.usersettingssavemultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertaskdeleteplan', function() {
      it('should call usertaskdeleteplan successfully', function(done) {
        //uncomment below and update the code to test usertaskdeleteplan
        //instance.usertaskdeleteplan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertaskgetmine', function() {
      it('should call usertaskgetmine successfully', function(done) {
        //uncomment below and update the code to test usertaskgetmine
        //instance.usertaskgetmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertaskgetplan', function() {
      it('should call usertaskgetplan successfully', function(done) {
        //uncomment below and update the code to test usertaskgetplan
        //instance.usertaskgetplan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertasklistdefs', function() {
      it('should call usertasklistdefs successfully', function(done) {
        //uncomment below and update the code to test usertasklistdefs
        //instance.usertasklistdefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertasklistplan', function() {
      it('should call usertasklistplan successfully', function(done) {
        //uncomment below and update the code to test usertasklistplan
        //instance.usertasklistplan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usertasksaveplan', function() {
      it('should call usertasksaveplan successfully', function(done) {
        //uncomment below and update the code to test usertasksaveplan
        //instance.usertasksaveplan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('version', function() {
      it('should call version successfully', function(done) {
        //uncomment below and update the code to test version
        //instance.version(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
