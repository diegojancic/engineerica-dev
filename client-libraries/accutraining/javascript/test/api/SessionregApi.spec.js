/**
 * AccuTraining OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuTrainingOpenApi3);
  }
}(this, function(expect, AccuTrainingOpenApi3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuTrainingOpenApi3.SessionregApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SessionregApi', function() {
    describe('sessionregAddcurrentuser', function() {
      it('should call sessionregAddcurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregAddcurrentuser
        //instance.sessionregAddcurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregAdduser', function() {
      it('should call sessionregAdduser successfully', function(done) {
        //uncomment below and update the code to test sessionregAdduser
        //instance.sessionregAdduser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregGetmysessions', function() {
      it('should call sessionregGetmysessions successfully', function(done) {
        //uncomment below and update the code to test sessionregGetmysessions
        //instance.sessionregGetmysessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregGetsessions', function() {
      it('should call sessionregGetsessions successfully', function(done) {
        //uncomment below and update the code to test sessionregGetsessions
        //instance.sessionregGetsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregGetsettings', function() {
      it('should call sessionregGetsettings successfully', function(done) {
        //uncomment below and update the code to test sessionregGetsettings
        //instance.sessionregGetsettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregGetusers', function() {
      it('should call sessionregGetusers successfully', function(done) {
        //uncomment below and update the code to test sessionregGetusers
        //instance.sessionregGetusers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregListsessions', function() {
      it('should call sessionregListsessions successfully', function(done) {
        //uncomment below and update the code to test sessionregListsessions
        //instance.sessionregListsessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregListupcoming', function() {
      it('should call sessionregListupcoming successfully', function(done) {
        //uncomment below and update the code to test sessionregListupcoming
        //instance.sessionregListupcoming(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregListupcomingevent', function() {
      it('should call sessionregListupcomingevent successfully', function(done) {
        //uncomment below and update the code to test sessionregListupcomingevent
        //instance.sessionregListupcomingevent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregRemovecurrentuser', function() {
      it('should call sessionregRemovecurrentuser successfully', function(done) {
        //uncomment below and update the code to test sessionregRemovecurrentuser
        //instance.sessionregRemovecurrentuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregRemoveuser', function() {
      it('should call sessionregRemoveuser successfully', function(done) {
        //uncomment below and update the code to test sessionregRemoveuser
        //instance.sessionregRemoveuser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionregSavesettings', function() {
      it('should call sessionregSavesettings successfully', function(done) {
        //uncomment below and update the code to test sessionregSavesettings
        //instance.sessionregSavesettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
