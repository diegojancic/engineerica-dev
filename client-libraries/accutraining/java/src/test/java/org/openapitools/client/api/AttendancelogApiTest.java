/*
 * AccuTraining OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttendancelogApi
 */
@Ignore
public class AttendancelogApiTest {

    private final AttendancelogApi api = new AttendancelogApi();

    
    /**
     * Delete an attendance log
     *
     * Allows the user to delete an existing attendance log.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogDeleteTest() throws ApiException {
        UUID id = null;
        oas_any_type_not_mapped body = null;
        api.attendancelogDelete(id, body);

        // TODO: test validations
    }
    
    /**
     * Search and view details of an attendance log
     *
     * Allows the user to view an individual attendance log and its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogGetTest() throws ApiException {
        UUID id = null;
        api.attendancelogGet(id);

        // TODO: test validations
    }
    
    /**
     * Search and view details of an attendance log&#39;s swipe history
     *
     * Allows the user to view the swipes of an individual attendance logs (sign ins and sign outs).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogGetchangehistoryTest() throws ApiException {
        UUID id = null;
        api.attendancelogGetchangehistory(id);

        // TODO: test validations
    }
    
    /**
     * View a list of attendance logs
     *
     * Allows the user to view the list of all attendance logs in the location or locations in which the user is scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogListTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        String filter = null;
        UUID userid = null;
        api.attendancelogList(from, count, filter, userid);

        // TODO: test validations
    }
    
    /**
     * Gets the attendance logs of the current user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogListmineTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        String filter = null;
        api.attendancelogListmine(from, count, filter);

        // TODO: test validations
    }
    
    /**
     * Create or edit an attendance log
     *
     * Allows the user to create or edit an attendance log.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogSaveTest() throws ApiException {
        UUID id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        api.attendancelogSave(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Sign out an attendance log
     *
     * Allows the user to sign out am attendance log from the Who&#39;s In page.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogSignoutTest() throws ApiException {
        UUID id = null;
        UUID location = null;
        UUID event = null;
        OffsetDateTime datetime = null;
        api.attendancelogSignout(id, location, event, datetime);

        // TODO: test validations
    }
    
    /**
     * View who&#39;s in a location
     *
     * Allows the user to view the Who&#39;s In page and view all users who are logged into locations in which the user is scoped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attendancelogWhosinTest() throws ApiException {
        Integer from = null;
        Integer count = null;
        UUID location = null;
        UUID event = null;
        String sorting = null;
        String roles = null;
        Integer photosize = null;
        String extensions = null;
        Boolean export = null;
        api.attendancelogWhosin(from, count, location, event, sorting, roles, photosize, extensions, export);

        // TODO: test validations
    }
    
}
