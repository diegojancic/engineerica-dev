<?php
/**
 * DefaultApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AccuCampus OpenAPI 3 Documentation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for actionloglist
     *
     * View a list of users action logs.
     *
     */
    public function testActionloglist()
    {
    }

    /**
     * Test case for advroleaddmissing
     *
     * Adds the missing permissions to a role. Requires access to advrole.save.
     *
     */
    public function testAdvroleaddmissing()
    {
    }

    /**
     * Test case for advrolecheckperm
     *
     * Checks the permissions are assigned for the given roles.
     *
     */
    public function testAdvrolecheckperm()
    {
    }

    /**
     * Test case for advroledelete
     *
     * Delete a role.
     *
     */
    public function testAdvroledelete()
    {
    }

    /**
     * Test case for advroledeletemapping
     *
     * Delete a role mapping.
     *
     */
    public function testAdvroledeletemapping()
    {
    }

    /**
     * Test case for advroleget
     *
     * View details of a role.
     *
     */
    public function testAdvroleget()
    {
    }

    /**
     * Test case for advrolelist
     *
     * Lists the roles for the current account.
     *
     */
    public function testAdvrolelist()
    {
    }

    /**
     * Test case for advrolelistmaps
     *
     * Lists the maps a roles is mapped to.
     *
     */
    public function testAdvrolelistmaps()
    {
    }

    /**
     * Test case for advrolelistrolesmapped
     *
     * Lists the roles mappings.
     *
     */
    public function testAdvrolelistrolesmapped()
    {
    }

    /**
     * Test case for advrolelisttemplates
     *
     * View a list of role templates.
     *
     */
    public function testAdvrolelisttemplates()
    {
    }

    /**
     * Test case for advrolesave
     *
     * Create or edit a role.
     *
     */
    public function testAdvrolesave()
    {
    }

    /**
     * Test case for advrolesavemapping
     *
     * Saves a role mapping.
     *
     */
    public function testAdvrolesavemapping()
    {
    }

    /**
     * Test case for advrolesuserlist
     *
     * List users. Alias to user.list, use that one instead..
     *
     */
    public function testAdvrolesuserlist()
    {
    }

    /**
     * Test case for advroleuserupgrade
     *
     * Upgrade a user to another role (requires permission to edit those roles).
     *
     */
    public function testAdvroleuserupgrade()
    {
    }

    /**
     * Test case for appsharegetphone
     *
     * Gets the phone number of the current user.
     *
     */
    public function testAppsharegetphone()
    {
    }

    /**
     * Test case for appsharesendtext
     *
     * Sends an SMS with the link to the app.
     *
     */
    public function testAppsharesendtext()
    {
    }

    /**
     * Test case for attendancelogcommentdelete
     *
     * Delete a comment on an attendance log.
     *
     */
    public function testAttendancelogcommentdelete()
    {
    }

    /**
     * Test case for attendancelogcommentget
     *
     * View a comment on an attendance log.
     *
     */
    public function testAttendancelogcommentget()
    {
    }

    /**
     * Test case for attendancelogcommentlist
     *
     * View all the comments on a specific attendance log.
     *
     */
    public function testAttendancelogcommentlist()
    {
    }

    /**
     * Test case for attendancelogcommentsave
     *
     * Save a comment on an attendance log.
     *
     */
    public function testAttendancelogcommentsave()
    {
    }

    /**
     * Test case for attendancelogdelete
     *
     * Delete an attendance log.
     *
     */
    public function testAttendancelogdelete()
    {
    }

    /**
     * Test case for attendancelogget
     *
     * Search and view details of an attendance log.
     *
     */
    public function testAttendancelogget()
    {
    }

    /**
     * Test case for attendanceloggetchangehistory
     *
     * Search and view details of an attendance log's swipe history.
     *
     */
    public function testAttendanceloggetchangehistory()
    {
    }

    /**
     * Test case for attendanceloglist
     *
     * View a list of attendance logs.
     *
     */
    public function testAttendanceloglist()
    {
    }

    /**
     * Test case for attendanceloglistmine
     *
     * Gets the attendance logs of the current user.
     *
     */
    public function testAttendanceloglistmine()
    {
    }

    /**
     * Test case for attendancelogsave
     *
     * Create or edit an attendance log.
     *
     */
    public function testAttendancelogsave()
    {
    }

    /**
     * Test case for attendancelogsignout
     *
     * Sign out an attendance log.
     *
     */
    public function testAttendancelogsignout()
    {
    }

    /**
     * Test case for attendancelogwhosin
     *
     * View who's in a location.
     *
     */
    public function testAttendancelogwhosin()
    {
    }

    /**
     * Test case for bgjobgetstatus
     *
     * Get background job status.
     *
     */
    public function testBgjobgetstatus()
    {
    }

    /**
     * Test case for captchagetchallenge
     *
     * Gets a captcha challenge that the user must complete to do certain requests..
     *
     */
    public function testCaptchagetchallenge()
    {
    }

    /**
     * Test case for captchagetimage
     *
     * Gets a captcha image that the user must complete to do certain requests..
     *
     */
    public function testCaptchagetimage()
    {
    }

    /**
     * Test case for changelog
     *
     * Get the application change log.
     *
     */
    public function testChangelog()
    {
    }

    /**
     * Test case for clientget
     *
     * Get client.
     *
     */
    public function testClientget()
    {
    }

    /**
     * Test case for clientlist
     *
     * Gets the clients of the specified conference.
     *
     */
    public function testClientlist()
    {
    }

    /**
     * Test case for clientsave
     *
     * Saves a client.
     *
     */
    public function testClientsave()
    {
    }

    /**
     * Test case for clientsendmessage
     *
     * Send a message to a client.
     *
     */
    public function testClientsendmessage()
    {
    }

    /**
     * Test case for creditdelete
     *
     * Delete a credit.
     *
     */
    public function testCreditdelete()
    {
    }

    /**
     * Test case for creditdiscountmethods
     *
     * Gets the valid discount methods..
     *
     */
    public function testCreditdiscountmethods()
    {
    }

    /**
     * Test case for creditget
     *
     * View details of assigned credit.
     *
     */
    public function testCreditget()
    {
    }

    /**
     * Test case for creditgetuserbalance
     *
     * Get the total amount of credits of the specified user.
     *
     */
    public function testCreditgetuserbalance()
    {
    }

    /**
     * Test case for creditlist
     *
     * View a list of credits for a specific user.
     *
     */
    public function testCreditlist()
    {
    }

    /**
     * Test case for creditlistdetails
     *
     * Gets the credit usage details.
     *
     */
    public function testCreditlistdetails()
    {
    }

    /**
     * Test case for creditlistmine
     *
     * View the list of credits of the current user.
     *
     */
    public function testCreditlistmine()
    {
    }

    /**
     * Test case for creditplandelete
     *
     * Deletes a credit plan.
     *
     */
    public function testCreditplandelete()
    {
    }

    /**
     * Test case for creditplanget
     *
     * Gets a credit plan.
     *
     */
    public function testCreditplanget()
    {
    }

    /**
     * Test case for creditplanlist
     *
     * Gets the credit plans available.
     *
     */
    public function testCreditplanlist()
    {
    }

    /**
     * Test case for creditplansave
     *
     * Saves a credit plan.
     *
     */
    public function testCreditplansave()
    {
    }

    /**
     * Test case for creditsave
     *
     * Create or edit credit for a user.
     *
     */
    public function testCreditsave()
    {
    }

    /**
     * Test case for creditsavedetails
     *
     * Create or edit credit details.
     *
     */
    public function testCreditsavedetails()
    {
    }

    /**
     * Test case for doc
     *
     * Get the documentation.
     *
     */
    public function testDoc()
    {
    }

    /**
     * Test case for easyloginaddbgimage
     *
     * Adds background image for the login.
     *
     */
    public function testEasyloginaddbgimage()
    {
    }

    /**
     * Test case for eventdelete
     *
     * Delete a course.
     *
     */
    public function testEventdelete()
    {
    }

    /**
     * Test case for eventget
     *
     * Search and view details of a course.
     *
     */
    public function testEventget()
    {
    }

    /**
     * Test case for eventgetsessionsbydate
     *
     * View a list of courses by date.
     *
     */
    public function testEventgetsessionsbydate()
    {
    }

    /**
     * Test case for eventlist
     *
     * View a list of courses.
     *
     */
    public function testEventlist()
    {
    }

    /**
     * Test case for eventsave
     *
     * Create or edit a course.
     *
     */
    public function testEventsave()
    {
    }

    /**
     * Test case for eventsearchgroup
     *
     * Searches for the available event groups.
     *
     */
    public function testEventsearchgroup()
    {
    }

    /**
     * Test case for export
     *
     * Export AccuCampus data.
     *
     */
    public function testExport()
    {
    }

    /**
     * Test case for exportlisttypes
     *
     * Lists available export types.
     *
     */
    public function testExportlisttypes()
    {
    }

    /**
     * Test case for featurelist
     *
     * Lists the available features..
     *
     */
    public function testFeaturelist()
    {
    }

    /**
     * Test case for holidaylist
     *
     * View a list of entered holidays.
     *
     */
    public function testHolidaylist()
    {
    }

    /**
     * Test case for holidaysave
     *
     * Create or edit a list of holidays.
     *
     */
    public function testHolidaysave()
    {
    }

    /**
     * Test case for holidaysuggest
     *
     * View the holiday suggestions in the given term.
     *
     */
    public function testHolidaysuggest()
    {
    }

    /**
     * Test case for import
     *
     * Import data into AccuCampus.
     *
     */
    public function testImport()
    {
    }

    /**
     * Test case for importlisttypes
     *
     * Lists available import types.
     *
     */
    public function testImportlisttypes()
    {
    }

    /**
     * Test case for licenseacceptagreement
     *
     * Accept the license agreement.
     *
     */
    public function testLicenseacceptagreement()
    {
    }

    /**
     * Test case for licensegetagreementstatus
     *
     * Check if license agreement has been accepted.
     *
     */
    public function testLicensegetagreementstatus()
    {
    }

    /**
     * Test case for licensegetcurrent
     *
     * Gets the current license information.
     *
     */
    public function testLicensegetcurrent()
    {
    }

    /**
     * Test case for licenserenew
     *
     * Contact Engineerica in order to renew the AccuCampus subscription.
     *
     */
    public function testLicenserenew()
    {
    }

    /**
     * Test case for listtimezones
     *
     * Lists the available timezones.
     *
     */
    public function testListtimezones()
    {
    }

    /**
     * Test case for locationdelete
     *
     * Delete a location.
     *
     */
    public function testLocationdelete()
    {
    }

    /**
     * Test case for locationget
     *
     * Search and view details of a location.
     *
     */
    public function testLocationget()
    {
    }

    /**
     * Test case for locationlist
     *
     * View a list of locations.
     *
     */
    public function testLocationlist()
    {
    }

    /**
     * Test case for locationsave
     *
     * Create or edit a location.
     *
     */
    public function testLocationsave()
    {
    }

    /**
     * Test case for login
     *
     * Login.
     *
     */
    public function testLogin()
    {
    }

    /**
     * Test case for logout
     *
     * Logout.
     *
     */
    public function testLogout()
    {
    }

    /**
     * Test case for memorizedreportdelete
     *
     * Delete memorized report.
     *
     */
    public function testMemorizedreportdelete()
    {
    }

    /**
     * Test case for memorizedreportget
     *
     * View details of a memorized report.
     *
     */
    public function testMemorizedreportget()
    {
    }

    /**
     * Test case for memorizedreportlist
     *
     * View a list of all his memorized reports.
     *
     */
    public function testMemorizedreportlist()
    {
    }

    /**
     * Test case for memorizedreportsave
     *
     * Create or edit a memorized report.
     *
     */
    public function testMemorizedreportsave()
    {
    }

    /**
     * Test case for menugetitems
     *
     * Gets the items on the menu.
     *
     */
    public function testMenugetitems()
    {
    }

    /**
     * Test case for myaccount
     *
     * Gets the logged in user account..
     *
     */
    public function testMyaccount()
    {
    }

    /**
     * Test case for myianatimezone
     *
     * Gets the current time zone's iana name.
     *
     */
    public function testMyianatimezone()
    {
    }

    /**
     * Test case for myprofile
     *
     * Gets the logged in user information..
     *
     */
    public function testMyprofile()
    {
    }

    /**
     * Test case for myrights
     *
     * Gets the list of actions the user can execute..
     *
     */
    public function testMyrights()
    {
    }

    /**
     * Test case for mysaveprofile
     *
     * Updates logged user's profile information.
     *
     */
    public function testMysaveprofile()
    {
    }

    /**
     * Test case for notificationdelete
     *
     * Delete a notification.
     *
     */
    public function testNotificationdelete()
    {
    }

    /**
     * Test case for notificationget
     *
     * View a notification.
     *
     */
    public function testNotificationget()
    {
    }

    /**
     * Test case for notificationgetforstation
     *
     * Gets all public (in station) notifications for the specific user.
     *
     */
    public function testNotificationgetforstation()
    {
    }

    /**
     * Test case for notificationgetunreadcount
     *
     * Get the number of unread notifications.
     *
     */
    public function testNotificationgetunreadcount()
    {
    }

    /**
     * Test case for notificationlist
     *
     * View a list of all sent notifications.
     *
     */
    public function testNotificationlist()
    {
    }

    /**
     * Test case for notificationlistmine
     *
     * View all the notifications sent to the current user.
     *
     */
    public function testNotificationlistmine()
    {
    }

    /**
     * Test case for notificationmarkasread
     *
     * Mark a notification as read.
     *
     */
    public function testNotificationmarkasread()
    {
    }

    /**
     * Test case for notificationmarkasunread
     *
     * Mark a notification as unread.
     *
     */
    public function testNotificationmarkasunread()
    {
    }

    /**
     * Test case for notificationsend
     *
     * Send notifications on screen, via email or text to users.
     *
     */
    public function testNotificationsend()
    {
    }

    /**
     * Test case for notificationsendonscreen
     *
     * Send on-screen notifications.
     *
     */
    public function testNotificationsendonscreen()
    {
    }

    /**
     * Test case for notificationtopicdelete
     *
     * Delete a notification topic.
     *
     */
    public function testNotificationtopicdelete()
    {
    }

    /**
     * Test case for notificationtopicget
     *
     * Search and view details of a notification topic.
     *
     */
    public function testNotificationtopicget()
    {
    }

    /**
     * Test case for notificationtopiclist
     *
     * List all the notification topics.
     *
     */
    public function testNotificationtopiclist()
    {
    }

    /**
     * Test case for notificationtopiclistsubscribe
     *
     * List all the notification topics available to subscribe.
     *
     */
    public function testNotificationtopiclistsubscribe()
    {
    }

    /**
     * Test case for notificationtopicsave
     *
     * Create or edit a notification topic.
     *
     */
    public function testNotificationtopicsave()
    {
    }

    /**
     * Test case for pushderegister
     *
     * Deregisters the current device to receive push notifications.
     *
     */
    public function testPushderegister()
    {
    }

    /**
     * Test case for pushregister
     *
     * Registers the current device to receive push notifications.
     *
     */
    public function testPushregister()
    {
    }

    /**
     * Test case for qrlabelsprint
     *
     * Print and email QR labels.
     *
     */
    public function testQrlabelsprint()
    {
    }

    /**
     * Test case for qrloginget
     *
     * Gets an image of a QR token.
     *
     */
    public function testQrloginget()
    {
    }

    /**
     * Test case for qrloginlogin
     *
     * Login.
     *
     */
    public function testQrloginlogin()
    {
    }

    /**
     * Test case for quickpaneldeletewidget
     *
     * Deletes a widget from the Quick Panel.
     *
     */
    public function testQuickpaneldeletewidget()
    {
    }

    /**
     * Test case for quickpanelfetchwidget
     *
     * Fetches the information for a specific widget..
     *
     */
    public function testQuickpanelfetchwidget()
    {
    }

    /**
     * Test case for quickpanelgetwidget
     *
     * View details of a widget included in the Quick Panel.
     *
     */
    public function testQuickpanelgetwidget()
    {
    }

    /**
     * Test case for quickpanelinit
     *
     * Returns the initial information required to show the quick panels.
     *
     */
    public function testQuickpanelinit()
    {
    }

    /**
     * Test case for quickpanellistwidgets
     *
     * Lists all the widgets that are added in the Quick Panel.
     *
     */
    public function testQuickpanellistwidgets()
    {
    }

    /**
     * Test case for quickpanellistwidgettypes
     *
     * Lists all the widget types available in the system.
     *
     */
    public function testQuickpanellistwidgettypes()
    {
    }

    /**
     * Test case for quickpanelreorderwidgets
     *
     * Reorders the widgets and moves them to a specific column.
     *
     */
    public function testQuickpanelreorderwidgets()
    {
    }

    /**
     * Test case for quickpanelsavewidget
     *
     * Saves a widget for the Quick Panel.
     *
     */
    public function testQuickpanelsavewidget()
    {
    }

    /**
     * Test case for reportlist
     *
     * View a list of available reports.
     *
     */
    public function testReportlist()
    {
    }

    /**
     * Test case for reportpermissionsbyuser
     *
     * Permissions by user report.
     *
     */
    public function testReportpermissionsbyuser()
    {
    }

    /**
     * Test case for reportprepare
     *
     * Queries and loads the specified report, in background..
     *
     */
    public function testReportprepare()
    {
    }

    /**
     * Test case for reportquery
     *
     * Query and load a specified report.
     *
     */
    public function testReportquery()
    {
    }

    /**
     * Test case for rolelist
     *
     * Show a list of roles.
     *
     */
    public function testRolelist()
    {
    }

    /**
     * Test case for ruledelete
     *
     * Delete a rule.
     *
     */
    public function testRuledelete()
    {
    }

    /**
     * Test case for ruleget
     *
     * View details of a rule.
     *
     */
    public function testRuleget()
    {
    }

    /**
     * Test case for rulegeteventtype
     *
     * View details of a rule event type.
     *
     */
    public function testRulegeteventtype()
    {
    }

    /**
     * Test case for rulelist
     *
     * View a list of user rules.
     *
     */
    public function testRulelist()
    {
    }

    /**
     * Test case for rulelistactions
     *
     * View a list of rule actions available.
     *
     */
    public function testRulelistactions()
    {
    }

    /**
     * Test case for rulelisteventtypes
     *
     * View a list of rule event types.
     *
     */
    public function testRulelisteventtypes()
    {
    }

    /**
     * Test case for rulelisthttprequests
     *
     * View all the http requests sent as a result of a rule.
     *
     */
    public function testRulelisthttprequests()
    {
    }

    /**
     * Test case for rulesave
     *
     * Create or edit a rule.
     *
     */
    public function testRulesave()
    {
    }

    /**
     * Test case for search
     *
     * Search.
     *
     */
    public function testSearch()
    {
    }

    /**
     * Test case for searchgetentities
     *
     * Get the information of the entities that can be searched.
     *
     */
    public function testSearchgetentities()
    {
    }

    /**
     * Test case for securityassesspermission
     *
     * Returns the list of users for a specific permission.
     *
     */
    public function testSecurityassesspermission()
    {
    }

    /**
     * Test case for securityassessrole
     *
     * Returns the list of permissions for a specific role.
     *
     */
    public function testSecurityassessrole()
    {
    }

    /**
     * Test case for securityassessscope
     *
     * Returns the list of users for a specific user.
     *
     */
    public function testSecurityassessscope()
    {
    }

    /**
     * Test case for securityassessuser
     *
     * Returns the list of permissions for a specific user.
     *
     */
    public function testSecurityassessuser()
    {
    }

    /**
     * Test case for sessionregaddcurrentuser
     *
     * Register current user to an event session.
     *
     */
    public function testSessionregaddcurrentuser()
    {
    }

    /**
     * Test case for sessionregadduser
     *
     * Register users for events.
     *
     */
    public function testSessionregadduser()
    {
    }

    /**
     * Test case for sessionreggetmysessions
     *
     * View all the sessions the logged user is registered to.
     *
     */
    public function testSessionreggetmysessions()
    {
    }

    /**
     * Test case for sessionreggetsessions
     *
     * Lists the registrations for a specific user.
     *
     */
    public function testSessionreggetsessions()
    {
    }

    /**
     * Test case for sessionreggetsettings
     *
     * Get the settings for session registration.
     *
     */
    public function testSessionreggetsettings()
    {
    }

    /**
     * Test case for sessionreggetusers
     *
     * Lists the registrations for a specific session.
     *
     */
    public function testSessionreggetusers()
    {
    }

    /**
     * Test case for sessionreglistsessions
     *
     * List the sessions available for a specific event.
     *
     */
    public function testSessionreglistsessions()
    {
    }

    /**
     * Test case for sessionreglistupcoming
     *
     * View a list of upcoming event sessions.
     *
     */
    public function testSessionreglistupcoming()
    {
    }

    /**
     * Test case for sessionreglistupcomingevent
     *
     * View a list of upcoming sessions of a particular event.
     *
     */
    public function testSessionreglistupcomingevent()
    {
    }

    /**
     * Test case for sessionregremovecurrentuser
     *
     * Unregister current user from an event session.
     *
     */
    public function testSessionregremovecurrentuser()
    {
    }

    /**
     * Test case for sessionregremoveuser
     *
     * Removes a user from an event session.
     *
     */
    public function testSessionregremoveuser()
    {
    }

    /**
     * Test case for sessionregsavesettings
     *
     * Save the settings for an event's session registration.
     *
     */
    public function testSessionregsavesettings()
    {
    }

    /**
     * Test case for settingaddlogo
     *
     * Add a logo to the account.
     *
     */
    public function testSettingaddlogo()
    {
    }

    /**
     * Test case for settingget
     *
     * Get settings for the account or the specified scope.
     *
     */
    public function testSettingget()
    {
    }

    /**
     * Test case for settingsave
     *
     * Save settings for the account or the specified scope.
     *
     */
    public function testSettingsave()
    {
    }

    /**
     * Test case for settingviewgeneral
     *
     * View general settings for the account.
     *
     */
    public function testSettingviewgeneral()
    {
    }

    /**
     * Test case for ssogeneratekey
     *
     * Generate/reset single sign on access key..
     *
     */
    public function testSsogeneratekey()
    {
    }

    /**
     * Test case for ssogetsettings
     *
     * View single sign on settings..
     *
     */
    public function testSsogetsettings()
    {
    }

    /**
     * Test case for ssoissuetoken
     *
     * Issue single sign-on token.
     *
     */
    public function testSsoissuetoken()
    {
    }

    /**
     * Test case for ssosavesettings
     *
     * Edit single sign-on settings..
     *
     */
    public function testSsosavesettings()
    {
    }

    /**
     * Test case for stationdelete
     *
     * Delete a sign-in station.
     *
     */
    public function testStationdelete()
    {
    }

    /**
     * Test case for stationget
     *
     * View details of a sign-in station.
     *
     */
    public function testStationget()
    {
    }

    /**
     * Test case for stationgetcurrentterms
     *
     * Get all the current terms.
     *
     */
    public function testStationgetcurrentterms()
    {
    }

    /**
     * Test case for stationgetinfo
     *
     * Gets a the info to display in the sign-in station by it's ID..
     *
     */
    public function testStationgetinfo()
    {
    }

    /**
     * Test case for stationgetlicense
     *
     * Gets the current license information.
     *
     */
    public function testStationgetlicense()
    {
    }

    /**
     * Test case for stationlist
     *
     * View a list of sign-in stations.
     *
     */
    public function testStationlist()
    {
    }

    /**
     * Test case for stationsave
     *
     * Create or edit a sign-in station.
     *
     */
    public function testStationsave()
    {
    }

    /**
     * Test case for stationunlock
     *
     * Unlocks the sign-in station..
     *
     */
    public function testStationunlock()
    {
    }

    /**
     * Test case for swipedelete
     *
     * Delete a swipe.
     *
     */
    public function testSwipedelete()
    {
    }

    /**
     * Test case for swipeget
     *
     * Search and view details of a swipe.
     *
     */
    public function testSwipeget()
    {
    }

    /**
     * Test case for swipelist
     *
     * View a list of swipes.
     *
     */
    public function testSwipelist()
    {
    }

    /**
     * Test case for swipesave
     *
     * Create or edit a swipe, and if possible, save the related attendance log.
     *
     */
    public function testSwipesave()
    {
    }

    /**
     * Test case for swipesaveanonym
     *
     * Creates a new swipe from a sign-in station, and if possible, creates the attendance log.
     *
     */
    public function testSwipesaveanonym()
    {
    }

    /**
     * Test case for tagdelete
     *
     * Delete a tag.
     *
     */
    public function testTagdelete()
    {
    }

    /**
     * Test case for tagget
     *
     * View details of a specified tag.
     *
     */
    public function testTagget()
    {
    }

    /**
     * Test case for taglist
     *
     * View a list of tags.
     *
     */
    public function testTaglist()
    {
    }

    /**
     * Test case for taglistgroups
     *
     * View a list of entities that can be tagged.
     *
     */
    public function testTaglistgroups()
    {
    }

    /**
     * Test case for tagsave
     *
     * Create or edit a tag.
     *
     */
    public function testTagsave()
    {
    }

    /**
     * Test case for tagsearch
     *
     * Search for tags in the account.
     *
     */
    public function testTagsearch()
    {
    }

    /**
     * Test case for templateaddimage
     *
     * Add an image to a template.
     *
     */
    public function testTemplateaddimage()
    {
    }

    /**
     * Test case for templatedelete
     *
     * Delete a template.
     *
     */
    public function testTemplatedelete()
    {
    }

    /**
     * Test case for templateemail
     *
     * Send generated templates by email.
     *
     */
    public function testTemplateemail()
    {
    }

    /**
     * Test case for templategenerate
     *
     * Generate specified templates.
     *
     */
    public function testTemplategenerate()
    {
    }

    /**
     * Test case for templateget
     *
     * View details of a template.
     *
     */
    public function testTemplateget()
    {
    }

    /**
     * Test case for templategetgenerated
     *
     * View generated templates.
     *
     */
    public function testTemplategetgenerated()
    {
    }

    /**
     * Test case for templatelist
     *
     * View a list of defined templates.
     *
     */
    public function testTemplatelist()
    {
    }

    /**
     * Test case for templatelistsources
     *
     * View a list of templates' data sources.
     *
     */
    public function testTemplatelistsources()
    {
    }

    /**
     * Test case for templatesave
     *
     * Create or edit a template.
     *
     */
    public function testTemplatesave()
    {
    }

    /**
     * Test case for templatesavelayout
     *
     * Save the layout of a template.
     *
     */
    public function testTemplatesavelayout()
    {
    }

    /**
     * Test case for termdelete
     *
     * Delete a term.
     *
     */
    public function testTermdelete()
    {
    }

    /**
     * Test case for termget
     *
     * Search and view details of a term.
     *
     */
    public function testTermget()
    {
    }

    /**
     * Test case for termlist
     *
     * Search and view details of all terms.
     *
     */
    public function testTermlist()
    {
    }

    /**
     * Test case for termsave
     *
     * Create and edit terms.
     *
     */
    public function testTermsave()
    {
    }

    /**
     * Test case for textcreditremaining
     *
     * Gets the remaining text credits for the account.
     *
     */
    public function testTextcreditremaining()
    {
    }

    /**
     * Test case for texttoimage
     *
     * Generates a dynamic image from text.
     *
     */
    public function testTexttoimage()
    {
    }

    /**
     * Test case for translationget
     *
     * Gets the translations of the specified values.
     *
     */
    public function testTranslationget()
    {
    }

    /**
     * Test case for translationgetcachefile
     *
     * Get the file containing the translations.
     *
     */
    public function testTranslationgetcachefile()
    {
    }

    /**
     * Test case for translationlist
     *
     * Lists all the available translations in the system.
     *
     */
    public function testTranslationlist()
    {
    }

    /**
     * Test case for translationsave
     *
     * Edit a translation.
     *
     */
    public function testTranslationsave()
    {
    }

    /**
     * Test case for userchangepwd
     *
     * Change user's own password.
     *
     */
    public function testUserchangepwd()
    {
    }

    /**
     * Test case for userchangepwdbyreq
     *
     * Changes the user password using a change password request id.
     *
     */
    public function testUserchangepwdbyreq()
    {
    }

    /**
     * Test case for userdelete
     *
     * Delete a user.
     *
     */
    public function testUserdelete()
    {
    }

    /**
     * Test case for userfindsimilar
     *
     * Finds similar users to prevent duplicates.
     *
     */
    public function testUserfindsimilar()
    {
    }

    /**
     * Test case for userget
     *
     * Search and view details of a user.
     *
     */
    public function testUserget()
    {
    }

    /**
     * Test case for usergetbycard
     *
     * Search user by card number.
     *
     */
    public function testUsergetbycard()
    {
    }

    /**
     * Test case for usergroupaddmember
     *
     * Add a user to a group.
     *
     */
    public function testUsergroupaddmember()
    {
    }

    /**
     * Test case for usergroupdelete
     *
     * Delete a group.
     *
     */
    public function testUsergroupdelete()
    {
    }

    /**
     * Test case for usergroupget
     *
     * Search and view details of a user group.
     *
     */
    public function testUsergroupget()
    {
    }

    /**
     * Test case for usergroupgetmembers
     *
     * View the members of a user group.
     *
     */
    public function testUsergroupgetmembers()
    {
    }

    /**
     * Test case for usergroupgetuser
     *
     * View the groups which a user is registered to.
     *
     */
    public function testUsergroupgetuser()
    {
    }

    /**
     * Test case for usergrouplist
     *
     * View a list of user groups.
     *
     */
    public function testUsergrouplist()
    {
    }

    /**
     * Test case for usergrouprefresh
     *
     * Refresh the dynamic group.
     *
     */
    public function testUsergrouprefresh()
    {
    }

    /**
     * Test case for usergroupremovemember
     *
     * Remove a user from a group.
     *
     */
    public function testUsergroupremovemember()
    {
    }

    /**
     * Test case for usergroupsave
     *
     * Create or edit a group.
     *
     */
    public function testUsergroupsave()
    {
    }

    /**
     * Test case for userlist
     *
     * View a list of users.
     *
     */
    public function testUserlist()
    {
    }

    /**
     * Test case for userloadphoto
     *
     * Upload a photo for a specific user.
     *
     */
    public function testUserloadphoto()
    {
    }

    /**
     * Test case for usermovedata
     *
     * Move data between users.
     *
     */
    public function testUsermovedata()
    {
    }

    /**
     * Test case for userrequestpwdchange
     *
     * Requests a password change.
     *
     */
    public function testUserrequestpwdchange()
    {
    }

    /**
     * Test case for usersave
     *
     * Create or edit a user.
     *
     */
    public function testUsersave()
    {
    }

    /**
     * Test case for usersavepwdchange
     *
     * Send email to the specified user(s) to set/change their passwords.
     *
     */
    public function testUsersavepwdchange()
    {
    }

    /**
     * Test case for usersettingsget
     *
     * Lists available user settings.
     *
     */
    public function testUsersettingsget()
    {
    }

    /**
     * Test case for usersettingsgetmultiple
     *
     * Get multiple user settings.
     *
     */
    public function testUsersettingsgetmultiple()
    {
    }

    /**
     * Test case for usersettingssave
     *
     * Saves a user setting.
     *
     */
    public function testUsersettingssave()
    {
    }

    /**
     * Test case for usersettingssavemultiple
     *
     * Save multiple user settings at once.
     *
     */
    public function testUsersettingssavemultiple()
    {
    }

    /**
     * Test case for version
     *
     * Get current version information.
     *
     */
    public function testVersion()
    {
    }
}
