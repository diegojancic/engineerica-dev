=begin
#AccuClub OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::GeneralApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GeneralApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::GeneralApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GeneralApi' do
    it 'should create an instance of GeneralApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::GeneralApi)
    end
  end

  # unit tests for changelog
  # Get the application change log
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'changelog test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for doc
  # Get the documentation
  # Retrieves the list of actions available in the system.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :excludeanonymous If true it excludes the anonymous actions from the returned list.
  # @return [nil]
  describe 'doc test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for export
  # Export AccuClub data
  # Allows the user to export data from AccuClub into a CSV, HTML, or Excel format.
  # @param exporttype What to export.
  # @param exportformat The format of the resulting file. Valid types are CSV, HTML, XLS.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filters Pipe separated filters for the export, eg: aaa&#x3D;val|bbb&#x3D;val|...
  # @return [nil]
  describe 'export test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import
  # Import data into AccuClub
  # Allows the user to import data into AccuClub via CSV or flat files either manually or automatically using the import utility.
  # @param importtype The kind of data that is being uploaded.
  # @param upload Set &#39;file&#39; as value to indicate that a file is being submitted in the body (instead of a JSON object).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filename The local name of the uploaded file. For later reference.
  # @option opts [String] :parameters Import parameters, in a key-value pair JSON-serialized object. Eg {&#39;parameter&#39;:&#39;value&#39;}.
  # @return [nil]
  describe 'import test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listtimezones
  # Lists the available timezones
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'listtimezones test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for login
  # Login
  # @param domain The account domain to login.
  # @param username The username (email) of the user to login as.
  # @param password The password of the user to login as.
  # @param method The authentication method. Valid values are &#39;token&#39; and &#39;cookie&#39;.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :rememberme If true then the session will not expire.
  # @return [nil]
  describe 'login test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for logout
  # Logout
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'logout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # Search
  # @param query The query to search for.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Current page to show, zero-based.
  # @return [nil]
  describe 'search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for texttoimage
  # Generates a dynamic image from text
  # @param text The text to convert to an image, use double pipes (||) as a new line.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fontcolor The color of the text, in hex format, without the #.
  # @option opts [Integer] :fontsize The size of the text, in points.
  # @option opts [String] :direction Either vertical or horizontal, default horizontal.
  # @option opts [Integer] :width The image width in pixels (or height if the direction is vertical).
  # @return [nil]
  describe 'texttoimage test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for version
  # Get current version information
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'version test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
