=begin
#AccuClub OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::StationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'StationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::StationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StationApi' do
    it 'should create an instance of StationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::StationApi)
    end
  end

  # unit tests for station_delete
  # Delete a sign-in station
  # Allows the user to delete a sign-in station from the list of existing sign-in stations that they can view based on their scope.
  # @param id The id of the sign-in station to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [AnyType] :body 
  # @return [nil]
  describe 'station_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_get
  # View details of a sign-in station
  # Allows the user to view an individual sign-in station and its details.
  # @param id The id of the sign-in station to get.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'station_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_getcurrentterms
  # Get all the current terms
  # @param station The id of the sign-in station whose account&#39;s current terms have to be retrieved.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'station_getcurrentterms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_getinfo
  # Gets a the info to display in the sign-in station by it&#39;s ID.
  # @param id The id of the sign-in station to get.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :event The id of the event, to override the one by schedule.
  # @return [nil]
  describe 'station_getinfo test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_getlicense
  # Gets the current license information
  # @param station The id of the sign-in station whose account&#39;s license has to be retrieved.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'station_getlicense test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_list
  # View a list of sign-in stations
  # Allows the user to view the list of sign-in stations, limited to the stations in the locations to which they are scoped.
  # @param from The first record to return.
  # @param count The max number of records to return.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'station_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_save
  # Create or edit a sign-in station
  # Allows the user to create, edit, or install a sign-in station based in an area to which they are scoped.
  # @param id The id of the sign-in station to save (leave empty to create a new one).
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [nil]
  describe 'station_save test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for station_unlock
  # Unlocks the sign-in station.
  # @param id The id of the sign-in station to unlock.
  # @param passcode The passcode to unlock the station.
  # @param method The authentication method. Valid values are &#39;token&#39; and &#39;cookie&#39;.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'station_unlock test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
