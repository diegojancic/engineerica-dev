=begin
#AccuClub OpenAPI 3

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ReportApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReportApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ReportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportApi' do
    it 'should create an instance of ReportApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ReportApi)
    end
  end

  # unit tests for report_list
  # View a list of available reports
  # Allows the user to view the complete list of available, canned reports.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'report_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_permissionsbyuser
  # Permissions by user report
  # Lists all the users in the system including their corresponding permissions.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params A pipe separated list of the parameters. Example: key1&#x3D;value1|key2&#x3D;value2|key3&#x3D;value3
  # @return [nil]
  describe 'report_permissionsbyuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_prepare
  # Queries and loads the specified report, in background.
  # Allows the user to run reports, in background, with the exception of attendance analytics reports.
  # @param reportname The name of the report to execute
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params A pipe separated list of the parameters. Example: key1&#x3D;value1|key2&#x3D;value2|key3&#x3D;value3
  # @option opts [String] :repformat The format of the resulting report. Json, pdf, csv, ...
  # @option opts [String] :fillgroupid If specified, the result is used to fill the group with the given ID
  # @option opts [String] :groupby How to group the records. In the format &#39;col1+col2|col3+col4
  # @option opts [String] :refreshgroup The ID of the group to check (and refresh) before processing the report.
  # @option opts [String] :filtertext The user friendly text of the applied filters.
  # @return [nil]
  describe 'report_prepare test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_query
  # Query and load a specified report
  # Allows the user to run reports with the exception of attendance analytics reports.
  # @param reportname The name of the report to execute
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params A pipe separated list of the parameters. Example: key1&#x3D;value1|key2&#x3D;value2|key3&#x3D;value3
  # @return [nil]
  describe 'report_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
