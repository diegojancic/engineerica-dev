/**
 * AccuClub OpenAPI 3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AccuClubOpenApi3);
  }
}(this, function(expect, AccuClubOpenApi3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AccuClubOpenApi3.AdvroleApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdvroleApi', function() {
    describe('advroleAddmissing', function() {
      it('should call advroleAddmissing successfully', function(done) {
        //uncomment below and update the code to test advroleAddmissing
        //instance.advroleAddmissing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleCheckperm', function() {
      it('should call advroleCheckperm successfully', function(done) {
        //uncomment below and update the code to test advroleCheckperm
        //instance.advroleCheckperm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleDelete', function() {
      it('should call advroleDelete successfully', function(done) {
        //uncomment below and update the code to test advroleDelete
        //instance.advroleDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleDeletemapping', function() {
      it('should call advroleDeletemapping successfully', function(done) {
        //uncomment below and update the code to test advroleDeletemapping
        //instance.advroleDeletemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleGet', function() {
      it('should call advroleGet successfully', function(done) {
        //uncomment below and update the code to test advroleGet
        //instance.advroleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleList', function() {
      it('should call advroleList successfully', function(done) {
        //uncomment below and update the code to test advroleList
        //instance.advroleList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleListmaps', function() {
      it('should call advroleListmaps successfully', function(done) {
        //uncomment below and update the code to test advroleListmaps
        //instance.advroleListmaps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleListrolesmapped', function() {
      it('should call advroleListrolesmapped successfully', function(done) {
        //uncomment below and update the code to test advroleListrolesmapped
        //instance.advroleListrolesmapped(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleListtemplates', function() {
      it('should call advroleListtemplates successfully', function(done) {
        //uncomment below and update the code to test advroleListtemplates
        //instance.advroleListtemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleSave', function() {
      it('should call advroleSave successfully', function(done) {
        //uncomment below and update the code to test advroleSave
        //instance.advroleSave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleSavemapping', function() {
      it('should call advroleSavemapping successfully', function(done) {
        //uncomment below and update the code to test advroleSavemapping
        //instance.advroleSavemapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('advroleUserupgrade', function() {
      it('should call advroleUserupgrade successfully', function(done) {
        //uncomment below and update the code to test advroleUserupgrade
        //instance.advroleUserupgrade(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
